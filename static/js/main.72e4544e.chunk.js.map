{"version":3,"sources":["assets/icons/trash.svg","components/ThemeContext/index.tsx","constants/designSystem.ts","App/styled.ts","components/Avatar/index.tsx","components/Pane/index.tsx","components/Profile/index.tsx","assets/icons/settings.svg","components/Button/SettingsButton/styled.ts","components/Button/SettingsButton/index.tsx","components/Button/ToggleSwitch/styled.ts","components/Button/ToggleSwitch/index.tsx","components/Header/styled.ts","i18n/messages/translate.tsx","pages/Home/components/OperationFilters/styled.ts","pages/Home/components/OperationFilters/index.tsx","assets/icons/category-icons/donut.svg","assets/icons/category-icons/home.svg","assets/icons/category-icons/aid.svg","assets/icons/category-icons/benefits.svg","assets/icons/category-icons/books.svg","assets/icons/category-icons/chat.svg","assets/icons/category-icons/credit.svg","assets/icons/category-icons/earth.svg","assets/icons/category-icons/home-appliance.svg","assets/icons/category-icons/insurance.svg","assets/icons/category-icons/kindergarten.svg","assets/icons/category-icons/wardrobe.svg","assets/icons/category-icons/sport.svg","assets/icons/category-icons/tax.svg","assets/icons/category-icons/vehicles.svg","assets/icons/category-icons/medal.svg","assets/icons/category-icons/statistics.svg","assets/icons/category-icons/medicine.svg","assets/icons/category-icons/water.svg","assets/icons/category-icons/giftbox.svg","assets/icons/category-icons/sunbed.svg","utils/selectCategory.ts","assets/icons/category-icons/tv.svg","assets/icons/category-icons/salary.svg","assets/icons/category-icons/petrol.svg","assets/icons/category-icons/tools.svg","assets/icons/category-icons/living-room.svg","pages/Home/components/OperationFilters/OperationFiltersItem/styled.ts","pages/Home/components/OperationFilters/OperationFiltersItem/index.tsx","pages/Home/components/OperationFilters/OperationFiltersAddButton/styled.ts","pages/Home/components/OperationFilters/OperationFiltersAddButton/index.tsx","services/ApiService/index.ts","services/OperationsService/index.ts","stores/OperationsStore.ts","pages/Home/components/Dialog/index.tsx","pages/Home/containers/AddTransaction/AddTransactionForm/styled.ts","pages/Home/containers/OperationFiltersSection/FiltersCollection/styled.ts","pages/Home/containers/OperationFiltersSection/FiltersCollection/index.tsx","pages/Home/containers/OperationFiltersSection/styled.ts","pages/Home/containers/OperationFiltersSection/index.tsx","pages/Home/components/Table/styled.ts","pages/Home/components/Table/index.tsx","pages/Home/components/Pagination/styled.tsx","pages/Home/components/Pagination/index.tsx","pages/Home/components/Table/TableTitle/styled.ts","pages/Home/components/Table/TableTitle/index.tsx","pages/Home/components/Checkbox/styled.tsx","pages/Home/components/Checkbox/index.tsx","pages/Home/containers/TableContainer/TableTypeFilters/styled.ts","pages/Home/containers/TableContainer/TableTypeFilters/index.tsx","assets/icons/calendar.svg","components/DatePicker/styled.tsx","components/DatePicker/index.tsx","pages/Home/containers/TableContainer/TableDatePicker/styled.ts","pages/Home/containers/TableContainer/TableDatePicker/index.tsx","pages/Home/containers/TableContainer/TablePreHeader/styled.ts","pages/Home/containers/TableContainer/TablePreHeader/index.tsx","pages/Home/components/Table/TableHead/styled.ts","pages/Home/components/Table/TableHead/index.tsx","pages/Home/components/Table/TableHeaderCell/styled.ts","pages/Home/components/Table/TableHeaderCell/index.tsx","assets/icons/arrow-down.svg","pages/Home/components/Table/TableTextHeaderCell/styled.ts","pages/Home/components/Table/TableTextHeaderCell/index.tsx","pages/Home/containers/TableContainer/styled.ts","pages/Home/containers/TableContainer/TableHeader/index.tsx","pages/Home/components/Table/TableBody/styled.ts","pages/Home/components/Table/TableBody/index.tsx","components/Placeholder/styled.ts","components/Placeholder/index.tsx","pages/Home/components/Table/TableCell/styled.ts","pages/Home/components/Table/TableCell/index.tsx","pages/Home/components/Table/TableRow/styled.ts","pages/Home/components/Table/TableRow/index.tsx","pages/Home/components/Table/TableTextCell/styled.ts","pages/Home/components/Table/TableTextCell/index.tsx","components/Button/TrashButton/styled.ts","assets/icons/arrow-right.svg","components/Button/TrashButton/index.tsx","pages/Home/containers/DeleteTransaction/index.tsx","components/Button/RightArrowButton/styled.ts","assets/icons/edit.svg","components/Button/RightArrowButton/index.tsx","pages/Home/containers/TableContainer/TableButtons/RightArrowAction/index.tsx","pages/Home/containers/TableContainer/TableButtons/styled.ts","pages/Home/containers/TableContainer/TableButtons/index.tsx","pages/Home/containers/TableContainer/TableData/styled.ts","pages/Home/containers/TableContainer/TableData/index.tsx","pages/Home/containers/TableContainer/TableRender/index.tsx","pages/Home/components/Sidebar/styled.tsx","pages/Home/components/Sidebar/index.tsx","components/Button/EditButton/styled.ts","components/Button/EditButton/index.tsx","components/Combobox/styled.ts","components/Combobox/index.tsx","components/SegmentedControl/index.tsx","components/Label/index.tsx","components/Button/index.tsx","components/Input/index.tsx","constants/transactionTypes.ts","pages/Home/containers/EditTransaction/EditTransactionForm/index.tsx","pages/Home/containers/EditTransaction/index.tsx","pages/Home/containers/SidebarWithTransaction/SidebarButtons/styled.ts","pages/Home/containers/SidebarWithTransaction/SidebarButtons/index.tsx","pages/Home/containers/SidebarWithTransaction/styled.ts","pages/Home/containers/SidebarWithTransaction/index.tsx","pages/Home/containers/SidebarWithCheckedTransactions/TransactionElement/styled.ts","pages/Home/containers/SidebarWithCheckedTransactions/TransactionElement/index.tsx","pages/Home/containers/SidebarWithCheckedTransactions/styled.ts","pages/Home/containers/SidebarWithCheckedTransactions/index.tsx","utils/getDateRange.ts","pages/Home/containers/TableContainer/index.tsx","pages/Home/containers/TableWithFiltres/index.tsx","assets/icons/plus.svg","components/Plus/styled.ts","components/Plus/index.tsx","pages/Home/containers/AddTransaction/AddTransactionForm/index.tsx","pages/Home/containers/AddTransaction/index.tsx","components/ChartBar/styled.ts","components/ChartBar/constants/charConfig.ts","components/ChartBar/index.tsx","components/ChartPie/constants/charConfig.ts","assets/icons/pie-chart-svgrepo-com.svg","components/ChartPie/styled.ts","components/ChartPie/index.tsx","pages/Info/components/GeneralIncExp/styled.ts","pages/Info/components/GeneralIncExp/index.tsx","pages/Info/styled.ts","pages/Info/components/BudgetSwitcher/styled.ts","pages/Info/components/BudgetSwitcher/index.tsx","constants/navigationRoutes.ts","pages/Home/index.tsx","pages/Info/index.tsx","assets/icons/logo.svg","i18n/locales.ts","i18n/messages/en.ts","i18n/messages/ru.ts","i18n/messages/index.ts","i18n/provider.tsx","components/Button/TranslateButton/styled.ts","components/Button/TranslateButton/index.tsx","components/Header/index.tsx","components/Footer/styled.ts","components/Footer/index.tsx","pages/Auth/containers/AuthForm/styled.ts","pages/Auth/containers/AuthForm/index.tsx","pages/Auth/styled.ts","pages/Auth/index.tsx","pages/Auth/containers/PrivateRoute/index.tsx","App/NavigationSwitch/index.tsx","App/index.tsx","index.tsx"],"names":["_path","themeColours","light","color","backgroundColor","colorLight","backgroundColorBlock","colorInc","colorExp","nightBlue","bgCalendar","colorWhite","pagination","dark","ThemeContext","React","createContext","undefined","ThemeProvider","children","useState","themeName","setThemeName","useEffect","darkOS","window","matchMedia","matches","setTheme","themeTrack","localStorage","getItem","JSON","parse","setItem","stringify","name","document","body","style","setProperty","Provider","value","theme","designSystem","createGlobalStyle","normal","white","green","red","cornflowerblue","fontSize","lineHeight","grey","danger","warning","success","weight","small","bold","base","base10","primary","black","leftSide","width","rightSide","MainContainer","styled","div","Avatar","size","Pane","props","Profile","display","alignItems","gap","StyledButton","IconButton","SettingsIcon","SettingsButton","SwitchLabel","label","SliderSpan","span","CustomInput","input","SwitchCheckbox","ToggleSwitch","useContext","checked","setChecked","className","type","onClick","onChange","prevState","HeaderLinks","ul","StyledNavLink","NavLink","HeaderContainer","HeaderLeftSide","HeaderRightSide","Translate","id","values","StyledOperationFilters","OperationFilters","categories","title","icon","Food","Home","Clothes","Transport","Credit","Gift","Benefit","Aid","Award","Tax","Phone","PublicService","Kindergarten","Gym","Insurance","Vacation","Medicine","Travel","HomeAppliance","Books","Data","selectCategoryColor","filter","category","StyledOperationFiltersItem","isChosen","css","selectCategoryIcon","OperationFiltersItem","StyledOperationFiltersAddButton","OperationFiltersAddButton","fetchClient","instance","axios","create","baseURL","headers","interceptors","request","use","config","token","Authorization","authAPI","username","password","post","then","response","data","transactionsAPI","get","date","description","quantity","put","_userId","_id","transaction","delete","OperationsService","mock","Promise","resolve","setTimeout","DataModel","types","model","maybe","string","identifier","number","Store","array","isLoading","optional","boolean","selectedCategories","isAuth","views","self","uniqueFilters","Set","map","Array","from","actions","fetch","flow","message","removeItem","console","error","addTransaction","push","editTransaction","idx","findIndex","el","splice","deleteTransaction","destroy","addSelectedCategoriesFilter","includes","removeSelectedCategoriesFilter","login","logout","OperationsStoreContext","Dialog","restProps","DialogContainer","DialogSoloContainer","DialogDuoContainer","DialogEndLineContainer","StyledError","GlobalStyleTransaction","FiltersCollectionContainer","FiltersCollection","isShown","onCloseComplete","OperationsStore","preventBodyScrolling","operationFiltersArray","FiltersContainer","FiltersItemContainer","AddBtnFilterContainer","UnionFlexContainer","ChooseContainer","OperationFiltersSection","observer","isFiltersCollectionShown","setIsFiltersCollectionShown","length","StyledTable","Table","PaginationStyleSetting","StyledPagination","Pagination","StyledTableTitle","TableTitle","StyledCheckbox","Checkbox","StyledTableTypeFilters","CheckboxContainer","TableTypeFilters","typeFilters","checkedTypeFilters","selectTypeFilters","Calendar","Popper","HeaderCalendar","ExampleCustomButton","CalendarIcon","DatePickerWrapper","wrapperClassName","Datepicker","dateFrom","dateTo","selected","ExampleCustomInput","forwardRef","ref","customInput","dateFormat","popperContainer","calendarContainer","minDate","maxDate","closeOnScroll","TableDateContainer","TableDateItemContainer","TableDatePicker","setDateFrom","setDateTo","setCheckedTransactions","setGlobalCheckbox","onHandlerClick","event","target","TablePreHeaderContainer","TableTitleContainer","TableDatePickerContainer","TablePreHeader","tableDateProps","StyledTableHead","Head","TableHead","StyledTableHeaderCell","HeaderCell","TableHeaderCell","StyledTableTextHeaderCell","TextHeaderCell","sorting","ArrowDown","datedirection","quantitydirection","TableTextHeaderCell","tabIndex","TableBodyContainer","PaginationContainer","TableUnionContainer","TableRightSideContainer","TableLeftSideContainer","TableIdContainer","TableCheckboxContainer","TableHeader","globalCheckbox","selectAllTransactions","dateSorting","quantitySorting","dateDirection","setDateDirection","quantityDirection","setQuantityDirection","StyledTableBody","Body","TableBody","PlaceholderContainer","Placeholder","Spinner","StyledTableCell","Cell","TableCell","StyledTableRow","Row","TableRow","StyledTableTextCell","TextCell","placeholder","TableTextCell","StyledTrashButton","button","_extends","Object","assign","i","arguments","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgTrash","_ref","svgRef","titleId","height","viewBox","fill","xmlns","fillRule","clipRule","d","fillOpacity","ForwardRef","TrashButton","DeleteTransaction","setSidebarIsShown","severalTransactions","setIsDataChanged","setSidebarWithCheckedTransactionsIsShown","checkedTransactions","removeCategoryFilter","slice","unCheckTransaction","all","StyledRightArrowButton","SvgArrowRight","RightArrowButton","RightArrowAction","setTransactionInfo","TableButtonsContainer","TableButtons","NoData","h1","TableData","selectTransaction","useMemo","TableRender","marginTop","SidebarStyleSetting","pointerEvents","StyledSidebar","SideSheet","Sidebar","StyledEditButton","SvgEdit","EditButton","StyledCombobox","Combobox","required","SegmentedControl","Label","Button","background","Input","transactionTypes","EditTransactionForm","transactionInfo","onSubmit","useForm","defaultValues","control","register","handleSubmit","hasFooter","rules","render","field","openOnFocus","items","index","initialSelectedItem","defaultValue","options","min","marginLeft","EditTransaction","isEditTransactionShown","setIsEditTransactionShown","__v","SidebarButtonsContainer","SidebarButtons","SidebarCard","SidebarWithTransaction","cardFields","TransactionElementStyle","TransactionElement","SidebarHeader","SidebarContainer","ButtonContainer","SidebarWithCheckedTransactions","shouldCloseOnOverlayClick","getFirstAndLastDayMonth","firstDay","startOfMonth","Date","lastDay","lastDayOfMonth","TableContainer","setData","isDataChanged","directionDateSort","setDirectionDateSort","directionQuantitySort","setDirectionQuantitySort","setCheckedTypeFilters","currentPage","setCurrentPage","transactionsPerPage","totalPages","setTotalPages","sidebarIsShown","sidebarWithCheckedTransactionsIsShown","indexOfLastTransaction","indexOfFirstTransaction","slicedTransactions","parseStringToDate","isTypeFilterChecked","filteredData","dateFilteredData","getTime","filteredDataWithoutCategory","Math","ceil","checkedCurrentFilter","transactionsToCheck","sort","a","b","page","onPageChange","pageNumber","TableWithFilters","StyledPlus","PlusIcon","Plus","AddTransactionForm","selectedDate","setSelectedDate","reset","errors","formState","onOpenComplete","format","AddTransaction","isAddTransactionShown","setIsAddTransactionShown","BarContainer","Chart","defaults","font","datasets","borderRadius","hoverBackgroundColor","categoryPercentage","plugins","legend","tooltip","mode","intersect","caretSize","datalabels","maintainAspecrRatio","scales","yAxes","ticks","beginAtZero","crossAlign","callback","grid","stacked","xAxes","ChartBar","dateRange","toggleBudget","typeBudget","expensesByDateRange","toJS","some","n","compareAsc","quantitiesByDates","dateFromRange","reduce","acc","cur","records","labels","ChartDataLabels","addEventListener","innerWidth","borderColor","borderWidth","hoverOffset","spacing","datalabelsOptions","align","position","PieContainer","PieTitle","Text","p","Analytics","ChartPie","transactionsByCategory","dataQuantity","generalExp","responsive","radius","formatter","toFixed","IncExpContent","GeneralIncExp","dataExp","dataInc","generalInc","ContainerCharts","HeaderContent","TitleContent","DatePickerContent","TextDatePicker","DateContainer","ContentWrapper","BudgetSwitcherButton","BudgetSwitcher","toggle","navigationRoutes","path","component","to","setToggleBudget","eachDayOfInterval","start","end","trackSwitch","LOCALES","home","info","auth","filterCategore","transactionsList","income","expenses","totalIncome","totalExpenses","pieCategory","dateRequired","confirm","fieldRequired","chooseCategory","en","ru","locale","textComponent","Fragment","messages","TranslateContainer","ButtonToggle","TranslateButton","setClick","Header","setLocaleApp","localeApp","profileName","setProfileName","exact","src","Logo","alt","activeClassName","StyledText","Footer","year","getFullYear","padding","justifyContent","href","UserContainer","AuthFormCommonContainer","AuthFormContainer","AuthForm","userName","isRegisterForm","minLength","maxLength","StyledAuthForm","AuthWithErrorContainer","AuthContainer","Auth","OperationStore","toggleForm","setToggleForm","setError","setUserName","setIsRegisterForm","history","useHistory","nameToken","catch","toUpperCase","PrivateRoute","NavigationSwitch","App","setLocale","ReactDOM","StrictMode","getElementById"],"mappings":"4SAAIA,G,wDCEEC,GAAe,CACnBC,MAAO,CACLC,MAAO,UACPC,gBAAiB,UACjBC,WAAY,yBACZC,qBAAsB,UACtBC,SAAU,UACVC,SAAU,UACVC,UAAW,UACXC,WAAY,UACZC,WAAY,UACZC,WAAY,QAEdC,KAAM,CACJV,MAAO,UACPC,gBAAiB,UACjBC,WAAY,wBACZC,qBAAsB,UACtBC,SAAU,UACVC,SAAU,UACVC,UAAW,UACXC,WAAY,UACZC,WAAY,OACZC,WAAY,YASVE,GAAeC,KAAMC,mBAAgCC,GAK9CC,GAAgB,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,SAC9B,EAAkCJ,KAAMK,SAAoB,SAA5D,oBAAOC,EAAP,KAAkBC,EAAlB,KAEAP,KAAMQ,WAAU,WACd,IAAMC,EAASC,OAAOC,WAAW,gCAAgCC,QACjEC,EAASJ,EAAS,QAAU,UAC3B,IAEHT,KAAMQ,WAAU,WACd,IAAMM,EAAkBJ,OAAOK,aAAaC,QAAQ,aAChDF,GACFD,EAASI,KAAKC,MAAMJ,MAErB,IAEHd,KAAMQ,WAAU,WACdE,OAAOK,aAAaI,QAAQ,YAAaF,KAAKG,UAAUd,MACvD,CAACA,IAEJ,IAAMO,EAAW,SAACQ,GAChBC,SAASC,KAAKC,MAAMC,YAAY,UAAWvC,GAAamC,GAAMjC,OAC9DkC,SAASC,KAAKC,MAAMC,YAClB,qBACAvC,GAAamC,GAAMhC,iBAErBiC,SAASC,KAAKC,MAAMC,YAClB,gBACAvC,GAAamC,GAAM/B,YAErBgC,SAASC,KAAKC,MAAMC,YAClB,2BACAvC,GAAamC,GAAM9B,sBAErB+B,SAASC,KAAKC,MAAMC,YAAY,cAAevC,GAAamC,GAAM7B,UAClE8B,SAASC,KAAKC,MAAMC,YAAY,cAAevC,GAAamC,GAAM5B,UAClE6B,SAASC,KAAKC,MAAMC,YAClB,qBACAvC,GAAamC,GAAM3B,WAErB4B,SAASC,KAAKC,MAAMC,YAClB,wBACAvC,GAAamC,GAAM1B,YAErB2B,SAASC,KAAKC,MAAMC,YAClB,gBACAvC,GAAamC,GAAMzB,YAErB0B,SAASC,KAAKC,MAAMC,YAClB,qBACAvC,GAAamC,GAAMxB,YAGrBU,EAAac,IAGf,OACE,eAACtB,GAAa2B,SAAd,CAAuBC,MAAO,CAAEC,MAAOtB,EAAWO,YAAlD,SACGT,K,yBC/EDyB,IAfsBC,aAAH,iXAgBhB,CACLC,OAAQ,eACR5C,MAAO,qBACP6C,MAAO,qBACPC,MAAO,mBACPC,IAAK,mBACLxC,UAAW,0BACXyC,eAAgB,iBAChBtC,WAAY,4BATVgC,GAWE,CACJO,SAAU,CACR,GAAI,OACJ,GAAI,OACJ,GAAI,OACJ,GAAI,OACJ,GAAI,OACJ,GAAI,OACJ,GAAI,QAENC,WAAY,CACV,GAAI,OACJ,GAAI,QAENjD,MAAO,CACL2C,OAAQ,eACRO,KAAM,IACNnD,MAAO,yBACPoD,OAAQ,IACRC,QAAS,UACTC,QAAS,WAEXC,OAAQ,CACNX,OAAQ,IACRY,MAAO,IACPC,KAAM,MApCNf,GAuCI,CACN,EAAG,MACH,EAAG,MACH,GAAI,OACJ,GAAI,OACJ,GAAI,OACJ,GAAI,OACJ,GAAI,OACJ,GAAI,OACJ,GAAI,OACJ,GAAI,OACJ,GAAI,OACJ,GAAI,OACJ,GAAI,OACJ,GAAI,QArDFA,GAuDE,CACJ,GAAI,GACJ,GAAI,GACJ,GAAI,GACJ,GAAI,IA3DFA,GA6DK,CACPgB,KAAM,uBACNC,OAAQ,yBACRP,OAAQ,IACRC,QAAS,IACTC,QAAS,IACTM,QAAS,UACT5D,MAAO,yBACP6C,MAAO,gCACPgB,MAAO,OACPrD,WAAY,8BAvEVkC,GAyEU,CACZ,EAAG,MACH,EAAG,MACH,EAAG,MACH,EAAG,MACH,GAAI,OACJ,GAAI,OACJ,GAAI,OACJ,GAAI,QAjFFA,GAmFG,CACLoB,SAAU,CACRC,MAAO,SAETC,UAAW,CACTD,MAAO,UCrGPE,GAAgBC,KAAOC,IAAV,gOACFzB,GAAkBa,OAAOX,OAC3BF,GAAkBO,SAAS,IAC/BP,GAAmBE,Q,UCFxBwB,GAAS,SAAC,GAAiC,IAA/BlC,EAA8B,EAA9BA,KAChB,OAAO,eAAC,KAAD,CAAUmC,KAAM3B,GAAkB,IAAKR,KAAMA,K,kBCHhDoC,GAAO,SAACC,GACZ,OAAO,eAAC,KAAD,6BAAYA,GAAZ,aAAoBA,EAAMtD,aCK7BuD,GAAU,SAAC,GAAiC,IAA/BtC,EAA8B,EAA9BA,KACjB,OACE,gBAAC,GAAD,CAAMuC,QAAQ,OAAOC,WAAW,SAASC,IAAKjC,GAAoB,IAAlE,UACE,eAAC,GAAD,CAAQR,KAAMA,IACd,gCAAOA,Q,UCbE,OAA0B,qCCOnC0C,GAAeV,aAAOW,KAAPX,CAAH,2UACHxB,GAAoB,IACxBA,GAAoB,IACnBA,GAAoB,IAGNoC,ICTpBC,GAAiB,WACrB,OAAO,eAACH,GAAD,KCHHI,GAAcd,KAAOe,MAAV,+GAOXC,GAAahB,KAAOiB,KAAV,kdA0BVC,GAAclB,KAAOmB,MAAV,kVAKFH,GAIAA,GAIAA,IAOTI,GAAiBpB,KAAOC,IAAV,+CCnBLoB,GAjCM,WACnB,MViG4B1E,KAAM2E,WAAW5E,IUjGrC6B,EAAR,EAAQA,MAAOf,EAAf,EAAeA,SACf,EAA8Bb,KAAMK,UAAS,GAA7C,oBAAOuE,EAAP,KAAgBC,EAAhB,KAiBA,OATA7E,KAAMQ,WAAU,WACd,IAAMM,EAAkBJ,OAAOK,aAAaC,QAAQ,WACpD6D,EAAW5D,KAAKC,MAAMJ,MACrB,IAEHd,KAAMQ,WAAU,WACdE,OAAOK,aAAaI,QAAQ,UAAWF,KAAKG,UAAUwD,MACrD,CAACA,IAGF,eAACH,GAAD,UACE,gBAACN,GAAD,CAAaW,UAAU,SAAvB,UACE,eAACP,GAAD,CACEQ,KAAK,WACLC,QApBY,kBAAMnE,EAAmB,SAAVe,EAAmB,QAAU,SAqBxDqD,SAnBa,WACnBJ,GAAW,SAACK,GAAD,OAAqBA,MAmB1BN,QAASA,IAEX,eAACP,GAAD,CAAYS,UAAU,eAAtB,qBC1BFK,GAAc9B,KAAO+B,GAAV,2DAERvD,GAAoB,KAGvBwD,GAAgBhC,aAAOiC,KAAPjC,CAAH,2IAERxB,GAAmB1C,MAGjB0C,GAAmBE,OAGnBF,GAAmBE,QAI1BwD,GAAkBlC,KAAOC,IAAV,4HAIRzB,GAAoB,KAG3B2D,GAAiBnC,KAAOC,IAAV,mFAGXzB,GAAoB,KAGvB4D,GAAkBpC,KAAOC,IAAV,mFAGZzB,GAAoB,K,UC/Bd6D,GAJG,SAACC,GAAD,IAAahE,EAAb,uDAAqB,GAArB,OAChB,eAAC,KAAD,CAAkBgE,GAAIA,EAAIC,OAAM,gBAAOjE,M,SCAnCkE,GAAyBxC,KAAOC,IAAV,wKAEZzB,GAAqBG,MAElBH,GAA0B,IAChCA,GAAoB,ICL3BiE,GAA6B,SAAC,GAAkB,IAAhB1F,EAAe,EAAfA,SACpC,OAAO,eAACyF,GAAD,UAAyBzF,KCLnB,OAA0B,kCCA1B,OAA0B,iCCA1B,OAA0B,gCCA1B,OAA0B,qCCA1B,OAA0B,kCCA1B,OAA0B,iCCA1B,OAA0B,mCCA1B,OAA0B,kCCA1B,OAA0B,2CCA1B,OAA0B,sCCA1B,OAA0B,yCCA1B,OAA0B,qCCA1B,OAA0B,kCCA1B,OAA0B,gCCA1B,OAA0B,qCCA1B,OAA0B,kCCA1B,OAA0B,uCCA1B,OAA0B,qCCA1B,OAA0B,kCCA1B,OAA0B,oCCA1B,OAA0B,mCC2BnC2F,GAAa,CACjB,CAAEC,MAAO,OAAQ5G,MAAO,UAAW6G,KAAMC,IACzC,CAAEF,MAAO,eAAgB5G,MAAO,UAAW6G,KAAME,IACjD,CAAEH,MAAO,UAAW5G,MAAO,UAAW6G,KAAMG,IAC5C,CAAEJ,MAAO,gBAAiB5G,MAAO,UAAW6G,KC/B/B,IAA0B,gCDgCvC,CAAED,MAAO,SAAU5G,MAAO,UAAW6G,KEhCxB,IAA0B,oCFiCvC,CAAED,MAAO,YAAa5G,MAAO,UAAW6G,KAAMI,IAC9C,CAAEL,MAAO,UAAW5G,MAAO,UAAW6G,KAAMK,IAC5C,CAAEN,MAAO,QAAS5G,MAAO,UAAW6G,KAAMM,IAC1C,CAAEP,MAAO,UAAW5G,MAAO,UAAW6G,KAAMO,IAC5C,CAAER,MAAO,MAAO5G,MAAO,UAAW6G,KAAMQ,IACxC,CAAET,MAAO,QAAS5G,MAAO,UAAW6G,KAAMS,IAC1C,CAAEV,MAAO,MAAO5G,MAAO,UAAW6G,KAAMU,IACxC,CAAEX,MAAO,SAAU5G,MAAO,UAAW6G,KGxCxB,IAA0B,oCHyCvC,CAAED,MAAO,QAAS5G,MAAO,UAAW6G,KAAMW,IAC1C,CAAEZ,MAAO,iBAAkB5G,MAAO,UAAW6G,KAAMY,IACnD,CAAEb,MAAO,eAAgB5G,MAAO,UAAW6G,KAAMa,IACjD,CAAEd,MAAO,MAAO5G,MAAO,UAAW6G,KAAMc,IACxC,CAAEf,MAAO,YAAa5G,MAAO,UAAW6G,KAAMe,IAC9C,CAAEhB,MAAO,WAAY5G,MAAO,UAAW6G,KAAMgB,IAC7C,CAAEjB,MAAO,UAAW5G,MAAO,UAAW6G,KI/CzB,IAA0B,mCJgDvC,CAAED,MAAO,WAAY5G,MAAO,UAAW6G,KAAMiB,IAC7C,CAAElB,MAAO,SAAU5G,MAAO,UAAW6G,KAAMkB,IAC3C,CAAEnB,MAAO,kBAAmB5G,MAAO,UAAW6G,KAAMmB,IACpD,CAAEpB,MAAO,QAAS5G,MAAO,UAAW6G,KAAMoB,IAC1C,CAAErB,MAAO,YAAa5G,MAAO,UAAW6G,KKpD3B,IAA0B,yCLqDvC,CAAED,MAAO,OAAQ5G,MAAO,UAAW6G,KAAMqB,KAOrCC,GAAsB,SAACnD,GAC3B,OAAO2B,GAAWyB,QAAO,SAAAC,GAAQ,OAAIA,EAASzB,QAAU5B,KAAO,GAAGhF,OMtD9DsI,GAA6BrE,KAAOC,IAAV,mKACnBzB,GAAoB,IAClBA,GAAkBO,SAAS,IACzBP,GAAkBa,OAAOX,OAEvBF,GAA0B,KAGzC,gBAAGuC,EAAH,EAAGA,MAAOuD,EAAV,EAAUA,SAAV,OACAvD,GACAwD,aADK,yWAEiBL,GAAoBnD,GAC7BuD,EAAW,MAAQ,OAQZ9F,GAAoB,IN6BjB,SAACuC,GAC1B,OAAO2B,GAAWyB,QAAO,SAAAC,GAAQ,OAAIA,EAASzB,QAAU5B,KAAO,GAAG6B,KM7BpC4B,CAAmBzD,OCf7C0D,GAAwC,SAAApE,GAC5C,OACE,eAACgE,GAAD,CACEtD,MAAOV,EAAMU,MACbuD,SAAUjE,EAAMiE,SAChB3C,QAAStB,EAAMsB,QAHjB,SAKGtB,EAAMU,SChBP2D,GAAkC1E,KAAOC,IAAV,qpBAchBzB,GAA0B,IACvBA,GAAmBE,OAejBF,GAAmBE,OAGnBF,GAAmBE,QC7BvCiG,GAA6C,SAAC,GAAkB,IAAbtE,EAAY,oBACnE,OAAO,eAACqE,GAAD,gBAAqCrE,K,6ECDxCuE,GAAc,WAClB,IAQMC,EAAWC,KAAMC,OARA,CACrBC,QAAS,gDACTC,QAAS,CACP,eAAgB,sBAcpB,OANAJ,EAASK,aAAaC,QAAQC,KAAI,SAASC,GACzC,IAAMC,EAAQ5H,aAAaC,QAAQ,SAEnC,OADA0H,EAAOJ,QAAQM,cAAgBD,EAAK,iBAAaA,GAAU,GACpDD,KAGFR,GAGIW,GAAU,SACZC,EAAkBC,GACzB,OAAOd,KACJe,KAAK,eAAgB,CAAEF,WAAUC,aACjCE,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAJpBN,GAAU,SAOfC,EAAkBC,GACtB,OAAOd,KACJe,KAAK,QAAS,CAAEF,WAAUC,aAC1BE,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAIpBC,GAAkB,WAE3B,OAAOnB,KACJoB,IAAI,gBACJJ,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAJpBC,GAAkB,SAOXD,GAChB,OAAOlB,KACJe,KAAK,eAAgB,CACpBM,KAAMH,EAAKG,KACX7B,SAAU0B,EAAK1B,SACf8B,YAAaJ,EAAKI,YAClBC,SAAUL,EAAKK,SACfzE,KAAMoE,EAAKpE,OAEZkE,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAhBpBC,GAAkB,SAmBbD,GACd,OAAOlB,KACJwB,IAAI,eAAgB,CACnBC,QAASP,EAAKO,QACdC,IAAKR,EAAKQ,IACVL,KAAMH,EAAKG,KACX7B,SAAU0B,EAAK1B,SACf8B,YAAaJ,EAAKI,YAClBC,SAAUL,EAAKK,SACfzE,KAAMoE,EAAKpE,OAEZkE,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SA9BpBC,GAAkB,SAiCXQ,GAChB,OAAO3B,KACJ4B,OADI,0BACsBD,EAAYD,MACtCV,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SC7E3BW,G,qIACJ,qGAC0BV,KAD1B,cACQW,EADR,yBAGS,IAAIC,SAAQ,SAAAC,GAAO,OAAIC,YAAW,kBAAMD,EAAQF,KAAO,SAHhE,2C,6DCsCII,GAAYC,KAAMC,MAAM,YAAa,CACzCX,QAASU,KAAME,MAAMF,KAAMG,QAC3BZ,IAAKS,KAAMI,WACXlB,KAAMc,KAAMG,OACZ9C,SAAU2C,KAAMG,OAChBxF,KAAMqF,KAAMG,OACZf,SAAUY,KAAMK,OAChBlB,YAAaa,KAAMG,SA6EfG,GA1EyBN,KAC5BC,MAAM,CACLlB,KAAMiB,KAAMO,MAAMR,IAClBS,UAAWR,KAAMS,SAAST,KAAMU,SAAS,GACzC/E,WAAYqE,KAAMS,SAAST,KAAMO,MAAMP,KAAMG,QA3C9B,CACjB,OACA,SACA,OACA,YACA,eACA,UACA,QACA,UACA,MACA,QACA,MACA,SACA,QACA,iBACA,eACA,MACA,YACA,WACA,UACA,UACA,WACA,gBACA,SACA,kBACA,QACA,cAkBEQ,mBAAoBX,KAAMO,MAAMP,KAAMG,QACtCS,OAAQZ,KAAMS,SAAST,KAAMU,SAAS,KAEvCG,OAAM,SAAAC,GACL,MAAO,CACL,4BACE,IAAMC,EAA6B,IAAIC,IACrCF,EAAK/B,KAAKkC,KAAI,SAAAzB,GACZ,OAAOA,EAAYnC,aAGvB,OAAO6D,MAAMC,KAAKJ,QAIvBK,SAAQ,SAAAN,GAAI,MAAK,CAChBO,MAAOC,aAAI,WAAC,qFAGI,OAHJ,SAERR,EAAKN,WAAY,EAFT,SAGUd,GAAkB2B,QAH5B,OAGRP,EAAK/B,KAHG,OAIR+B,EAAKF,QAAS,EAJN,gDAO2B,sBAA/B,eAAI9B,gBAAJ,eAAcC,KAAKwC,WACrBT,EAAKF,QAAS,EACdjK,aAAa6K,WAAW,YACxB7K,aAAa6K,WAAW,UAE1BC,QAAQC,MAAR,MAZQ,yBAcRZ,EAAKN,WAAY,EAdT,4EAkBZmB,eAnBgB,SAmBDnC,GACbsB,EAAK/B,KAAK6C,KAAKpC,IAGjBqC,gBAvBgB,SAuBAtG,EAAYiE,GAC1B,IAAMsC,EAAMhB,EAAK/B,KAAKgD,WAAU,SAAAC,GAAE,OAAIA,EAAGzC,MAAQhE,KACjDuF,EAAK/B,KAAKkD,OAAOH,EAAK,EAAGtC,IAG3B0C,kBA5BgB,SA4BE1C,GAChB2C,aAAQ3C,IAGV4C,4BAhCgB,SAgCY/E,GACrByD,EAAKH,mBAAmB0B,SAAShF,IACpCyD,EAAKH,mBAAmBiB,KAAKvE,IAIjCiF,+BAtCgB,SAsCejF,GAC7B,IAAMyE,EAAMhB,EAAKH,mBAAmBoB,WAAU,SAAAC,GAAE,OAAIA,IAAO3E,KAC3DyD,EAAKH,mBAAmBsB,OAAOH,EAAK,IAGtCS,MA3CgB,WA4CdzB,EAAKF,QAAS,GAGhB4B,OA/CgB,WAgDd1B,EAAKF,QAAS,EACdE,EAAK/B,KAAKkD,OAAO,GACjBnB,EAAKH,mBAAmBsB,OAAO,QAIPjE,SAEjByE,GAAyB7M,KAAMC,cAAcyK,I,mCC3HpDoC,GAAgC,SAAC,GAAgC,IAA9B1M,EAA6B,EAA7BA,SAAa2M,EAAgB,mBACpE,OAAO,eAAC,KAAD,6BAAcA,GAAd,aAA0B3M,MCD7B4M,GAAkB3J,KAAOC,IAAV,sFAGZzB,GAAoB,KAGvBoL,GAAsB5J,KAAOC,IAAV,0EAKnB4J,GAAqB7J,KAAOC,IAAV,kFAKlB6J,GAAyB9J,KAAOC,IAAV,6EAKtB8J,GAAc/J,KAAOiB,KAAV,qFACFzC,GAAkBO,SAAS,IAC/BP,GAAmBK,IACjBL,GAAoB,KAG3BwL,GAAyBvL,aAAH,scAEVD,GAAqBG,MAG1BH,GAAmBnC,UAIRmC,GAAqBG,MAEnBH,GAAqBG,MAIlCH,GAAmBnC,WC1C1B4N,GAA6BjK,KAAO+B,GAAV,wHACnBvD,GAAoB,GAIxBA,GAAoB,KCCvB0L,GAA2C,SAAC,GAG3C,IAFLC,EAEI,EAFJA,QACAC,EACI,EADJA,gBAEMC,EAAkB/I,sBAAWkI,IAEnC,OACE,qCACE,gBAAC,GAAD,CACEW,QAASA,EACTC,gBAAiBA,EACjBzH,MAAM,mBACN2H,sBAAsB,EAJxB,UAME,eAACN,GAAD,IACA,eAACC,GAAD,UACGI,EAAgBE,sBAAsBvC,KAAI,SAAC7D,GAC1C,OACE,8BACE,eAAC,GAAD,CACEG,SAAU+F,EAAgB3C,mBAAmB0B,SAASjF,GACtDpD,MAAOoD,EACPxC,QAAS,WACP0I,EAAgB3C,mBAAmB0B,SAASjF,GACxCkG,EAAgBhB,+BAA+BlF,GAC/CkG,EAAgBlB,4BAA4BhF,OAP7CA,cCxBjBqG,GAAmBxK,KAAOC,IAAV,4EAKhBwK,GAAuBzK,KAAOC,IAAV,sQAUZzB,GAAoB,IAO5BkM,GAAwB1K,KAAOC,IAAV,2FACTzB,GAAoB,KAKhCmM,GAAqB3K,KAAOC,IAAV,+CAIlB2K,GAAkB5K,KAAOC,IAAV,0KAOVzB,GAAmBnC,WCzBxBwO,GAA0BC,cAAS,WACvC,IAAMT,EAAkB/I,sBAAWkI,IAEnC,EAAgExM,qBAC9D,GADF,oBAAO+N,EAAP,KAAiCC,EAAjC,KAIA,OACE,uCACGX,EAAgBvE,MACf,eAAC0E,GAAD,UACE,eAAC,GAAD,UACE,gBAACG,GAAD,WACE,gBAACF,GAAD,YACIJ,EAAgB3C,mBAAmBuD,QACnC,eAACL,GAAD,UACGvI,GAAU,oBAGf,8BACGgI,EAAgB3C,mBAAmBM,KAAI,SAAC7D,GACvC,OACE,8BACE,eAAC,GAAD,CACEpD,MAAOoD,EACPxC,QAAS,WACP0I,EAAgBhB,+BACdlF,OALCA,WAcjB,eAACuG,GAAD,UACE,eAAC,GAAD,CACE/I,QAAS,WACF0I,EAAgB9C,WACnByD,GAA4B,eAS5C,eAAC,GAAD,CACEb,QAASY,EACTX,gBAAiB,kBAAMY,GAA4B,Y,6BCjErDE,GAAclL,aAAOmL,KAAPnL,CAAH,2CCEXmL,GAAyB,SAAC,GAAkB,IAAhBpO,EAAe,EAAfA,SAChC,OAAO,eAACmO,GAAD,UAAcnO,K,2BCDjBqO,GAAyB3M,aAAH,qqBAERD,GAAoB,GAcvBA,GAAkBO,SAAS,IAC/BP,GAAmBE,OACRF,GAAqBiB,OAC5BjB,GAAoB,GAClBA,GAAkBQ,WAAW,IAC3BR,GAA0B,GAUvBA,GAAqBiB,OAKhCjB,GAAmBhC,WACRgC,GAAqBgB,MAIvC6L,GAAmBrL,cAAO,gBAAGyB,EAAH,EAAGA,UAAciI,EAAjB,0BAC9B,eAAC,KAAD,cAAYjI,UAAWA,GAAeiI,MADf1J,CAAH,2BC1ChBsL,GAAwC,SAAC,GAAD,IAAMjL,EAAN,2BAC5C,uCACE,eAACgL,GAAD,6BAAsBhL,GAAtB,IAA6BoB,UAAU,gBACvC,eAAC2J,GAAD,QCJEG,GAAmBvL,KAAOC,IAAV,mFACLzB,GAAkBa,OAAOE,KAC3Bf,GAAkBO,SAAS,IAC/BP,GAAmBE,QCDxB8M,GAA8B,SAAC,GAAkB,IAAhBzO,EAAe,EAAfA,SACrC,OAAO,eAACwO,GAAD,UAAmBxO,K,UCDtB0O,GAAiBzL,aAAO0L,KAAP1L,CAAH,qqBAGExB,GAAmBE,OACtBF,GAA0B,GAS5BA,GAAkBO,SAAS,IACzBP,GAAkBa,OAAOX,OAC/BF,GAAmBE,OAgBXF,GAA0B,GACvBA,GAAmBE,QC5BrCgN,GAA4B,SAAC,GAAkB,IAAbrL,EAAY,oBAClD,OAAO,eAACoL,GAAD,gBAAoBpL,KCTvBsL,GAAyB3L,KAAOC,IAAV,2BAEtB2L,GAAoB5L,KAAOC,IAAV,2HCOjB4L,GAAoD,SAAC,GAIpD,IAHLC,EAGI,EAHJA,YACAC,EAEI,EAFJA,mBACAC,EACI,EADJA,kBAEA,OACE,eAACL,GAAD,UACE,eAACC,GAAD,UACGE,EAAY9D,KAAI,SAAA7D,GACf,IAAM5C,EAAUwK,EAAmB3C,SAASjF,GAE5C,OACE,eAAC,GAAD,CAEEpD,MAAOoD,EACP5C,QAASA,EACTK,SANa,kBAAMoK,EAAkB7H,KAGhCA,WCxBJ,I,OAAA,IAA0B,sC,sCCQnC8H,GAAWjM,KAAOC,IAAV,4LAIEzB,GAAqBlC,YAI/B4P,GAASlM,KAAOC,IAAV,0FAMNkM,GAAiB1N,aAAH,+vCAOLD,GAAmBG,MAOZH,GAAmBG,MAmB1BH,GAAmBG,OAS5ByN,GAAsBpM,KAAOiB,KAAV,8qBACHzC,GAAqBG,MAIhCH,GAAmBE,OAsBD2N,IAMvBC,GAAoBtM,cAAO,gBAAGyB,EAAH,EAAGA,UAAciI,EAAjB,0BAC/B,eAAC,KAAD,cAAY6C,iBAAkB9K,GAAeiI,MADrB1J,CAAH,6CC9EjBwM,GAA8B,SAAC,GAO9B,IANLlO,EAMI,EANJA,MACAqD,EAKI,EALJA,QACA8K,EAII,EAJJA,SACAC,EAGI,EAHJA,OACAC,EAEI,EAFJA,SACA/K,EACI,EADJA,SAEMgL,EAAqBC,uBACzB,WAA4BC,GAA5B,IAAGxO,EAAH,EAAGA,MAAOqD,EAAV,EAAUA,QAAV,OACE,eAACyK,GAAD,CAAqBzK,QAASA,EAASmL,IAAKA,EAA5C,SACa,KAAVxO,EAAeA,EAAQ,mBAK9B,OACE,uCACE,eAACgO,GAAD,CACEK,SAAUA,EACV/K,SAAUA,EACVmL,YAAa,eAACH,EAAD,CAAoBtO,MAAOA,EAAOqD,QAASA,IACxDqL,WAAW,iBACXC,gBAAiBf,GACjBgB,kBAAmBjB,GACnBkB,QAASV,EACTW,QAASV,EACTW,eAAe,IAEjB,eAAClB,GAAD,QC5CAmB,GAAqBtN,KAAOC,IAAV,4FAGJzB,GAAoB,KAIlC+O,GAAyBvN,KAAOC,IAAV,0IAIXzB,GAAkBO,SAAS,IACxBP,GAAoB,KCElCgP,GAA2C,SAAC,GAO3C,IANLf,EAMI,EANJA,SACAC,EAKI,EALJA,OACAe,EAII,EAJJA,YACAC,EAGI,EAHJA,UACAC,EAEI,EAFJA,uBACAC,EACI,EADJA,kBAEMC,EAAiB,SAACC,GACtBA,EAAMC,QAeR,OACE,gBAACT,GAAD,WACE,gBAACC,GAAD,CAAwB9L,UAAU,WAAlC,UACE,uBAAMA,UAAU,YAAhB,SAA6BY,GAAU,UACvC,eAAC,GAAD,CACEV,QAASkM,EACTvP,MAAOmO,EACPC,OAAQA,EACR9K,SApBiB,SAACqE,GACxBwH,EAAYxH,GACZ0H,EAAuB,IACvBC,GAAkB,IAkBZjB,SAAUF,OAGd,gBAACc,GAAD,CAAwB9L,UAAU,SAAlC,UACE,uBAAMA,UAAU,YAAhB,SAA6BY,GAAU,QACvC,eAAC,GAAD,CACEV,QAASkM,EACTvP,MAAOoO,EACP9K,SAvBe,SAACqE,GACtByH,EAAUzH,GACV0H,EAAuB,IACvBC,GAAkB,IAqBZjB,SAAUD,EACVD,SAAUA,WC3DduB,GAA0BhO,KAAOC,IAAV,0GAMvBgO,GAAsBjO,KAAOC,IAAV,qJAQnBiO,GAA2BlO,KAAOC,IAAV,+C,4DCIxBkO,GAAkC,SAAC,GAKlC,IAJLrC,EAII,EAJJA,YACAE,EAGI,EAHJA,kBACAD,EAEI,EAFJA,mBACGqC,EACC,mBACJ,OACE,gBAACJ,GAAD,WACE,gBAACC,GAAD,WACE,eAAC,GAAD,UAAa5L,GAAU,sBACvB,eAAC,GAAD,CACE0J,mBAAoBA,EACpBC,kBAAmBA,EACnBF,YAAaA,OAGjB,eAACoC,GAAD,UACE,eAAC,GAAD,UACE,eAAC,GAAD,gBAAqBE,YClCzBC,GAAkBrO,aAAOmL,KAAMmD,KAAbtO,CAAH,iGCEfuO,GAA6B,SAAC,GAAkB,IAAhBxR,EAAe,EAAfA,SACpC,OAAO,eAACsR,GAAD,UAAkBtR,KCHrByR,GAAwBxO,aAAOmL,KAAMsD,WAAbzO,CAAH,2BCErB0O,GAAmC,SAAC,GAAkB,IAAhB3R,EAAe,EAAfA,SAC1C,OAAO,eAACyR,GAAD,UAAwBzR,KCPlB,OAA0B,uCCOnC4R,GAA4B3O,aAAOmL,KAAMyD,eAAb5O,CAAH,gJACpBxB,GAAmB1C,MACb0C,GAAkBa,OAAOE,KAC3Bf,GAAkBO,SAAS,KAGtC,qBAAG8P,SAEHtK,aADO,mlBAQQ/F,GAAkBzC,MAAM2C,OASPoQ,OAUhC,qBAAGC,eAEHxK,aADa,6LAYb,qBAAGyK,mBAEHzK,aADiB,6L,2BCzCf0K,GAA8D,SAAC,GAI9D,IAHLlS,EAGI,EAHJA,SACAmS,EAEI,EAFJA,SACGxF,EACC,mBACJ,OACE,eAACiF,GAAD,6BAA+BjF,GAA/B,aACE,sBAAKwF,SAAUA,EAAf,SAA0BnS,QCjB1BoS,GAAqBnP,KAAOC,IAAV,+GACFzB,GAAqBG,MAExBH,GAA0B,KAGvC4Q,GAAsBpP,KAAOC,IAAV,mFAEbzB,GAAoB,IACtBA,GAAoB,KAGxB6Q,GAAsBrP,KAAOC,IAAV,4HAMnBqP,GAA0BtP,KAAOC,IAAV,uFACdzB,GAAmBsB,UAAUD,MAE5BrB,GAAmBsB,UAAUD,OAGvC0P,GAAyBvP,KAAOC,IAAV,+GACbzB,GAAmBoB,SAASC,MAE3BrB,GAAmBoB,SAASC,OAItC2P,GAAmBxP,KAAOC,IAAV,+FAMhBwP,GAAyBzP,KAAOC,IAAV,+CCpBtByP,IDwBcjR,aAAH,qRAEJD,GAAmBnC,UAGjBmC,GAAmBE,OAKVF,GAAqBG,MAG3BH,GAAqBG,OCrCF,SAAC,GAK/B,IAJLgR,EAII,EAJJA,eACAC,EAGI,EAHJA,sBACAC,EAEI,EAFJA,YACAC,EACI,EADJA,gBAEA,EAA0C9S,qBAAS,GAAnD,oBAAO+S,EAAP,KAAsBC,EAAtB,KACA,EAAkDhT,qBAAS,GAA3D,oBAAOiT,EAAP,KAA0BC,EAA1B,KAMA,OACE,qCACE,eAAC,GAAD,UACE,gBAACb,GAAD,WACE,gBAACE,GAAD,WACE,eAACE,GAAD,UACE,eAAC,GAAD,UACE,eAAC,GAAD,CAAUlO,QAASoO,EAAgB/N,SAXhC,WACfgO,WAaQ,eAACJ,GAAD,UACE,eAAC,GAAD,mBAEF,eAAC,GAAD,CACEX,QAAS,EACTlN,QAAS,WACPkO,IACAG,GAAiB,SAAAnO,GAAS,OAAKA,MAEjCqN,SAAU,EACVH,eAAgBgB,EAPlB,kBAWA,eAAC,GAAD,0BAEF,gBAACT,GAAD,WACE,eAAC,GAAD,mBACA,eAAC,GAAD,CACET,QAAS,EACTlN,QAAS,WACPmO,IACAI,GAAqB,SAAArO,GAAS,OAAKA,MAErCqN,SAAU,EACVF,mBAAoBiB,EAPtB,sBAWA,eAAC,GAAD,gBCnENE,GAAkBnQ,aAAOmL,KAAMiF,KAAbpQ,CAAH,uEAEFxB,GAA0B,KCJvC6R,GAAsB,SAAC,GAAkB,IAAhBtT,EAAe,EAAfA,SAC7B,OAAO,eAACoT,GAAD,UAAkBpT,K,UCFrBuT,GAAuBtQ,aAAOI,GAAPJ,CAAH,qG,aCIpBuQ,GAA+B,SAAC,GAAyB,IAAvB1Q,EAAsB,EAAtBA,MAAUQ,EAAY,mBAC5D,OACE,eAACiQ,GAAD,6BAA0BjQ,GAA1B,aACE,eAACmQ,GAAA,EAAD,CAAS3Q,MAAOA,QCNhB4Q,GAAkBzQ,aAAOmL,KAAMuF,KAAb1Q,CAAH,6BCEf2Q,GAA6B,SAAC,GAAkB,IAAhB5T,EAAe,EAAfA,SACpC,OAAO,eAAC0T,GAAD,UAAkB1T,KCDrB6T,GAAiB5Q,aAAOmL,KAAM0F,IAAb7Q,CAAH,iVAEJxB,GAAqBG,MAMLH,GAA0B,IACzBA,GAA0B,KCTrDsS,GAA4B,SAAC,GAAkB,IAAhB/T,EAAe,EAAfA,SACnC,OAAO,eAAC6T,GAAD,UAAiB7T,KCCpBgU,GAAsB/Q,aAAOmL,KAAM6F,SAAbhR,CAAH,6IAERxB,GAAkBO,SAAS,IACzBP,GAAkBa,OAAOX,OAC/BF,GAAmBE,QAG5B,gBAAGuS,EAAH,EAAGA,YAAalU,EAAhB,EAAgBA,SAAhB,OACAkU,GACA1M,aADW,0NAMaL,GAAoBnH,OAM5C,qBAAGqH,UAEHG,aADQ,+JAGS/F,GAAkBO,SAAS,IACzBP,GAAkBQ,WAAW,IAC7BR,GAAkBa,OAAOE,KAC/Bf,GAAmBE,WAIhC,qBAAGyH,UAEH5B,aADQ,sFAGW/F,GAAkBa,OAAOE,S,gBCrC1C2R,GAA8C,SAAC,GAG9C,IAFLnU,EAEI,EAFJA,SACGsD,EACC,mBACJ,OAAO,eAAC0Q,GAAD,6BAAyB1Q,GAAzB,aAAiCtD,MCPpCoU,GAAoBnR,KAAOoR,OAAV,uSAQT5S,GAAmBE,OAMjBF,GAAmBE,Q5Ff/B,GAAY,CAAC,QAAS,WAE1B,SAAS2S,KAA2Q,OAA9PA,GAAWC,OAAOC,QAAU,SAAUxD,GAAU,IAAK,IAAIyD,EAAI,EAAGA,EAAIC,UAAUxG,OAAQuG,IAAK,CAAE,IAAIE,EAASD,UAAUD,GAAI,IAAK,IAAIG,KAAOD,EAAcJ,OAAOM,UAAUC,eAAeC,KAAKJ,EAAQC,KAAQ5D,EAAO4D,GAAOD,EAAOC,IAAY,OAAO5D,IAA2BgE,MAAMC,KAAMP,WAEhT,SAASQ,GAAyBP,EAAQQ,GAAY,GAAc,MAAVR,EAAgB,MAAO,GAAI,IAAkEC,EAAKH,EAAnEzD,EAEzF,SAAuC2D,EAAQQ,GAAY,GAAc,MAAVR,EAAgB,MAAO,GAAI,IAA2DC,EAAKH,EAA5DzD,EAAS,GAAQoE,EAAab,OAAOc,KAAKV,GAAqB,IAAKF,EAAI,EAAGA,EAAIW,EAAWlH,OAAQuG,IAAOG,EAAMQ,EAAWX,GAAQU,EAASG,QAAQV,IAAQ,IAAa5D,EAAO4D,GAAOD,EAAOC,IAAQ,OAAO5D,EAFxMuE,CAA8BZ,EAAQQ,GAAuB,GAAIZ,OAAOiB,sBAAuB,CAAE,IAAIC,EAAmBlB,OAAOiB,sBAAsBb,GAAS,IAAKF,EAAI,EAAGA,EAAIgB,EAAiBvH,OAAQuG,IAAOG,EAAMa,EAAiBhB,GAAQU,EAASG,QAAQV,IAAQ,GAAkBL,OAAOM,UAAUa,qBAAqBX,KAAKJ,EAAQC,KAAgB5D,EAAO4D,GAAOD,EAAOC,IAAU,OAAO5D,EAMne,SAAS2E,GAASC,EAAMC,GACtB,IAAIjQ,EAAQgQ,EAAKhQ,MACbkQ,EAAUF,EAAKE,QACfxS,EAAQ4R,GAAyBU,EAAM,IAE3C,OAAoB,iBAAoB,MAAOtB,GAAS,CACtDxR,MAAO,GACPiT,OAAQ,GACRC,QAAS,YACTC,KAAM,OACNC,MAAO,6BACPnG,IAAK8F,EACL,kBAAmBC,GAClBxS,GAAQsC,EAAqB,iBAAoB,QAAS,CAC3DL,GAAIuQ,GACHlQ,GAAS,KAAM/G,KAAUA,GAAqB,iBAAoB,OAAQ,CAC3EsX,SAAU,UACVC,SAAU,UACVC,EAAG,uSACHJ,KAAM,UACNK,YAAa,OAIjB,I,G6FpCI,G7FoCAC,GAA0B,cAAiBZ,I8F5BzCa,I9F6BS,I8F7B4B,kBACzC,eAACpC,GAAD,UACE,eAAC,GAAD,QCQEqC,GAAqC1I,cACzC,YAQO,IAPLvE,EAOI,EAPJA,YACAkN,EAMI,EANJA,kBACAC,EAKI,EALJA,oBACAC,EAII,EAJJA,iBACAC,EAGI,EAHJA,yCACAC,EAEI,EAFJA,oBACAlG,EACI,EADJA,uBAEMtD,EAAkB/I,sBAAWkI,IAU7BsK,EAAuB,SAACvN,GAEzB8D,EAAgBE,sBAAsBnB,SAAS7C,EAAYnC,WAE5DiG,EAAgBhB,+BAA+B9C,EAAYnC,WAmC/D,OAAImC,EAEA,sBAAK5E,QAjCmB,WACtB4E,GACFR,GAAkCQ,GAAaX,MAAK,YAlB7B,SAACW,GAC1B,IAAMsC,EAAMgL,EAAoB/K,WAAU,SAAAC,GAAE,OAAIA,IAAOxC,KACvDoH,EAAuB,GAAD,oBACjBkG,EAAoBE,MAAM,EAAGlL,IADZ,aAEjBgL,EAAoBE,MAAMlL,EAAM,MAejCmL,CAAmBzN,GACnB8D,EAAgBpB,kBAAkB1C,GAClCuN,EAAqBvN,GACrBkN,GAAqBA,GAAkB,OA2BzC,SACE,eAAC,GAAD,MAKF,sBAAK9R,QA5B2B,WAC9B+R,GACF/M,QAAQsN,IACNP,EAAoB1L,KAAI,SAAAzB,GAAW,OACjCR,GAAkCQ,OAEpCX,MAAK,WACL+H,EAAuB,IACvB+F,EAAoB1L,KAAI,SAAAzB,GACtB8D,EAAgBpB,kBAAkB1C,GAClCuN,EAAqBvN,MAGvBoN,GAAoBA,GAAiB,SAAA9R,GAAS,OAAKA,KACnD+R,GACEA,GAAyC,OAa7C,SACE,eAAC,GAAD,SCnFJM,GAAyBlU,KAAOoR,OAAV,uSAQd5S,GAAmBE,OAMjBF,GAAmBE,QHf/B,GAAY,CAAC,QAAS,WAE1B,SAAS,KAA2Q,OAA9P,GAAW4S,OAAOC,QAAU,SAAUxD,GAAU,IAAK,IAAIyD,EAAI,EAAGA,EAAIC,UAAUxG,OAAQuG,IAAK,CAAE,IAAIE,EAASD,UAAUD,GAAI,IAAK,IAAIG,KAAOD,EAAcJ,OAAOM,UAAUC,eAAeC,KAAKJ,EAAQC,KAAQ5D,EAAO4D,GAAOD,EAAOC,IAAY,OAAO5D,IAA2BgE,MAAMC,KAAMP,WAEhT,SAAS,GAAyBC,EAAQQ,GAAY,GAAc,MAAVR,EAAgB,MAAO,GAAI,IAAkEC,EAAKH,EAAnEzD,EAEzF,SAAuC2D,EAAQQ,GAAY,GAAc,MAAVR,EAAgB,MAAO,GAAI,IAA2DC,EAAKH,EAA5DzD,EAAS,GAAQoE,EAAab,OAAOc,KAAKV,GAAqB,IAAKF,EAAI,EAAGA,EAAIW,EAAWlH,OAAQuG,IAAOG,EAAMQ,EAAWX,GAAQU,EAASG,QAAQV,IAAQ,IAAa5D,EAAO4D,GAAOD,EAAOC,IAAQ,OAAO5D,EAFxM,CAA8B2D,EAAQQ,GAAuB,GAAIZ,OAAOiB,sBAAuB,CAAE,IAAIC,EAAmBlB,OAAOiB,sBAAsBb,GAAS,IAAKF,EAAI,EAAGA,EAAIgB,EAAiBvH,OAAQuG,IAAOG,EAAMa,EAAiBhB,GAAQU,EAASG,QAAQV,IAAQ,GAAkBL,OAAOM,UAAUa,qBAAqBX,KAAKJ,EAAQC,KAAgB5D,EAAO4D,GAAOD,EAAOC,IAAU,OAAO5D,EAMne,SAASoG,GAAcxB,EAAMC,GAC3B,IAAIjQ,EAAQgQ,EAAKhQ,MACbkQ,EAAUF,EAAKE,QACfxS,EAAQ,GAAyBsS,EAAM,IAE3C,OAAoB,iBAAoB,MAAO,GAAS,CACtD9S,MAAO,GACPiT,OAAQ,GACRC,QAAS,YACTC,KAAM,OACNC,MAAO,6BACPnG,IAAK8F,EACL,kBAAmBC,GAClBxS,GAAQsC,EAAqB,iBAAoB,QAAS,CAC3DL,GAAIuQ,GACHlQ,GAAS,KAAM,KAAU,GAAqB,iBAAoB,OAAQ,CAC3EuQ,SAAU,UACVC,SAAU,UACVC,EAAG,8TACHJ,KAAM,UACNK,YAAa,OAIjB,I,kBIpCI,GJoCA,GAA0B,cAAiBc,IK/BzCC,ILgCS,IKhCU,SAAC,GAAkB,IAAb/T,EAAY,oBACzC,OACE,eAAC6T,GAAD,6BAA4B7T,GAA5B,aACE,eAAC,GAAD,SCIAgU,GAAkD,SAAC,GAIlD,IAHL9N,EAGI,EAHJA,YACAkN,EAEI,EAFJA,kBACAa,EACI,EADJA,mBAEAnX,sBAAU,WACRmX,EAAmB/N,KAClB,CAACA,IAOJ,OAAO,eAAC,GAAD,CAAkB5E,QALT,WACd8R,GAAkB,GAClBa,EAAmB/N,OCnBjBgO,GAAwBvU,KAAOC,IAAV,2FAGlBzB,GAAoB,KCOvBgW,GAAgC,SAAC,GAMhC,IALLjO,EAKI,EALJA,YACAkN,EAII,EAJJA,kBACAa,EAGI,EAHJA,mBACAT,EAEI,EAFJA,oBACAlG,EACI,EADJA,uBAEA,OACE,eAAC,GAAD,UACE,gBAAC4G,GAAD,WACE,eAACf,GAAD,CACEK,oBAAqBA,EACrBlG,uBAAwBA,EACxBpH,YAAaA,IAEf,eAAC,GAAD,CACE+N,mBAAoBA,EACpBb,kBAAmBA,EACnBlN,YAAaA,UC5BjBkO,GAASzU,KAAO0U,GAAV,wIACGlW,GAAkBO,SAAS,IAI7BP,GAAoB,KCkB3BmW,GAAsC,SAAC,GAOtC,IANL7O,EAMI,EANJA,KACA+N,EAKI,EALJA,oBACAe,EAII,EAJJA,kBACAnB,EAGI,EAHJA,kBACAa,EAEI,EAFJA,mBACA3G,EACI,EADJA,uBAEA,OAAK7H,EAAKmF,OAKR,qCACGnF,GACC,qCACG+O,oBACC,kBACE/O,EAAKkC,KAAI,SAACzB,GACR,IAAMhF,EAAUsS,EAAoBzK,SAAS7C,GAK7C,OACE,eAAC,GAAD,UACE,gBAAC8I,GAAD,WACE,gBAACE,GAAD,WACE,eAACE,GAAD,UACE,eAAC,GAAD,UACE,eAAC,GAAD,CAAUlO,QAASA,EAASK,SAVvB,WACfgT,EAAkBrO,UAYZ,eAACiJ,GAAD,UACE,eAAC,GAAD,UACE,eAAC,GAAD,UAAgBjJ,EAAYD,UAGhC,eAAC,GAAD,UAAgBC,EAAYN,OAC5B,eAAC,GAAD,CAAegL,YAAa,EAAO7M,SAAU,EAA7C,SACGmC,EAAYnC,cAGjB,gBAACkL,GAAD,WACE,eAAC,GAAD,UAAgB/I,EAAY7E,OAC5B,eAAC,GAAD,CAAeyE,SAAU,EAAzB,SACGI,EAAYJ,WAEf,eAAC,GAAD,CACEmO,mBAAoBA,EACpBb,kBAAmBA,EACnBlN,YAAaA,EACbsN,oBAAqBA,EACrBlG,uBAAwBA,WA5BjBpH,EAAYD,UAmCjC,CAACR,QAnDF,eAAC2O,GAAD,+DCxBLK,GAAwChK,cAAS,YAAmB,IAAbzK,EAAY,oBACjEgK,EAAkB/I,sBAAWkI,IAEnC,OACE,eAAC,GAAD,UACGa,EAAgB9C,UACf,eAAC,GAAD,CAAa1H,MAAO,IAAKkV,UAAW,MAEpC,eAAC,GAAD,gBAAe1U,S,2BCTjB2U,GAAsBvW,aAAH,iSAOPD,GAAqBG,MACZH,GAAqB1C,MAGpC0C,GAAmBE,OAGPF,GAAqBG,OAGzC,qBAAGsW,eAEH1Q,aADa,qOAcX2Q,GAAgBlV,cAAO,gBAAGyB,EAAH,EAAGA,UAAciI,EAAjB,0BAC3B,eAACyL,GAAA,EAAD,cAAW1T,UAAWA,GAAeiI,MADjB1J,CAAH,6B,gCC/BboV,GAAsC,SAAC,GAItC,IAHLH,EAGI,EAHJA,cACAlY,EAEI,EAFJA,SACG2M,EACC,mBACJ,OACE,gBAACwL,GAAD,6BAAmBxL,GAAnB,cACG3M,EACD,eAACiY,GAAD,CAAqBC,cAAeA,SCjBpCI,GAAmBrV,KAAOoR,OAAV,uSAQR5S,GAAmBE,OAMjBF,GAAmBE,QVf/B,GAAY,CAAC,QAAS,WAE1B,SAAS,KAA2Q,OAA9P,GAAW4S,OAAOC,QAAU,SAAUxD,GAAU,IAAK,IAAIyD,EAAI,EAAGA,EAAIC,UAAUxG,OAAQuG,IAAK,CAAE,IAAIE,EAASD,UAAUD,GAAI,IAAK,IAAIG,KAAOD,EAAcJ,OAAOM,UAAUC,eAAeC,KAAKJ,EAAQC,KAAQ5D,EAAO4D,GAAOD,EAAOC,IAAY,OAAO5D,IAA2BgE,MAAMC,KAAMP,WAEhT,SAAS,GAAyBC,EAAQQ,GAAY,GAAc,MAAVR,EAAgB,MAAO,GAAI,IAAkEC,EAAKH,EAAnEzD,EAEzF,SAAuC2D,EAAQQ,GAAY,GAAc,MAAVR,EAAgB,MAAO,GAAI,IAA2DC,EAAKH,EAA5DzD,EAAS,GAAQoE,EAAab,OAAOc,KAAKV,GAAqB,IAAKF,EAAI,EAAGA,EAAIW,EAAWlH,OAAQuG,IAAOG,EAAMQ,EAAWX,GAAQU,EAASG,QAAQV,IAAQ,IAAa5D,EAAO4D,GAAOD,EAAOC,IAAQ,OAAO5D,EAFxM,CAA8B2D,EAAQQ,GAAuB,GAAIZ,OAAOiB,sBAAuB,CAAE,IAAIC,EAAmBlB,OAAOiB,sBAAsBb,GAAS,IAAKF,EAAI,EAAGA,EAAIgB,EAAiBvH,OAAQuG,IAAOG,EAAMa,EAAiBhB,GAAQU,EAASG,QAAQV,IAAQ,GAAkBL,OAAOM,UAAUa,qBAAqBX,KAAKJ,EAAQC,KAAgB5D,EAAO4D,GAAOD,EAAOC,IAAU,OAAO5D,EAMne,SAASuH,GAAQ3C,EAAMC,GACrB,IAAIjQ,EAAQgQ,EAAKhQ,MACbkQ,EAAUF,EAAKE,QACfxS,EAAQ,GAAyBsS,EAAM,IAE3C,OAAoB,iBAAoB,MAAO,GAAS,CACtD9S,MAAO,GACPiT,OAAQ,GACRC,QAAS,YACTC,KAAM,OACNC,MAAO,6BACPnG,IAAK8F,EACL,kBAAmBC,GAClBxS,GAAQsC,EAAqB,iBAAoB,QAAS,CAC3DL,GAAIuQ,GACHlQ,GAAS,KAAM,KAAU,GAAqB,iBAAoB,OAAQ,CAC3EuQ,SAAU,UACVC,SAAU,UACVC,EAAG,+YACHJ,KAAM,UACNK,YAAa,OAIjB,I,8BAAI,GAA0B,cAAiBiC,IW7BzCC,IX8BS,IW9BqB,SAAAlV,GAClC,OACE,eAACgV,GAAD,6BAAsBhV,GAAtB,aACE,eAAC,GAAD,S,mBCFAmV,GAAiBxV,aAAOyV,KAAPzV,CAAH,sCAChB,qBAAG0V,UAEHnR,aADQ,6FAGW/F,GAA0B,OCD3CiX,GAA4B,SAAApV,GAChC,OAAO,eAACmV,GAAD,gBAAoBnV,K,UCNvBsV,GAAoD,SAAAtV,GACxD,OAAO,eAAC,KAAD,gBAAwBA,K,UCJ3BuV,GAAkB,SAAC,GAAkB,IAAhB7Y,EAAe,EAAfA,SACzB,OACE,eAAC,KAAD,CAASoB,MAAO,CAAEpC,MAAM,GAAD,OAAKyC,GAAmBnC,YAA/C,SACGU,K,yBCHD8Y,GAAS,SAACxV,GACd,IAAQtD,EAA2BsD,EAA3BtD,SAAa2M,EAArB,aAAmCrJ,EAAnC,IACA,OACE,eAAC,KAAD,2BACElC,MAAO,CACL2X,WAAYtX,GAAqBG,MACjC5C,MAAOyC,GAAmBnC,YAExBqN,GALN,aAOG3M,M,UCLDgZ,GAA8BpZ,KAAMkQ,YAAW,SAACxM,EAAOyM,GAC3D,OACE,eAAC,KAAD,cACE3O,MAAO,CACL2X,WAAYtX,GAAqBG,MACjC5C,MAAOyC,GAAmBnC,WAE5ByQ,IAAKA,GACDzM,OCfJ2V,GAAmB,CACvB,CAAEjV,MAAO,SAAUzC,MAAO,UAC1B,CAAEyC,MAAO,WAAYzC,MAAO,aC2BxB2X,GAAuCnL,cAC3C,YAAqE,IAAlEX,EAAiE,EAAjEA,QAASxH,EAAwD,EAAxDA,MAAOyH,EAAiD,EAAjDA,gBAAiB8L,EAAgC,EAAhCA,gBAAiBC,EAAe,EAAfA,SAC7C9L,EAAkB/I,sBAAWkI,IAEnC,EAA4C4M,aAAQ,CAClDC,cAAe,CACbhQ,QAAS6P,EAAgB7P,QACzBC,IAAK4P,EAAgB5P,IACrBlC,SAAU8R,EAAgB9R,SAC1B6B,KAAMiQ,EAAgBjQ,KACtBC,YAAagQ,EAAgBhQ,YAC7BC,SAAU+P,EAAgB/P,SAC1BzE,KAAMwU,EAAgBxU,QARlB4U,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,SAAUC,EAA3B,EAA2BA,aAY3B,OACE,eAAC,GAAD,CACErM,QAASA,EACTxH,MAAOA,EACPyH,gBAAiBA,EACjBqM,WAAW,EAJb,SAME,uBAAMN,SAAUK,EAAaL,GAA7B,SACE,gBAACxM,GAAD,WACE,gBAACE,GAAD,WACE,yCAAWqM,EAAgB5P,OAC3B,2CAAa4P,EAAgBjQ,WAE/B,eAAC+D,GAAD,IACA,eAACJ,GAAD,UACE,eAAC,KAAD,CACE0M,QAASA,EACTtY,KAAK,WACL0Y,MAAO,CAAEhB,UAAU,GACnBiB,OAAQ,gBAAGC,EAAH,EAAGA,MAAH,OACN,eAAC,GAAD,CACEC,aAAW,EACXC,MAAOzM,EAAgB3H,WACpBsF,KAAI,SAAA5D,GAAQ,OAAIA,KAChBD,QACC,SAAC7F,EAAOyY,EAAOlP,GAAf,OAAwBA,EAAKwK,QAAQ/T,KAAWyY,KAEpD9F,YAAY,qBACZ+F,oBAAqBd,EAAgB9R,SACrC6S,aAAcf,EAAgB9R,SAC9BxC,SAAU,SAAAtD,GAAK,OAAIsY,EAAMhV,SAAStD,WAM1C,eAACsL,GAAD,UACE,eAACmM,GAAD,6BACMQ,EAAS,cAAe,CAC1BjY,MAAO,MAFX,IAIEoD,KAAK,SACL3F,MAAOyC,GAAmBE,OAC1BuS,YAAY,cACZgG,aAAcf,EAAgBhQ,iBAIlC,gBAAC2D,GAAD,WACE,eAAC,KAAD,CACEyM,QAASA,EACTtY,KAAK,OACLiZ,aAAcf,EAAgBxU,KAC9BiV,OAAQ,gBAAGC,EAAH,EAAGA,MAAH,OACN,eAAC,GAAD,CACEK,aAAcf,EAAgBxU,KAC9BwV,QAASlB,GACTpU,SAAU,SAAAtD,GAAK,OAAIsY,EAAMhV,SAAStD,SAIxC,eAAC,GAAD,UACE,gBAAC,GAAD,uBAEE,eAACyX,GAAD,6BACMQ,EAAS,WAAY,CACvBb,UAAU,EACVpX,MAAO4X,EAAgB/P,YAH3B,IAKEzE,KAAK,SACLyV,IAAK,EACLtX,MAAOrB,GAAoB,IAC3B4Y,WAAY5Y,GAAoB,GAChCyY,aAAcf,EAAgB/P,SAC9BpK,MAAOyC,GAAmBE,kBAMlC,eAACoL,GAAD,UACE,eAAC,GAAD,CAAQpI,KAAK,SAAb,iCCnHR2V,GAA6DvM,cACjE,YAAwC,IAArCvE,EAAoC,EAApCA,YAAaoN,EAAuB,EAAvBA,iBACRtJ,EAAkB/I,sBAAWkI,IAEnC,EAA4DxM,qBAAS,GAArE,oBAAOsa,EAAP,KAA+BC,EAA/B,KA4BA,OACE,uCACE,eAAC,GAAD,CAAY5V,QAAS,kBAAM4V,GAA0B,MACrD,eAACtB,GAAD,CACEtT,MAAM,mBACNwH,QAASmN,EACTlN,gBAAiB,kBAAMmN,GAA0B,IACjDrB,gBAAiB3P,EACjB4P,SAlC8D,SAAC,GAQ9D,IAPL9P,EAOI,EAPJA,QACAC,EAMI,EANJA,IACAL,EAKI,EALJA,KACAC,EAII,EAJJA,YACA9B,EAGI,EAHJA,SACA+B,EAEI,EAFJA,SACAzE,EACI,EADJA,KAEAqE,GACmB,CACfM,UACAC,MACAL,OACAC,cACA9B,WACA+B,WACAzE,SAEDkE,MAAK,SAAAE,GACJuE,EAAgBzB,gBAAgBrC,EAAYD,IAAKR,GACjD6N,GAAiB,SAAA9R,GAAS,OAAKA,KAC/B0V,IAA4BzR,EAAK0R,iBCrCrCC,GAA0BzX,KAAOC,IAAV,uLAIjBzB,GAAoB,IAEnBA,GAAkB,IACjBA,GAAkB,KCY1BkZ,GAAkC,SAAC,GAMlC,IALLnR,EAKI,EALJA,YACAoN,EAII,EAJJA,iBACAF,EAGI,EAHJA,kBACAI,EAEI,EAFJA,oBACAlG,EACI,EADJA,uBAEA,OACE,gBAAC8J,GAAD,WACE,eAACJ,GAAD,CACE1D,iBAAkBA,EAClBpN,YAAaA,IAEf,eAACiN,GAAD,CACEjN,YAAaA,EACbkN,kBAAmBA,EACnBI,oBAAqBA,EACrBlG,uBAAwBA,QCpC1BgK,GAAc3X,KAAOC,IAAV,4HAIJzB,GAAoB,IAClBA,GAAkBO,SAAS,KCSpC6Y,GAA0C,SAAC,GAU1C,IATLzN,EASI,EATJA,QACAG,EAQI,EARJA,qBACAF,EAOI,EAPJA,gBACA8L,EAMI,EANJA,gBACAjB,EAKI,EALJA,cACAtB,EAII,EAJJA,iBACAF,EAGI,EAHJA,kBACAI,EAEI,EAFJA,oBACAlG,EACI,EADJA,uBAEMkK,EAAa,CACjB,CAAElV,MAAO,KAAMmD,KAAMoQ,EAAgB5P,KACrC,CAAE3D,MAAO,OAAQmD,KAAMoQ,EAAgBjQ,MACvC,CAAEtD,MAAO,WAAYmD,KAAMoQ,EAAgB9R,UAC3C,CAAEzB,MAAO,OAAQmD,KAAMoQ,EAAgBxU,MACvC,CAAEiB,MAAO,WAAYmD,KAAMoQ,EAAgB/P,UAC3C,CAAExD,MAAO,cAAemD,KAAMoQ,EAAgBhQ,cAGhD,OACE,eAAC,GAAD,CACEiE,QAASA,EACTG,qBAAsBA,EACtBF,gBAAiBA,EACjB6K,cAAeA,EAJjB,SAME,gBAAC0C,GAAD,WACGE,EAAW7P,KAAI,SAAA4O,GAAK,OACnB,+BACGA,EAAMjU,MADT,MACmBiU,EAAM9Q,OADjB8Q,EAAMjU,UAIhB,eAAC,GAAD,CACEkR,oBAAqBA,EACrBlG,uBAAwBA,EACxB8F,kBAAmBA,EACnBE,iBAAkBA,EAClBpN,YAAa2P,UCpDjB4B,GAA0B9X,KAAOiB,KAAV,2KACdzC,GAAkBO,SAAS,IACzBP,GAAkBa,OAAOE,KAC/Bf,GAAkBzC,MAAM2C,OACtBF,GAAoB,IACdA,GAA0B,IACvBA,GAAmBM,gBCEnCiZ,GAAsC,SAAC,GAKtC,IAJLhb,EAII,EAJJA,SACA8W,EAGI,EAHJA,oBACAlG,EAEI,EAFJA,uBACApH,EACI,EADJA,YAWA,OACE,eAACuR,GAAD,CAAyBnW,QAVJ,WACrB,IAAMkH,EAAMgL,EAAoB/K,WAAU,SAAAC,GAAE,OAAIA,EAAGzC,MAAQC,EAAYD,OAEvEqH,EAAuB,GAAD,oBACjBkG,EAAoBE,MAAM,EAAGlL,IADZ,aAEjBgL,EAAoBE,MAAMlL,EAAM,OAKrC,SACG9L,KCzBDib,GAAgBhY,KAAOC,IAAV,4GAEFzB,GAAkBO,SAAS,IAE7BP,GAAoB,KAI7ByZ,GAAmBjY,KAAOC,IAAV,sJACTzB,GAAoB,IAKxBA,GAAoB,KAGvB0Z,GAAkBlY,KAAOC,IAAV,sLAILzB,GAAoB,IAEvBA,GAAkB,IACjBA,GAAkB,KCZ1B2Z,GAAkD,SAAC,GAOlD,IANLhO,EAMI,EANJA,QACAC,EAKI,EALJA,gBACAyJ,EAII,EAJJA,oBACAlG,EAGI,EAHJA,uBACAgG,EAEI,EAFJA,iBACAC,EACI,EADJA,yCAEA,OACE,eAAC,GAAD,CACEzJ,QAASA,EACTC,gBAAiBA,EACjBgO,2BAA2B,EAC3BnD,eAAe,EAJjB,SAME,gBAAC+C,GAAD,WACE,4DACA,eAACC,GAAD,UACGpE,EAAoB7L,KAAI,SAAAzB,GACvB,OACE,eAAC,GAAD,CACEA,YAAaA,EACbsN,oBAAqBA,EACrBlG,uBAAwBA,EAH1B,SAMGpH,EAAYD,KAFRC,EAAYD,UAOzB,eAAC4R,GAAD,UACE,eAAC1E,GAAD,CACEE,oBAAqBG,EAAoB7L,KACvC,SAAAzB,GAAW,OAAIA,KAEjBoN,iBAAkBA,EAClBC,yCACEA,EAEFC,oBAAqBA,EACrBlG,uBAAwBA,Y,wCC3CvB0K,GAA0B,WACrC,MAAO,CACLC,SAAUC,mBAAa,IAAIC,MAC3BC,QAASC,aAAe,IAAIF,QC2SjBG,GA5SQ7N,cAAS,WAC9B,IAAMT,EAAkB/I,sBAAWkI,IAGnC,EAAwBxM,oBAAuB,IAA/C,oBAAO8I,EAAP,KAAa8S,EAAb,KACA,EAA0C5b,qBAAkB,GAA5D,oBAAO6b,EAAP,KAAsBlF,EAAtB,KAEA,EAAkD3W,qBAAkB,GAApE,oBAAO8b,EAAP,KAA0BC,EAA1B,KACA,EAA0D/b,qBACxD,GADF,oBAAOgc,EAAP,KAA8BC,EAA9B,KAIA,EAAgCjc,oBAC9Bqb,KAA0BC,UAD5B,oBAAO7L,EAAP,KAAiBgB,EAAjB,KAGA,EAA4BzQ,oBAAeqb,KAA0BI,SAArE,oBAAO/L,EAAP,KAAegB,EAAf,KACA,EAAsB1Q,oBAAmB,CAAC,SAAU,aAA7C8O,EAAP,qBACA,EAAoD9O,oBAAmB,IAAvE,oBAAO+O,EAAP,KAA2BmN,EAA3B,KAEA,EAAsClc,oBAAiB,GAAvD,oBAAOmc,EAAP,KAAoBC,EAApB,KACA,EAA8Bpc,oBAAiB,IAAxCqc,EAAP,qBACA,EAAoCrc,oBAAiB,GAArD,oBAAOsc,EAAP,KAAmBC,EAAnB,KAEA,EAAsDvc,oBACpD,IADF,oBAAO6W,EAAP,KAA4BlG,EAA5B,KAGA,EAA4C3Q,qBAAkB,GAA9D,oBAAO2S,EAAP,KAAuB/B,EAAvB,KAEA,EAA4C5Q,qBAAkB,GAA9D,oBAAOwc,EAAP,KAAuB/F,EAAvB,KACA,EAA8CzW,oBAAqB,CACjEqJ,QAAS,GACTC,IAAK,GACLL,KAAM,GACNvE,KAAM,GACN0C,SAAU,GACV+B,SAAU,EACVD,YAAa,KAPf,qBAAOgQ,GAAP,MAAwB5B,GAAxB,MAUA,GAGItX,qBAAS,GAHb,sBACEyc,GADF,MAEE7F,GAFF,MAKM8F,GAAyBP,EAAcE,EACvCM,GAA0BD,GAAyBL,EAQnDO,GAAqB,SAAC9T,GAC1B,OAAOA,EAAKiO,MAAM4F,GAAyBD,KAGvCG,GAAoB,SAAC5T,GACzB,OAAOpI,mBAAMoI,EAAM,aAAc,IAAIuS,OAGjCsB,GAAoD,IAA9B/N,EAAmBd,OAEzC8O,GAAe,WACnB,IAAMC,EAAmB3P,EAAgBvE,KAAK3B,QAAO,SAAA2B,GACnD,OACE+T,GAAkB/T,EAAKG,MAAMgU,WAAaxN,EAASwN,WACnDJ,GAAkB/T,EAAKG,MAAMgU,WAAavN,EAAOuN,aAI/CC,EAA8B7P,EAAgBvE,KACjD3B,QAAO,SAAA2B,GACN,GAAIgU,GACF,OAAOhU,EAAKpE,OAASqK,EAAmB,MAG3C5H,QAAO,SAAA2B,GACN,OACE+T,GAAkB/T,EAAKG,MAAMgU,WAAaxN,EAAUwN,WACpDJ,GAAkB/T,EAAKG,MAAMgU,WAAavN,EAAQuN,aAIxD,OAAKH,GAeAzP,EAAgB3C,mBAAmBuD,OAG/BiP,EAA4B/V,QAEjC,SAAAoC,GAAW,OAGI,IAFb8D,EAAgB3C,mBAAmBvD,QACjC,SAAAC,GAAQ,OAAIA,IAAamC,EAAYnC,YACrC6G,UAPCiP,EAdF7P,EAAgB3C,mBAAmBuD,OAI/B+O,EAAiB7V,QACtB,SAAAoC,GAAW,OAGI,IAFb8D,EAAgB3C,mBAAmBvD,QACjC,SAAAC,GAAQ,OAAIA,IAAamC,EAAYnC,YACrC6G,UAPC+O,GAuJb,OA/BA7c,sBAAU,WACRyb,EAAQmB,QACP,CAACA,KAAe9O,OAAQ4N,IAG3B1b,sBAAU,WACHyc,GAAmB9T,GAAMmF,QAC5BmO,EAAe,KAEhB,CAACtT,EAAKmF,SAGT9N,sBAAU,WACRoc,EAAcY,KAAKC,KAAKtU,EAAKmF,OAASoO,MACrC,CAACvT,EAAKmF,SAGT9N,sBAAU,WACR0W,EAAoB5I,OAChB2I,IAAyC,GACzCA,IAAyC,KAC5C,CAACC,EAAoB5I,SAGxB9N,sBAAU,WACR0W,EAAoB5I,QACpB4I,EAAoB5I,SAAW2O,GAAmB9T,GAAMmF,OACpD2C,GAAkB,GAClBA,GAAkB,KACrB,CAACiG,EAAoB5I,OAAQnF,EAAKmF,SAGnC,gBAAC,GAAD,WACE,eAAC,GAAD,CACEwB,SAAUA,EACVC,OAAQA,EACRe,YAAaA,EACbC,UAAWA,EACXC,uBAAwBA,EACxBC,kBAAmBA,EACnB9B,YAAaA,EACbE,kBAvGoB,SAAC1J,GACzB,IAAM+X,EAAuBtO,EAAmB3C,SAAS9G,GAKzD,GAHAqL,EAAuB,IACvBC,GAAkB,GAEdyM,EAAsB,CACxB,IAAMxR,EAAMkD,EAAmBjD,WAAU,SAACC,GAAD,OAAgBA,IAAOzG,KAChE4W,EAAsB,GAAD,oBAChBnN,EAAmBgI,MAAM,EAAGlL,IADZ,aAEhBkD,EAAmBgI,MAAMlL,EAAM,WAGpCqQ,EAAsB,GAAD,oBAAKnN,GAAL,CAAyBzJ,MA2F5CyJ,mBAAoBA,IAEtB,eAAC,GAAD,CACE4D,eAAgBA,EAChBC,sBA/HwB,WAI5B,GAFEiE,EAAoB5I,SAAW2O,GAAmB9T,GAAMmF,OAGxD0C,EAAuB,IACvBC,GAAkB,OACb,CACL,IAAI0M,EAAoC,GACxCV,GAAmB9T,GAAMkC,KAAI,SAAAzB,GACtBsN,EAAoBzK,SAAS7C,IAChC+T,EAAoB3R,KAAKpC,MAG7BoH,EAAuB,GAAD,oBAAKkG,GAAwByG,IACnD1M,GAAkB,KAiHhBiC,YA5Fc,WACdiJ,GACFF,EACE,aAAI9S,GAAMyU,MAAK,SAACC,EAAeC,GAC7B,OACE5c,mBAAM2c,EAAEvU,KAAM,aAAc,IAAIuS,MAAQyB,UACxCpc,mBAAM4c,EAAExU,KAAM,aAAc,IAAIuS,MAAQyB,cAI9ClB,GAAqB,KAErBH,EACE,aAAI9S,GAAMyU,MAAK,SAACC,EAAeC,GAC7B,OACE5c,mBAAM4c,EAAExU,KAAM,aAAc,IAAIuS,MAAQyB,UACxCpc,mBAAM2c,EAAEvU,KAAM,aAAc,IAAIuS,MAAQyB,cAI9ClB,GAAqB,IAEvBpL,EAAuB,KAuEnBmC,gBApEkB,WAClBkJ,GACFJ,EACE,aAAI9S,GAAMyU,MAAK,SAACC,EAAeC,GAC7B,OAAOD,EAAErU,SAAWsU,EAAEtU,aAG1B8S,GAAyB,KAEzBL,EACE,aAAI9S,GAAMyU,MAAK,SAACC,EAAeC,GAC7B,OAAOA,EAAEtU,SAAWqU,EAAErU,aAG1B8S,GAAyB,IAE3BtL,EAAuB,OAsDrB,eAACwB,GAAD,UACE,eAAC2F,GAAD,CACEhP,KAAM8T,GAAmB9T,GACzB+N,oBAAqBA,EACrBe,kBArJkB,SAACrO,GAEzB,GADoBsN,EAAoBzK,SAAS7C,GAChC,CACf,IAAMsC,EAAMgL,EAAoB/K,WAAU,SAAAC,GAAE,OAAIA,IAAOxC,KACvDoH,EAAuB,GAAD,oBACjBkG,EAAoBE,MAAM,EAAGlL,IADZ,aAEjBgL,EAAoBE,MAAMlL,EAAM,MAErC+E,GAAkB,QAElBD,EAAuB,GAAD,oBAAKkG,GAAL,CAA0BtN,MA4I5CkN,kBAAmBA,EACnBa,mBAAoBA,GACpB3G,uBAAwBA,MAG5B,eAACyB,GAAD,UACE,eAAC,GAAD,CACEsL,KAAMvB,EACNG,WAAYA,EACZqB,aAhOkB,SAACC,GACzBxB,EAAewB,GACfjN,EAAuB,IACvBC,GAAkB,QAgOhB,eAAC,GAAD,CACEzD,QAASqP,EACTlP,sBAAoB,EACpBF,gBAAiB,kBAAMqJ,GAAkB,IACzCyC,gBAAiBA,GACjBjB,eAAe,EACftB,iBAAkBA,EAClBF,kBAAmBA,EACnBI,oBAAqBA,EACrBlG,uBAAwBA,IAE1B,eAAC,GAAD,CACExD,QAASsP,GACTrP,gBAAiB,kBAAMwJ,IAAyC,IAChEqB,eAAe,EACfpB,oBAAqBA,EACrBlG,uBAAwBA,EACxBgG,iBAAkBA,EAClBC,yCACEA,WChTJiH,GAAmB,WACvB,OACE,uCACE,eAAChQ,GAAD,IACA,eAAC,GAAD,QCTS,OAA0B,iCCOnCiQ,GAAa9a,aAAOW,KAAPX,CAAH,oVAMLxB,GAAoB,IACnBA,GAAoB,IAEVA,GAAqBgB,KACjBub,GAKFvc,GAAqBgB,MCdvCwb,GAAwB,SAAC,GAAkB,IAAb3a,EAAY,oBAC9C,OAAO,eAACya,GAAD,gBAAgBza,KCyBnB4a,GAAsCnQ,cAC1C,YAAoD,IAAD,EAAhDX,EAAgD,EAAhDA,QAASxH,EAAuC,EAAvCA,MAAOyH,EAAgC,EAAhCA,gBAAiB+L,EAAe,EAAfA,SAC5B9L,EAAkB/I,sBAAWkI,IAEnC,EAAwCxM,oBAAe,IAAIwb,MAA3D,oBAAO0C,EAAP,KAAqBC,EAArB,KAEA,EAMI/E,eALFE,EADF,EACEA,QACAC,EAFF,EAEEA,SACAC,EAHF,EAGEA,aACA4E,EAJF,EAIEA,MACaC,EALf,EAKEC,UAAaD,OAGf,OACE,gBAAC,GAAD,CACElR,QAASA,EACTxH,MAAOA,EACPyH,gBAAiBA,EACjBqM,WAAW,EACX2B,2BAA2B,EAC3BmD,eAAgB,WACdH,EAAM,CACJjV,SAAU,KACV/B,SAAU,GACV8B,YAAa,GACbxE,KAAM,SACNuE,KAAMuV,mBAAON,EAAc,gBAE7BC,EAAgB,IAAI3C,OAdxB,UAiBE,eAACxO,GAAD,IACA,uBAAMmM,SAAUK,EAAaL,GAA7B,SACE,gBAACxM,GAAD,WACE,gBAACC,GAAD,WACE,eAAC,KAAD,CACE0M,QAASA,EACTtY,KAAK,OACL0Y,MAAO,CAAEhB,UAAU,GACnBiB,OAAQ,gBAAGC,EAAH,EAAGA,MAAH,OACN,eAAC,GAAD,CACEhV,SAAU,SAAAqE,GACRkV,EAAgBlV,GAChB2Q,EAAMhV,SAAS4Z,mBAAOvV,EAAM,gBAE9B0G,SAAUuO,EACVxO,OAAQ,IAAI8L,UAIM,cAAjB,OAAN6C,QAAM,IAANA,GAAA,UAAAA,EAAQpV,YAAR,eAAcvE,OACb,eAACqI,GAAD,UAAc1H,GAAU,qBAI5B,eAACuH,GAAD,UACE,eAAC,KAAD,CACE0M,QAASA,EACTtY,KAAK,WACL0Y,MAAO,CAAEhB,UAAU,GACnBiB,OAAQ,oBAAGC,EAAH,EAAGA,MAAH,OACN,eAAC,GAAD,CACEC,aAAW,EACXC,MAAOzM,EAAgB3H,WACpBsF,KAAI,SAAA5D,GAAQ,OAAIA,KAChBD,QACC,SAAC7F,EAAOyY,EAAOlP,GAAf,OAAwBA,EAAKwK,QAAQ/T,KAAWyY,KAEpD9F,YAC6B,cAArB,OAANoK,QAAM,IAANA,GAAA,UAAAA,EAAQjX,gBAAR,eAAkB1C,MACd,0BACA,qBAENE,SAAU,SAAAtD,GAAK,OAAIsY,EAAMhV,SAAStD,IAClCoX,SAAqC,cAArB,OAAN2F,QAAM,IAANA,GAAA,UAAAA,EAAQjX,gBAAR,eAAkB1C,aAMpC,eAACkI,GAAD,UACE,eAACmM,GAAD,6BACMQ,EAAS,cAAe,CAAEjY,MAAO,MADvC,IAEEoD,KAAK,SACL3F,MAAOyC,GAAmBE,OAC1BuS,YAAY,mBAIhB,gBAACpH,GAAD,WACE,eAAC,KAAD,CACEyM,QAASA,EACTtY,KAAK,OACLiZ,aAAa,SACbN,OAAQ,gBAAGC,EAAH,EAAGA,MAAH,OACN,eAAC,GAAD,CACEM,QAASlB,GACTpU,SAAU,SAAAtD,GAAK,OAAIsY,EAAMhV,SAAStD,SAIxC,eAAC,GAAD,UACE,gBAAC,GAAD,WACG+D,GAAU,YADb,IAEE,eAAC0T,GAAD,6BACMQ,EAAS,WAAY,CAAEb,UAAU,KADvC,IAEEhU,KAAK,SACLyV,IAAK,EACLtX,MAAOrB,GAAoB,IAC3B4Y,WAAY5Y,GAAoB,GAChCzC,MAAOyC,GAAmBE,kBAMlC,eAACoL,GAAD,UACE,eAAC,GAAD,CAAQpI,KAAK,SAAb,SAAuBW,GAAU,0BC5IzCoZ,GAAiB3Q,cAAS,WAC9B,IAAMT,EAAkB/I,sBAAWkI,IAEnC,EAA0DxM,qBAAS,GAAnE,oBAAO0e,EAAP,KAA8BC,EAA9B,KAyBA,OACE,uCACE,eAAC,GAAD,CAAMha,QAAS,kBAAMga,GAAyB,MAC9C,eAACV,GAAD,CACEtY,MAAM,kBACNwH,QAASuR,EACTtR,gBAAiB,kBAAMuR,GAAyB,IAChDxF,SA9B0D,SAAC,GAO1D,IANL9P,EAMI,EANJA,QACAJ,EAKI,EALJA,KACAC,EAII,EAJJA,YACA9B,EAGI,EAHJA,SACA+B,EAEI,EAFJA,SACAzE,EACI,EADJA,KAEAqE,GACqB,CACjBM,UACA3E,OACAyE,WACA/B,WACA6B,OACAC,gBAEDN,MAAK,SAAAE,GACJuE,EAAgB3B,eAAe5C,GAC/B6V,IAA2B7V,EAAK0R,iB,mBClClCoE,GAAe5b,KAAOC,IAAV,oFCAlB4b,KAAMC,SAASC,KAAK5b,KAAO,GAC3B0b,KAAMC,SAASC,KAAK1c,OAAS,OAC7Bwc,KAAMC,SAAS/f,MAAQ,UAEhB,IAAMigB,GAAW,CACtBjb,MAAO,GACP/E,gBAAiB,yBACjBigB,aAAc,EACdC,qBAAsB,yBACtBC,mBAAoB,GAGTjF,GAAU,CACrBkF,QAAS,CACPC,OAAQ,CACN9b,SAAS,GAEX+b,QAAS,CACPC,KAAM,QACNC,WAAW,EACXC,UAAW,GAEbC,WAAY,CACVnc,SAAS,IAIboc,qBAAqB,EACrBC,OAAQ,CACNC,MAAO,CACLC,MAAO,CACLC,aAAa,EACb5F,IAAK,EAEL6F,WAAY,QACZC,SAAU,SAAS3e,GAEjB,OADuB,GAATA,EAAaA,EAAb,WAAyBA,EAAzB,SAKlB4e,KAAM,CACJ3c,SAAS,GAEX4c,SAAS,GAGXC,MAAO,CACLN,MAAO,GACPI,KAAM,CACJ3c,SAAS,M,kBCrCX8c,GAA4BvS,cAAS,YAAkC,IAA/BwS,EAA8B,EAA9BA,UAAWC,EAAmB,EAAnBA,aACjDlT,EAAkB/I,sBAAWkI,IAE7B8O,EAAWD,KAA0BC,SACrCG,EAAUJ,KAA0BI,QAEpC+E,EAAaD,EAAe,WAAa,SAEzCE,EAAsBC,aAAKrT,EAAgBvE,MAC9C3B,QAAO,YAAqB,IAAlBzC,EAAiB,EAAjBA,KAAMuE,EAAW,EAAXA,KACf,OACEuX,IAAe9b,GACf,CAAC,EAAG,GAAGic,MACL,SAAAC,GAAC,OACCA,IAAMC,aAAWhgB,mBAAMoI,EAAM,aAAc,IAAIuS,MAASF,OAE5D,EAAE,EAAG,GAAGqF,MACN,SAAAC,GAAC,OAAIA,IAAMC,aAAWhgB,mBAAMoI,EAAM,aAAc,IAAIuS,MAASC,SAIlE8B,MAAK,SAACC,EAAQC,GAAT,OAAoBoD,aAAW,IAAIrF,KAAKgC,EAAEvU,MAAO,IAAIuS,KAAKiC,EAAExU,UAE9D6X,EAAoBR,EAAUtV,KAAI,SAAA+V,GACtC,OAAON,EACJtZ,QAAO,YAAe,IAAZ8B,EAAW,EAAXA,KACT,OACEpI,mBAAMkgB,EAAe,WAAY,IAAIvF,MAAQyB,YAC7Cpc,mBAAMoI,EAAM,aAAc,IAAIuS,MAAQyB,aAGzC+D,QAAO,SAACC,EAAKC,GACZ,OAAOD,EAAMC,EAAI/X,WAChB,MAGDgY,EAAU,CACdC,OAAQd,EACRtB,SAAU,CAAC,cAEPlW,KAAMgY,GACH9B,MAKT,OACE,eAACJ,GAAD,UACE,eAAC,KAAD,CAAK9V,KAAMqY,EAASjH,QAASA,U,mBC5DnC2E,KAAMtF,SAAS8H,MAEfhhB,OAAOihB,iBAAiB,UAAU,WAC5BjhB,OAAOkhB,WAAa,IACtB1C,KAAMC,SAASC,KAAK5b,KAAO,GAE3B0b,KAAMC,SAASC,KAAK5b,KAAO,MAIxB,I,wEAAM6b,GAAW,CACtBjb,MAAO,iCACP/E,gBAAiB,CACf,0BACA,0BACA,0BACA,0BACA,2BACA,0BACA,0BAEFwiB,YAAa,CACX,wBACA,wBACA,wBACA,wBACA,yBACA,wBACA,wBAGFC,YAAa,EACbC,YAAa,GACbC,QAAS,GAGEC,GAAoB,CAC/Bre,SAAS,EACTse,MAAO,MACP5C,aAAc,EACdlgB,MAAO,UACPggB,KAAM,CACJ5b,KAAM,GACNd,OAAQ,SAICgd,GAAS,CACpByC,SAAU,OACVnd,SAAS,GCpDI,OAA0B,kDCInCod,GAAe/e,KAAOC,IAAV,0QAYMzB,GAAmB1C,OAIrCkjB,GAAWhf,KAAOC,IAAV,4EAKRgf,GAAOjf,KAAOkf,EAAV,2RACK1gB,GAAkBO,SAAS,IAC/BP,GAAmBE,OAMRygB,ICmCPC,GAxDEtU,cAAS,WACxB,IAAMT,EAAkB/I,sBAAWkI,IAEnCqS,KAAMtF,SAAS8H,MAEf,IAGMgB,EAHmBhV,EAAgBvE,KAAK3B,QAC5C,SAAAqN,GAAC,MAAc,YAAVA,EAAE9P,QAEuCsc,QAC9C,SAACC,EAAUC,GAAX,OACGD,EAAIC,EAAI9Z,WAAa6Z,EAAIC,EAAI9Z,WAAa,GAAK8Z,EAAI/X,SAAW8X,IAEjE,IAEIqB,EAAehO,OAAOc,KAAKiN,GAAwBrX,KACvD,SAAAwJ,GAAC,OAAI6N,EAAuB7N,MAGxB+N,EAAaD,EAAatB,QAAO,SAACC,EAAKC,GAAN,OAAcD,EAAMC,IAAK,GAE1DC,EAAU,CACdC,OAAQ9M,OAAOc,KAAKiN,GACpBrD,SAAU,CAAC,cAEPlW,KAAMwZ,GACHtD,MAKH9E,EAAU,CACdsI,YAAY,EACZC,OAAQ,MACRrD,QAAS,CACPC,OAAQA,GACRK,WAAW,6BACNkC,IADK,IAERc,UAAW,SAACphB,GAEV,MAAM,GAAN,QADqB,IAARA,EAAeihB,GACdI,QAAQ,GAAtB,UAMR,OACE,gBAACZ,GAAD,WACE,eAACC,GAAD,UACE,gBAACC,GAAD,WAAO5c,GAAU,eAAjB,cAGF,eAAC,KAAD,CAAKyD,KAAMqY,EAASjH,QAASA,UC5D7B0I,GAAgB5f,KAAOC,IAAV,4MAQGzB,GAAoB,KAIpCygB,GAAOjf,KAAOiB,KAAV,8TACUzC,GAAoB,GACvBA,GAAkBa,OAAOE,KAC3Bf,GAAkBO,SAAS,IAC/BP,GAAmBI,MAIVJ,GAAoB,IAC3BA,GAAmBK,IAQfL,GAAkBO,SAAS,KC1BtC8gB,GAAgB/U,cAAS,WAC7B,IAAMT,EAAkB/I,sBAAWkI,IAE7BsW,EAAUzV,EAAgBvE,KAC7B3B,QAAO,SAAAqN,GAAC,MAAc,YAAVA,EAAE9P,QACdsG,KAAI,SAAAwJ,GAAC,OAAIA,EAAErL,YACR4Z,EAAU1V,EAAgBvE,KAC7B3B,QAAO,SAAAqN,GAAC,MAAc,UAAVA,EAAE9P,QACdsG,KAAI,SAAAwJ,GAAC,OAAIA,EAAErL,YAERoZ,EAAaO,EAAQ9B,QAAO,SAACC,EAAKC,GAAN,OAAcD,EAAMC,IAAK,GACrD8B,EAAaD,EAAQ/B,QAAO,SAACC,EAAKC,GAAN,OAAcD,EAAMC,IAAK,GAE3D,OACE,qCACE,gBAAC0B,GAAD,WACE,gBAAC,GAAD,WACGvd,GAAU,eADb,KAC+B2d,EAD/B,QAGA,gBAAC,GAAD,WACG3d,GAAU,iBADb,KACiCkd,EADjC,gBCtBFU,GAAkBjgB,KAAOC,IAAV,iMAGLzB,GAAqBG,OAM/BuhB,GAAgBlgB,KAAOC,IAAV,oSAebkgB,GAAengB,KAAOC,IAAV,uIAIIzB,GAAoB,KAIpC4hB,GAAoBpgB,KAAOC,IAAV,2PAejBogB,GAAiBrgB,KAAOkf,EAAV,uPAGL1gB,GAAkBO,SAAS,IAE/BP,GAAmBE,OACXF,GAAoB,KASjC8hB,GAAgBtgB,KAAOC,IAAV,sRAkBbsgB,GAAiBvgB,KAAOC,IAAV,6BChFdugB,GAAuBxgB,KAAOoR,OAAV,qUAET5S,GAAkBa,OAAOE,KAC3Bf,GAAkBO,SAAS,KAE/B,qBAAGW,QACAlB,GAAmBK,IAAML,GAAmBI,SCS3C6hB,GARyB,SAAC,GAAkC,IAAhC9e,EAA+B,EAA/BA,QAAS+e,EAAsB,EAAtBA,OAAQhhB,EAAc,EAAdA,QAC1D,OACE,eAAC8gB,GAAD,CAAsB7e,QAASA,EAASjC,QAASA,EAAjD,SACY2C,GAATqe,EAAmB,WAAwB,aCT5CC,GAAmB,CACvB,CAAEC,KAAM,IAAKje,MAAON,GAAU,QAASwe,UCA5B,WACX,OACE,uCACE,eAAC,GAAD,IACA,eAACpF,GAAD,SDHJ,CAAEmF,KAAM,QAASje,MAAON,GAAU,QAASwe,UEmBhC,WACX,ItBnB2B3Y,EAAY4Y,EsBmBvC,EAAwC9jB,qBAAS,GAAjD,oBAAOugB,EAAP,KAAqBwD,EAArB,KACA,EAAgC/jB,oBAC9Bqb,KAA0BC,UAD5B,oBAAO7L,EAAP,KAAiBgB,EAAjB,KAGA,EAA4BzQ,oBAAeqb,KAA0BI,SAArE,oBAAO/L,EAAP,KAAegB,EAAf,KASMG,EAAiB,SAACC,GACtBA,EAAMC,QAGFuP,EACJ,IAAI9E,KAAK/L,IAAa,IAAI+L,KAAK9L,ItBrCNxE,EsBsCRuE,EtBtCoBqU,EsBsCVpU,EtBrCtBsU,aAAkB,CACvBC,MAAO/Y,EACPgZ,IAAKJ,IACJ9Y,KAAI,SAAAwJ,GAAC,OAAIgK,mBAAOhK,EAAG,gBsBmChB,GAeN,OATA7U,KAAMQ,WAAU,WACd,IAAMgkB,EAAmB9jB,OAAOK,aAAaC,QAAQ,gBACrDojB,EAAgBnjB,KAAKC,MAAMsjB,MAC1B,IAEHxkB,KAAMQ,WAAU,WACdE,OAAOK,aAAaI,QAAQ,eAAgBF,KAAKG,UAAUwf,MAC1D,CAACA,IAGF,qCACE,gBAAC0C,GAAD,WACE,gBAACC,GAAD,WACE,eAACC,GAAD,UACE,eAAC,GAAD,CACExe,QAnBQ,WAClBof,GAAgB,SAAClf,GAAD,OAAyBA,MAmB/B6e,OAAQnD,EACR7d,QAAS6d,MAIb,eAACsC,GAAD,IAEA,eAACU,GAAD,UACE,gBAACH,GAAD,WACE,gBAACE,GAAD,WACE,eAACD,GAAD,UAAiBhe,GAAU,UAC3B,eAAC,GAAD,CACEV,QAASkM,EACTjM,SAlDS,SAACqE,GACxBwH,EAAYxH,IAkDE3H,MAAOmO,EACPC,OAAQA,EACRC,SAAUF,OAGd,gBAAC6T,GAAD,WACE,eAACD,GAAD,UAAiBhe,GAAU,QAC3B,eAAC,GAAD,CACEV,QAASkM,EACTjM,SAxDO,SAACqE,GACtByH,EAAUzH,IAwDI3H,MAAOoO,EACPD,SAAUA,EACVE,SAAUD,eAOpB,eAAC2Q,GAAD,CAAUC,UAAWA,EAAWC,aAAcA,IAC9C,eAAC,GAAD,YCtGO,OAA0B,iC,UCA5B6D,GACF,KADEA,GAEF,K,SCAI,mBACZA,GAAkB,CACjBC,KAAM,OACNC,KAAM,OACNC,KAAM,iBACNC,eAAgB,6BAChBC,iBAAkB,oBAClBxb,KAAM,OACNyb,OAAQ,SACRC,SAAU,WACVvd,SAAU,WACV1C,KAAM,OACNyE,SAAU,WACVyb,YAAa,eACbC,cAAe,iBACf3Z,KAAM,OACN4Y,GAAI,KACJgB,YAAa,uBACbC,aAAc,yBACdC,QAAS,UACTC,cAAe,0BACfC,eAAgB,uBCrBL,mBACZd,GAAkB,CACjBC,KAAM,6CACNC,KAAM,+DACNC,KAAM,qEACNC,eAAgB,wJAChBC,iBAAkB,oGAClBxb,KAAM,2BACNyb,OAAQ,iCACRC,SAAU,uCACVvd,SAAU,yDACV1C,KAAM,qBACNyE,SAAU,+DACVyb,YAAa,gEACbC,cAAe,sEACf3Z,KAAM,eACN4Y,GAAI,eACJgB,YAAa,uHACbC,aAAc,uHACdC,QAAS,qEACTC,cAAe,sLACfC,eAAgB,gHCpBL,gCACVC,IACAC,ICaU/jB,GAZE,SAAC,GAAiD,IAA/CtB,EAA8C,EAA9CA,SAA8C,IAApCslB,cAAoC,MAA3BjB,GAA2B,EAChE,OACE,eAAC,KAAD,CACEiB,OAAQA,EACRC,cAAeC,YACfC,SAAUA,GAASH,GAHrB,SAKGtlB,KCVD0lB,GAAqBziB,KAAOC,IAAV,6BAElByiB,GAAe1iB,KAAOoR,OAAV,4VAED5S,GAAkBa,OAAOE,KAC3Bf,GAAkBO,SAAS,IAE/BP,GAAmBE,QCcfikB,GAhB0B,SAAC,GAA0B,IAAxBN,EAAuB,EAAvBA,OAAQO,EAAe,EAAfA,SAClD,OACE,eAACH,GAAD,UACGJ,IAAWjB,GACV,eAACsB,GAAD,CAAc/gB,QAAS,kBAAMihB,EAASxB,KAAtC,gBAIA,eAACsB,GAAD,CAAc/gB,QAAS,kBAAMihB,EAASxB,KAAtC,mBCQFyB,GAA0B,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,aAAcC,EAAgB,EAAhBA,UAC/C,EAAsC/lB,oBAAc,WAApD,oBAAOgmB,EAAP,KAAoBC,EAApB,KAUA,OARA9lB,sBAAU,WACJO,aAAaC,QAAQ,YACvBslB,EAAevlB,aAAaC,QAAQ,aAEpCslB,EAAe,aAEhB,CAACvlB,aAAaC,QAAQ,cAGvB,gBAACuE,GAAD,WACE,gBAACC,GAAD,WACE,eAACH,GAAD,CAAekhB,OAAK,EAACpC,GAAG,IAAxB,SACE,sBAAKqC,IAAKC,GAAMC,IAAI,kBAGtB,+BACE,gBAACvhB,GAAD,WACG6e,GAAiB3Y,KAAI,gBAAG4Y,EAAH,EAAGA,KAAMje,EAAT,EAASA,MAAT,OACpB,8BACE,eAACX,GAAD,CAAekhB,OAAK,EAACpC,GAAIF,EAAM0C,gBAAiB,SAAhD,SACG3gB,KAFIie,MAMX,eAAC5e,GAAD,CAAekhB,OAAK,EAACpC,GAAI,QAASwC,gBAAiB,SAAnD,SACGjhB,GAAU,kBAMnB,gBAACD,GAAD,WACE,eAACJ,GAAD,CAAekhB,OAAK,EAACpC,GAAI,QAAzB,SACE,eAAC,GAAD,CAAS9iB,KAAMglB,MAEjB,eAAC,GAAD,IACA,eAAC,GAAD,CAAiBJ,SAAUE,EAAcT,OAAQU,IACjD,eAAC,GAAD,WC7DFQ,GAAavjB,KAAOC,IAAV,kJAGHzB,GAAmBE,QCC1B8kB,GAAS,WACb,IAAMC,GAAO,IAAIjL,MAAOkL,cAExB,OACE,kCACE,eAAC,GAAD,CACEC,QAASnlB,GAAkB,IAC3B+B,QAAQ,OACRqjB,eAAe,SAHjB,SAKE,eAACL,GAAD,UACE,qBAAG7hB,KAAK,QAAQmiB,KAAK,GAArB,kBACKJ,Y,SCbT1Z,GAAc/J,KAAOkf,EAAV,oJAIN1gB,GAAkBzC,MAAMoD,QACpBX,GAAkBO,SAAS,KAIpC+kB,GAAgB9jB,KAAOC,IAAV,uFACJzB,GAAkBO,SAAS,IAC/BP,GAAkBzC,MAAMqD,SAI7B2kB,GAA0B/jB,aAAOI,GAAPJ,CAAH,wHACPxB,GAAqBG,MAC9BH,GAAkB,KAIzBwlB,GAAoBhkB,aAAOI,GAAPJ,CAAH,wFAGdxB,GAAoB,KCNvBylB,GAAoC,SAAC,GAKpC,IAAD,QAJJthB,EAII,EAJJA,MACAwT,EAGI,EAHJA,SACA+N,EAEI,EAFJA,SACAC,EACI,EADJA,eAEA,EAII/N,eAHFG,EADF,EACEA,SACAC,EAFF,EAEEA,aACa6E,EAHf,EAGEC,UAAaD,OAGf,OACE,uCACG6I,GAAYC,GACX,uCACE,gBAACL,GAAD,mBACQI,EADR,+BAGA,eAACJ,GAAD,iCAGJ,eAACC,GAAD,UACE,uBAAM5N,SAAUK,EAAaL,GAA7B,SACE,gBAAC6N,GAAD,WACE,gBAAC,GAAD,sBAEE,eAACjO,GAAD,6BACMQ,EAAS,WAAY,CAAEb,UAAU,KADvC,IAEE7V,MAAM,OACNkV,UAAWvW,GAAoB,SAGP,cAArB,OAAN6c,QAAM,IAANA,GAAA,UAAAA,EAAQ5V,gBAAR,eAAkB/D,OACjB,eAAC,GAAD,qCAEF,gBAAC,GAAD,sBAEE,eAACqU,GAAD,6BACMQ,EAAS,WAAY,CACvBb,UAAU,EACV0O,UAAW,EACXC,UAAW,MAJf,IAMExkB,MAAM,OACN6B,KAAK,WACLqT,UAAWvW,GAAoB,SAGP,cAArB,OAAN6c,QAAM,IAANA,GAAA,UAAAA,EAAQ3V,gBAAR,eAAkBhE,OACjB,eAAC,GAAD,qCAE0B,eAArB,OAAN2Z,QAAM,IAANA,GAAA,UAAAA,EAAQ3V,gBAAR,eAAkBhE,OACjB,eAAC,GAAD,yDAI0B,eAArB,OAAN2Z,QAAM,IAANA,GAAA,UAAAA,EAAQ3V,gBAAR,eAAkBhE,OACjB,eAAC,GAAD,mDAEF,eAAC,GAAD,CAAQA,KAAK,SAAb,SAAuBiB,eChF7B2hB,GAAiBtkB,KAAOC,IAAV,gHAIXzB,GAAoB,KAGvBuL,GAAc/J,KAAOkf,EAAV,iIAIN1gB,GAAkBzC,MAAMoD,SAI7BolB,GAAyBvkB,KAAOC,IAAV,6DAEnBzB,GAAoB,KAGvBgmB,GAAgBxkB,KAAOC,IAAV,wFAGVzB,GAAoB,KCPvBimB,GAAO3Z,cAAS,WACpB,IAAM4Z,EAAiBpjB,sBAAWkI,IAElC,EAAoCxM,qBAAS,GAA7C,oBAAO2nB,EAAP,KAAmBC,EAAnB,KACA,EAA0B5nB,oBAAS,IAAnC,oBAAOyL,EAAP,KAAcoc,EAAd,KACA,EAAgC7nB,oBAAiB,IAAjD,oBAAOknB,EAAP,KAAiBY,EAAjB,KACA,EAA4C9nB,qBAAS,GAArD,oBAAOmnB,EAAP,KAAuBY,EAAvB,KAEMC,EAAUC,eAEhB9nB,sBAAU,WACR,IAAM+nB,EAAYxnB,aAAaC,QAAQ,YACnCunB,GACFJ,EAAYI,KAEb,CAACxnB,aAAaC,QAAQ,cAoCzB,OAAI+mB,EAAend,UACV,eAAC,GAAD,CAAa1H,MAAO,MAI3B,gBAACykB,GAAD,WACE,eAACC,GAAD,UACE,eAACC,GAAD,UACGE,EAAe/c,OACd,uCACE,wCAAUuc,EAAV,OACA,eAAC,GAAD,CACEviB,QAAS,WACPjE,aAAa6K,WAAW,YACxB7K,aAAa6K,WAAW,SACxBuc,EAAY,IACZJ,EAAenb,SACfqb,GAAc,IANlB,wBAaF,qCACGD,EACC,uCACE,eAAC,GAAD,CACET,SAAUA,EACVvhB,MAAM,UACNwT,SAhDgC,SAAC,GAG5C,IAFL1Q,EAEI,EAFJA,SACAC,EACI,EADJA,SAEAF,GACSC,EAAUC,GAChBE,MAAK,SAAAE,GAEFpI,aAAaI,QAAQ,QAASgI,EAAKR,OACnC5H,aAAaI,QAAQ,WAAY2H,GACjCsf,GAAkB,GAClBL,EAAepb,QACf0b,EAAQrc,KAAK,QAGhBwc,OAAM,SAAA1c,GAAK,aAAIoc,EAAQ,UAACpc,EAAM5C,gBAAP,aAAC,EAAgBC,KAAKwC,aAkChC6b,eAAgBA,IAElB,eAAC,GAAD,CAAQxiB,QAAS,kBAAMijB,GAAc,IAArC,yBAGF,uCACE,eAAC,GAAD,CACEV,SAAUA,EACVvhB,MAAM,UACNwT,SA1EmC,SAAC,GAG/C,IAFL1Q,EAEI,EAFJA,SACAC,EACI,EADJA,SAEAF,GACYC,EAAUC,GACnBE,MAAK,WACJgf,GAAc,GACdG,GAAkB,GAClBD,EAAYrf,MAEb0f,OAAM,SAAA1c,GAAU,IAAD,EACdoc,EAAQ,UAACpc,EAAM5C,gBAAP,aAAC,EAAgBC,UA+Dbqe,eAAgBA,IAElB,eAAC,GAAD,CAAQxiB,QAAS,kBAAMijB,GAAc,IAArC,4BAOXnc,IAAUyb,GAAY,eAAC,GAAD,UAAczb,EAAM2c,sBCtH3CC,GAAe,SAAChlB,GAGpB,OAFc3C,aAAaC,QAAQ,SAG1B,eAAC,KAAD,gBAAW0C,IAGb,eAAC,KAAD,CAAUygB,GAAG,WCFhBwE,GAAmB,WACvB,OACE,gBAAC,KAAD,WACG3E,GAAiB3Y,KAAI,gBAAG4Y,EAAH,EAAGA,KAAMC,EAAT,EAASA,UAAT,OACpB,eAAC,GAAD,CAAyBqC,OAAK,EAACtC,KAAMA,EAAMC,UAAWA,GAAnCD,MAErB,eAAC,KAAD,CAAOsC,OAAK,EAACtC,KAAK,QAAQC,UAAW4D,SCArCc,GAAMza,cAAS,WACnB,IAAMT,EAAkB/I,sBAAWkI,IAEnC,EAA4B7M,KAAMK,SAASokB,IAA3C,oBAAOiB,EAAP,KAAemD,EAAf,KAMA,OAJAroB,sBAAU,WACRkN,EAAgBjC,UACf,CAACiC,EAAgB1C,SAGlB,eAAC,GAAD,CAAc0a,OAAQA,EAAtB,SACE,eAACtiB,GAAD,UACE,gBAAC,KAAD,WACE,gBAAC,GAAD,WACE,eAAC,GAAD,CAAQgjB,UAAWV,EAAQS,aAAc0C,IACzC,eAAC,GAAD,OAEF,eAAC,GAAD,c,OCvBVC,KAAS9O,OACP,eAAC,KAAM+O,WAAP,UACE,eAAC,GAAD,UACE,eAACH,GAAD,QAGJtnB,SAAS0nB,eAAe,W","file":"static/js/main.72e4544e.chunk.js","sourcesContent":["var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgTrash(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M10 3C10 1.89543 10.8954 1 12 1C13.1046 1 14 1.89543 14 3H19C20.1046 3 21 3.89543 21 5C21 6.10457 20.1046 7 19 7H5C3.89543 7 3 6.10457 3 5C3 3.89543 3.89543 3 5 3H10ZM18.142 20.1534L19 9H5L5.85795 20.1534C5.93811 21.1954 6.80699 22 7.85206 22H16.1479C17.193 22 18.0619 21.1954 18.142 20.1534Z\",\n    fill: \"#435379\",\n    fillOpacity: 0.4\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgTrash);\nexport default __webpack_public_path__ + \"static/media/trash.fac2feea.svg\";\nexport { ForwardRef as ReactComponent };","import React from \"react\";\r\n\r\nconst themeColours = {\r\n  light: {\r\n    color: \"#435379\",\r\n    backgroundColor: \"#F5F8FF\",\r\n    colorLight: \"rgba(67, 83, 121, 0.4)\",\r\n    backgroundColorBlock: \"#ffffff\",\r\n    colorInc: \"#004d00\",\r\n    colorExp: \"#cc0000\",\r\n    nightBlue: \"#101840\",\r\n    bgCalendar: \"#fffafa\",\r\n    colorWhite: \"#ffffff\",\r\n    pagination: \"#fff\",\r\n  },\r\n  dark: {\r\n    color: \"#777777\",\r\n    backgroundColor: \"#18181B\",\r\n    colorLight: \"rgba(89, 89, 89, 0.7)\",\r\n    backgroundColorBlock: \"#272B35\",\r\n    colorInc: \"#079107\",\r\n    colorExp: \"#db2020\",\r\n    nightBlue: \"#C0C7E7\",\r\n    bgCalendar: \"#6883c2\",\r\n    colorWhite: \"#000\",\r\n    pagination: \"#C0C7E7\",\r\n  },\r\n};\r\n\r\ntype ThemeName = \"light\" | \"dark\";\r\ntype ThemeContextType = {\r\n  theme: ThemeName;\r\n  setTheme: (name: ThemeName) => void;\r\n};\r\nconst ThemeContext = React.createContext<ThemeContextType>(undefined!);\r\n\r\ntype Props = {\r\n  children: React.ReactNode;\r\n};\r\nexport const ThemeProvider = ({ children }: Props) => {\r\n  const [themeName, setThemeName] = React.useState<ThemeName>(\"light\");\r\n\r\n  React.useEffect(() => {\r\n    const darkOS = window.matchMedia(\"(prefers-color-scheme: dark)\").matches;\r\n    setTheme(darkOS ? \"light\" : \"dark\");\r\n  }, []);\r\n\r\n  React.useEffect(() => {\r\n    const themeTrack: any = window.localStorage.getItem(\"themeName\");\r\n    if (themeTrack) {\r\n      setTheme(JSON.parse(themeTrack));\r\n    }\r\n  }, []);\r\n\r\n  React.useEffect(() => {\r\n    window.localStorage.setItem(\"themeName\", JSON.stringify(themeName));\r\n  }, [themeName]);\r\n\r\n  const setTheme = (name: ThemeName) => {\r\n    document.body.style.setProperty(\"--color\", themeColours[name].color);\r\n    document.body.style.setProperty(\r\n      \"--background-color\",\r\n      themeColours[name].backgroundColor,\r\n    );\r\n    document.body.style.setProperty(\r\n      \"--color-light\",\r\n      themeColours[name].colorLight,\r\n    );\r\n    document.body.style.setProperty(\r\n      \"--background-color-block\",\r\n      themeColours[name].backgroundColorBlock,\r\n    );\r\n    document.body.style.setProperty(\"--color-inc\", themeColours[name].colorInc);\r\n    document.body.style.setProperty(\"--color-exp\", themeColours[name].colorExp);\r\n    document.body.style.setProperty(\r\n      \"--night-blue-color\",\r\n      themeColours[name].nightBlue,\r\n    );\r\n    document.body.style.setProperty(\r\n      \"--background-calendar\",\r\n      themeColours[name].bgCalendar,\r\n    );\r\n    document.body.style.setProperty(\r\n      \"--color-white\",\r\n      themeColours[name].colorWhite,\r\n    );\r\n    document.body.style.setProperty(\r\n      \"--color-pagination\",\r\n      themeColours[name].pagination,\r\n    );\r\n\r\n    setThemeName(name);\r\n  };\r\n\r\n  return (\r\n    <ThemeContext.Provider value={{ theme: themeName, setTheme }}>\r\n      {children}\r\n    </ThemeContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useTheme = () => React.useContext(ThemeContext);\r\n","import { createGlobalStyle } from \"styled-components\";\r\n\r\nexport const GlobalStyles = createGlobalStyle`\r\n  html {\r\n    --background-color: #F5F8FF;\r\n    --color: #435379;\r\n    --color-light: rgba(67, 83, 121, 0.4);\r\n    --background-color-block: #ffffff;\r\n    --color-inc: #004d00;\r\n    --color-exp: #cc0000;\r\n    --night-blue-color: #101840;\r\n    --background-calendar:#fffafa;\r\n    --color-white: #ffffff;\r\n    --color-pagination: #fff;\r\n  }\r\n`;\r\n\r\nconst designSystem = {\r\n  color: {\r\n    normal: \"var(--color)\",\r\n    light: \"var(--color-light)\",\r\n    white: \"var(--color-white)\",\r\n    green: \"var(--color-inc)\",\r\n    red: \"var(--color-exp)\",\r\n    nightBlue: \"var(--night-blue-color)\",\r\n    cornflowerblue: \"cornflowerblue\",\r\n    pagination: \"var(--color-pagination)\",\r\n  },\r\n  text: {\r\n    fontSize: {\r\n      12: \"12px\",\r\n      14: \"14px\",\r\n      16: \"16px\",\r\n      18: \"18px\",\r\n      24: \"24px\",\r\n      36: \"36px\",\r\n      48: \"48px\",\r\n    },\r\n    lineHeight: {\r\n      22: \"22px\",\r\n      24: \"24px\",\r\n    },\r\n    color: {\r\n      normal: \"var(--color)\",\r\n      grey: \"#\",\r\n      light: \"rgba(67, 83, 121, 0.4)\",\r\n      danger: \"#\",\r\n      warning: \"#c6426e\",\r\n      success: \"#6894FF\",\r\n    },\r\n    weight: {\r\n      normal: 500,\r\n      small: 300,\r\n      bold: 700,\r\n    },\r\n  },\r\n  indent: {\r\n    4: \"4px\",\r\n    8: \"8px\",\r\n    12: \"12px\",\r\n    14: \"14px\",\r\n    16: \"16px\",\r\n    24: \"24px\",\r\n    28: \"28px\",\r\n    32: \"32px\",\r\n    42: \"42px\",\r\n    48: \"48px\",\r\n    52: \"52px\",\r\n    60: \"60px\",\r\n    64: \"64px\",\r\n    86: \"86px\",\r\n  },\r\n  size: {\r\n    16: 16,\r\n    32: 32,\r\n    42: 42,\r\n    64: 64,\r\n  },\r\n  bgColor: {\r\n    base: \"rgba(67, 83, 121, 1)\",\r\n    base10: \"rgba(67, 83, 121, 0.1)\",\r\n    danger: \"#\",\r\n    warning: \"#\",\r\n    success: \"#\",\r\n    primary: \"#F5F8FF\",\r\n    light: \"rgba(67, 83, 121, 0.4)\",\r\n    white: \"var(--background-color-block)\",\r\n    black: \"#000\",\r\n    bgCalendar: \"var(--background-calendar)\",\r\n  },\r\n  borderRadius: {\r\n    2: \"2px\",\r\n    4: \"4px\",\r\n    6: \"6px\",\r\n    8: \"8px\",\r\n    14: \"14px\",\r\n    16: \"16px\",\r\n    24: \"24px\",\r\n    25: \"25px\",\r\n  },\r\n  table: {\r\n    leftSide: {\r\n      width: \"600px\",\r\n    },\r\n    rightSide: {\r\n      width: \"465px\",\r\n    },\r\n  },\r\n};\r\n\r\nexport { designSystem };\r\n","import styled from \"styled-components\";\r\n\r\nimport { designSystem } from \"constants/designSystem\";\r\n\r\nconst MainContainer = styled.div`\r\n  font-weight: ${designSystem.text.weight.normal};\r\n  font-size: ${designSystem.text.fontSize[16]};\r\n  color: ${designSystem.color.normal};\r\n  max-width: 1370px;\r\n  min-height: 100vh;\r\n  margin: auto;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n`;\r\n\r\nexport { MainContainer };\r\n","import React from \"react\";\r\nimport { Avatar as AvatarUI } from \"evergreen-ui\";\r\n\r\nimport { designSystem } from \"constants/designSystem\";\r\n\r\nconst Avatar = ({ name }: { name?: string }) => {\r\n  return <AvatarUI size={designSystem.size[32]} name={name} />;\r\n};\r\n\r\nexport { Avatar };\r\n","import React from \"react\";\r\nimport { Pane as PaneUI, PaneProps } from \"evergreen-ui\";\r\n\r\nconst Pane = (props: PaneProps) => {\r\n  return <PaneUI {...props}>{props.children}</PaneUI>;\r\n};\r\n\r\nexport { Pane };\r\n","import React from \"react\";\r\n\r\nimport { Avatar } from \"components/Avatar\";\r\nimport { Pane } from \"components/Pane\";\r\n\r\nimport { designSystem } from \"constants/designSystem\";\r\n\r\n// TODO: add profile avatar image prop\r\n\r\nconst Profile = ({ name }: { name?: string }) => {\r\n  return (\r\n    <Pane display=\"flex\" alignItems=\"center\" gap={designSystem.indent[16]}>\r\n      <Avatar name={name} />\r\n      <span>{name}</span>\r\n    </Pane>\r\n  );\r\n};\r\n\r\nexport { Profile };\r\n","export default __webpack_public_path__ + \"static/media/settings.ffe9e752.svg\";","import styled from \"styled-components\";\r\nimport { IconButton } from \"evergreen-ui\";\r\n\r\nimport SettingsIcon from \"assets/icons/settings.svg\";\r\n\r\nimport { designSystem } from \"constants/designSystem\";\r\n\r\nconst StyledButton = styled(IconButton)`\r\n  min-width: ${designSystem.indent[24]};\r\n  width: ${designSystem.indent[24]};\r\n  height: ${designSystem.indent[24]};\r\n  border: none;\r\n  background-color: transparent;\r\n  background-image: url(${SettingsIcon});\r\n  background-repeat: no-repeat;\r\n  background-position: center;\r\n  padding: 0;\r\n\r\n  &:not([disabled]):hover {\r\n    border: none;\r\n    background-color: transparent;\r\n  }\r\n`;\r\n\r\nexport { StyledButton };\r\n","import React from \"react\";\r\n\r\nimport { StyledButton } from \"./styled\";\r\n\r\nconst SettingsButton = () => {\r\n  return <StyledButton />;\r\n};\r\n\r\nexport { SettingsButton };\r\n","import styled from \"styled-components\";\r\n\r\nconst SwitchLabel = styled.label`\r\n  position: relative;\r\n  display: inline-block;\r\n  width: 32px;\r\n  height: 16px;\r\n`;\r\n\r\nconst SliderSpan = styled.span`\r\n  position: absolute;\r\n  cursor: pointer;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  background-color: #ccc;\r\n  -webkit-transition: 0.4s;\r\n  transition: 0.4s;\r\n  border-radius: 34px;\r\n\r\n  :before {\r\n    position: absolute;\r\n    content: \"\";\r\n    height: 12px;\r\n    width: 12px;\r\n    left: 2px;\r\n    bottom: 2px;\r\n    background-color: white;\r\n    -webkit-transition: 0.4s;\r\n    transition: 0.4s;\r\n    border-radius: 50%;\r\n  }\r\n`;\r\n\r\nconst CustomInput = styled.input`\r\n  opacity: 0;\r\n  width: 0;\r\n  height: 0;\r\n\r\n  :checked + ${SliderSpan} {\r\n    background-color: #19a2c1;\r\n  }\r\n\r\n  :checked + ${SliderSpan} {\r\n    box-shadow: 0 0 1px #2196f3;\r\n  }\r\n\r\n  :checked + ${SliderSpan}:before {\r\n    -webkit-transform: translateX(16px);\r\n    -ms-transform: translateX(16px);\r\n    transform: translateX(16px);\r\n  }\r\n`;\r\n\r\nconst SwitchCheckbox = styled.div`\r\n  padding: 10px;\r\n`;\r\n\r\nexport { SliderSpan, CustomInput, SwitchLabel, SwitchCheckbox };\r\n","import React from \"react\";\r\nimport { useTheme } from \"components/ThemeContext\";\r\nimport { CustomInput, SliderSpan, SwitchCheckbox, SwitchLabel } from \"./styled\";\r\nconst ToggleSwitch = () => {\r\n  const { theme, setTheme } = useTheme();\r\n  const [checked, setChecked] = React.useState(false);\r\n\r\n  const handleClick = () => setTheme(theme === \"dark\" ? \"light\" : \"dark\");\r\n\r\n  const handleChange = () => {\r\n    setChecked((prevState: any) => !prevState);\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    const themeTrack: any = window.localStorage.getItem(\"checked\");\r\n    setChecked(JSON.parse(themeTrack));\r\n  }, []);\r\n\r\n  React.useEffect(() => {\r\n    window.localStorage.setItem(\"checked\", JSON.stringify(checked));\r\n  }, [checked]);\r\n\r\n  return (\r\n    <SwitchCheckbox>\r\n      <SwitchLabel className=\"switch\">\r\n        <CustomInput\r\n          type=\"checkbox\"\r\n          onClick={handleClick}\r\n          onChange={handleChange}\r\n          checked={checked}\r\n        />\r\n        <SliderSpan className=\"slider round\"> </SliderSpan>\r\n      </SwitchLabel>\r\n    </SwitchCheckbox>\r\n  );\r\n};\r\nexport default ToggleSwitch;\r\n","import styled from \"styled-components\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nimport { designSystem } from \"constants/designSystem\";\r\n\r\nconst HeaderLinks = styled.ul`\r\n  display: flex;\r\n  gap: ${designSystem.indent[48]};\r\n`;\r\n\r\nconst StyledNavLink = styled(NavLink)`\r\n  text-decoration: none;\r\n  color: ${designSystem.color.light};\r\n\r\n  &.active {\r\n    color: ${designSystem.color.normal};\r\n  }\r\n  span {\r\n    color: ${designSystem.color.normal};\r\n  }\r\n`;\r\n\r\nconst HeaderContainer = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: ${designSystem.indent[\"32\"]} 0;\r\n`;\r\n\r\nconst HeaderLeftSide = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  gap: ${designSystem.indent[\"86\"]};\r\n`;\r\n\r\nconst HeaderRightSide = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  gap: ${designSystem.indent[\"32\"]};\r\n`;\r\n\r\nexport {\r\n  HeaderLinks,\r\n  StyledNavLink,\r\n  HeaderContainer,\r\n  HeaderLeftSide,\r\n  HeaderRightSide,\r\n};\r\n","import React from \"react\";\r\nimport { FormattedMessage } from \"react-intl\";\r\n\r\nconst Translate = (id: string, value = {}) => (\r\n  <FormattedMessage id={id} values={{ ...value }} />\r\n);\r\n\r\nexport default Translate;\r\n","import styled from \"styled-components\";\r\n\r\nimport { designSystem } from \"constants/designSystem\";\r\n\r\nconst StyledOperationFilters = styled.div`\r\n  max-width: 100%;\r\n  background: ${designSystem.bgColor.white};\r\n  box-shadow: 0 16px 24px -10px rgba(209, 219, 241, 0.25);\r\n  border-radius: ${designSystem.borderRadius[\"24\"]};\r\n  padding: ${designSystem.indent[\"8\"]};\r\n`;\r\n\r\nexport { StyledOperationFilters };\r\n","import React from \"react\";\r\n\r\nimport { StyledOperationFilters } from \"./styled\";\r\n\r\nconst OperationFilters: React.FC = ({ children }) => {\r\n  return <StyledOperationFilters>{children}</StyledOperationFilters>;\r\n};\r\n\r\nexport { OperationFilters };\r\n","export default __webpack_public_path__ + \"static/media/donut.5d7a778f.svg\";","export default __webpack_public_path__ + \"static/media/home.b1194cc5.svg\";","export default __webpack_public_path__ + \"static/media/aid.1378e879.svg\";","export default __webpack_public_path__ + \"static/media/benefits.23840bea.svg\";","export default __webpack_public_path__ + \"static/media/books.b8b41b22.svg\";","export default __webpack_public_path__ + \"static/media/chat.14dc198e.svg\";","export default __webpack_public_path__ + \"static/media/credit.c84bb288.svg\";","export default __webpack_public_path__ + \"static/media/earth.79999c69.svg\";","export default __webpack_public_path__ + \"static/media/home-appliance.87d93636.svg\";","export default __webpack_public_path__ + \"static/media/insurance.6440e247.svg\";","export default __webpack_public_path__ + \"static/media/kindergarten.70bc4da8.svg\";","export default __webpack_public_path__ + \"static/media/wardrobe.bab0a4bd.svg\";","export default __webpack_public_path__ + \"static/media/sport.73c1215a.svg\";","export default __webpack_public_path__ + \"static/media/tax.2b107ae6.svg\";","export default __webpack_public_path__ + \"static/media/vehicles.8308a014.svg\";","export default __webpack_public_path__ + \"static/media/medal.194a5c59.svg\";","export default __webpack_public_path__ + \"static/media/statistics.c35c979a.svg\";","export default __webpack_public_path__ + \"static/media/medicine.1028ee65.svg\";","export default __webpack_public_path__ + \"static/media/water.9ba5bc52.svg\";","export default __webpack_public_path__ + \"static/media/giftbox.aae4a9c4.svg\";","export default __webpack_public_path__ + \"static/media/sunbed.dded493d.svg\";","import Food from \"assets/icons/category-icons/donut.svg\";\r\nimport Home from \"assets/icons/category-icons/home.svg\";\r\nimport Aid from \"assets/icons/category-icons/aid.svg\";\r\nimport Benefit from \"assets/icons/category-icons/benefits.svg\";\r\nimport Books from \"assets/icons/category-icons/books.svg\";\r\nimport Phone from \"assets/icons/category-icons/chat.svg\";\r\nimport Credit from \"assets/icons/category-icons/credit.svg\";\r\nimport Travel from \"assets/icons/category-icons/earth.svg\";\r\nimport HomeAppliance from \"assets/icons/category-icons/home-appliance.svg\";\r\nimport Insurance from \"assets/icons/category-icons/insurance.svg\";\r\nimport Kindergarten from \"assets/icons/category-icons/kindergarten.svg\";\r\nimport Clothes from \"assets/icons/category-icons/wardrobe.svg\";\r\nimport Gym from \"assets/icons/category-icons/sport.svg\";\r\nimport Tax from \"assets/icons/category-icons/tax.svg\";\r\nimport Transport from \"assets/icons/category-icons/vehicles.svg\";\r\nimport Award from \"assets/icons/category-icons/medal.svg\";\r\nimport Data from \"assets/icons/category-icons/statistics.svg\";\r\nimport Medicine from \"assets/icons/category-icons/medicine.svg\";\r\nimport PublicService from \"assets/icons/category-icons/water.svg\";\r\nimport Gift from \"assets/icons/category-icons/giftbox.svg\";\r\nimport Vacation from \"assets/icons/category-icons/sunbed.svg\";\r\nimport Entertainment from \"assets/icons/category-icons/tv.svg\";\r\nimport Salary from \"assets/icons/category-icons/salary.svg\";\r\nimport Petrol from \"assets/icons/category-icons/petrol.svg\";\r\nimport Repairs from \"assets/icons/category-icons/tools.svg\";\r\nimport Furniture from \"assets/icons/category-icons/living-room.svg\";\r\n\r\nconst categories = [\r\n  { title: \"Food\", color: \"#FFEAC2\", icon: Food },\r\n  { title: \"Home service\", color: \"#F0E3FF\", icon: Home },\r\n  { title: \"Clothes\", color: \"#FFD3C9\", icon: Clothes },\r\n  { title: \"Entertainment\", color: \"#F0E3FF\", icon: Entertainment },\r\n  { title: \"Salary\", color: \"#DDEFFF\", icon: Salary },\r\n  { title: \"Transport\", color: \"#FFE5F3\", icon: Transport },\r\n  { title: \"Credits\", color: \"#dde8f0\", icon: Credit },\r\n  { title: \"Gifts\", color: \"#85c8de\", icon: Gift },\r\n  { title: \"Benefit\", color: \"#b1daea\", icon: Benefit },\r\n  { title: \"Aid\", color: \"#dae5ea\", icon: Aid },\r\n  { title: \"Award\", color: \"#64ac8f\", icon: Award },\r\n  { title: \"Tax\", color: \"#94d6ba\", icon: Tax },\r\n  { title: \"Petrol\", color: \"#e7f5dc\", icon: Petrol },\r\n  { title: \"Phone\", color: \"#c0dfc2\", icon: Phone },\r\n  { title: \"Public service\", color: \"#D9FFFF\", icon: PublicService },\r\n  { title: \"Kindergarten\", color: \"#CDF9E1\", icon: Kindergarten },\r\n  { title: \"Gym\", color: \"#85c8de\", icon: Gym },\r\n  { title: \"Insurance\", color: \"#b1daea\", icon: Insurance },\r\n  { title: \"Vacation\", color: \"#dae5ea\", icon: Vacation },\r\n  { title: \"Repairs\", color: \"#64ac8f\", icon: Repairs },\r\n  { title: \"Medicine\", color: \"#94d6ba\", icon: Medicine },\r\n  { title: \"Travel\", color: \"#B3FFFC\", icon: Travel },\r\n  { title: \"Home appliances\", color: \"#97cbdc\", icon: HomeAppliance },\r\n  { title: \"Books\", color: \"#018abd\", icon: Books },\r\n  { title: \"Furniture\", color: \"#FFC2F0\", icon: Furniture },\r\n  { title: \"Data\", color: \"#FFD678\", icon: Data },\r\n];\r\n\r\nconst selectCategoryIcon = (label: string) => {\r\n  return categories.filter(category => category.title === label)[0].icon;\r\n};\r\n\r\nconst selectCategoryColor = (label: string) => {\r\n  return categories.filter(category => category.title === label)[0].color;\r\n};\r\n\r\nexport { selectCategoryIcon, selectCategoryColor };\r\n","export default __webpack_public_path__ + \"static/media/tv.e08f5db7.svg\";","export default __webpack_public_path__ + \"static/media/salary.50f75166.svg\";","export default __webpack_public_path__ + \"static/media/petrol.6b4aa423.svg\";","export default __webpack_public_path__ + \"static/media/tools.13da345f.svg\";","export default __webpack_public_path__ + \"static/media/living-room.4b804ad2.svg\";","import styled, { css } from \"styled-components\";\r\n\r\nimport { designSystem } from \"constants/designSystem\";\r\nimport { selectCategoryIcon, selectCategoryColor } from \"utils/selectCategory\";\r\n\r\nimport { OperationFilterProps } from \"pages/Home/components/OperationFilters/OperationFiltersItem\";\r\n\r\nconst StyledOperationFiltersItem = styled.div<OperationFilterProps>`\r\n  padding: ${designSystem.indent[\"24\"]};\r\n  font-size: ${designSystem.text.fontSize[\"16\"]};\r\n  font-weight: ${designSystem.text.weight.normal};\r\n  display: inline-block;\r\n  border-radius: ${designSystem.borderRadius[\"14\"]};\r\n  cursor: pointer;\r\n\r\n  ${({ label, isChosen }) =>\r\n    label &&\r\n    css`\r\n      background-color: ${selectCategoryColor(label)};\r\n      opacity: ${isChosen ? \"50%\" : \"100%\"};\r\n      display: inline-flex;\r\n      align-items: center;\r\n      ::before {\r\n        content: \"\";\r\n        width: 32px;\r\n        height: 32px;\r\n        display: block;\r\n        margin-right: ${designSystem.indent[\"12\"]};\r\n        background-image: url(${selectCategoryIcon(label)});\r\n        background-size: 32px 32px;\r\n      }\r\n    `}\r\n`;\r\n\r\nexport { StyledOperationFiltersItem };\r\n","import React from \"react\";\r\n\r\nimport { StyledOperationFiltersItem } from \"./styled\";\r\n\r\nexport type OperationFilterProps = {\r\n  label: string;\r\n  isChosen?: boolean;\r\n};\r\n\r\ntype Props = {\r\n  onClick: () => void;\r\n} & OperationFilterProps;\r\n\r\nconst OperationFiltersItem: React.FC<Props> = props => {\r\n  return (\r\n    <StyledOperationFiltersItem\r\n      label={props.label}\r\n      isChosen={props.isChosen}\r\n      onClick={props.onClick}\r\n    >\r\n      {props.label}\r\n    </StyledOperationFiltersItem>\r\n  );\r\n};\r\n\r\nexport { OperationFiltersItem };\r\n","import styled from \"styled-components\";\r\n\r\nimport { designSystem } from \"constants/designSystem\";\r\n\r\nconst StyledOperationFiltersAddButton = styled.div`\r\n  position: relative;\r\n  width: 32px;\r\n  height: 32px;\r\n  cursor: pointer;\r\n  display: inline-block;\r\n  border-radius: 50%;\r\n  transition: 0.5s ease;\r\n  :before,\r\n  :after {\r\n    content: \"\";\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 50%;\r\n    border-radius: ${designSystem.borderRadius[\"25\"]};\r\n    background-color: ${designSystem.color.normal};\r\n    transform: translate(-50%, -50%);\r\n    transition: 0.5s ease;\r\n  }\r\n  :before {\r\n    width: 4px;\r\n    height: 24px;\r\n  }\r\n  :after {\r\n    width: 24px;\r\n    height: 4px;\r\n  }\r\n  :hover {\r\n    transform: rotate(-90deg);\r\n    :after {\r\n      background-color: ${designSystem.color.normal};\r\n    }\r\n    :before {\r\n      background-color: ${designSystem.color.normal};\r\n    }\r\n  }\r\n`;\r\n\r\nexport { StyledOperationFiltersAddButton };\r\n","import React from \"react\";\r\n\r\nimport { StyledOperationFiltersAddButton } from \"./styled\";\r\n\r\ntype Props = {\r\n  onClick: () => void;\r\n};\r\n\r\nconst OperationFiltersAddButton: React.FC<Props> = ({ ...props }) => {\r\n  return <StyledOperationFiltersAddButton {...props} />;\r\n};\r\n\r\nexport { OperationFiltersAddButton };\r\n","import axios from \"axios\";\r\n\r\nimport {\r\n  TransactionTypes,\r\n  EditTransactionType,\r\n} from \"services/ApiService/types/transactionTypes\";\r\nimport { IDataModel } from \"stores/OperationsStore\";\r\n\r\nconst fetchClient = () => {\r\n  const defaultOptions = {\r\n    baseURL: \"https://finance-app-backend-a1o9.onrender.com\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n\r\n  // Create instance\r\n  const instance = axios.create(defaultOptions);\r\n\r\n  // Set the AUTH token for any request\r\n  instance.interceptors.request.use(function(config) {\r\n    const token = localStorage.getItem(\"token\");\r\n    config.headers.Authorization = token ? `Bearer ${token}` : \"\";\r\n    return config;\r\n  });\r\n\r\n  return instance;\r\n};\r\n\r\nexport const authAPI = {\r\n  register(username: string, password: string) {\r\n    return fetchClient()\r\n      .post(\"registration\", { username, password })\r\n      .then(response => response.data);\r\n  },\r\n\r\n  login(username: string, password: string) {\r\n    return fetchClient()\r\n      .post(\"login\", { username, password })\r\n      .then(response => response.data);\r\n  },\r\n};\r\n\r\nexport const transactionsAPI = {\r\n  getAllTransactions() {\r\n    return fetchClient()\r\n      .get(\"transactions\")\r\n      .then(response => response.data);\r\n  },\r\n\r\n  createTransaction(data: TransactionTypes) {\r\n    return fetchClient()\r\n      .post(\"transactions\", {\r\n        date: data.date,\r\n        category: data.category,\r\n        description: data.description,\r\n        quantity: data.quantity,\r\n        type: data.type,\r\n      })\r\n      .then(response => response.data);\r\n  },\r\n\r\n  editTransaction(data: EditTransactionType) {\r\n    return fetchClient()\r\n      .put(\"transactions\", {\r\n        _userId: data._userId,\r\n        _id: data._id,\r\n        date: data.date,\r\n        category: data.category,\r\n        description: data.description,\r\n        quantity: data.quantity,\r\n        type: data.type,\r\n      })\r\n      .then(response => response.data);\r\n  },\r\n\r\n  deleteTransaction(transaction: IDataModel) {\r\n    return fetchClient()\r\n      .delete(`transactions?id=${transaction._id}`)\r\n      .then(response => response.data);\r\n  },\r\n};\r\n","import { transactionsAPI } from \"services/ApiService\";\r\n\r\nclass OperationsService {\r\n  static async fetch() {\r\n    const mock: any = await transactionsAPI.getAllTransactions();\r\n\r\n    return new Promise(resolve => setTimeout(() => resolve(mock), 1000));\r\n  }\r\n}\r\n\r\nexport { OperationsService };\r\n","import React from \"react\";\r\nimport { types, flow, Instance, destroy } from \"mobx-state-tree\";\r\n\r\nimport { OperationsService } from \"services/OperationsService\";\r\n\r\n/**\r\n * Example of store\r\n *\r\n * usage in component:\r\n * const OperationsStore = useContext(OperationsStoreContext);\r\n */\r\n\r\nconst categories = [\r\n  \"Food\",\r\n  \"Salary\",\r\n  \"Data\",\r\n  \"Transport\",\r\n  \"Home service\",\r\n  \"Credits\",\r\n  \"Gifts\",\r\n  \"Benefit\",\r\n  \"Aid\",\r\n  \"Award\",\r\n  \"Tax\",\r\n  \"Petrol\",\r\n  \"Phone\",\r\n  \"Public service\",\r\n  \"Kindergarten\",\r\n  \"Gym\",\r\n  \"Insurance\",\r\n  \"Vacation\",\r\n  \"Clothes\",\r\n  \"Repairs\",\r\n  \"Medicine\",\r\n  \"Entertainment\",\r\n  \"Travel\",\r\n  \"Home appliances\",\r\n  \"Books\",\r\n  \"Furniture\",\r\n];\r\n\r\nconst DataModel = types.model(\"DataModel\", {\r\n  _userId: types.maybe(types.string),\r\n  _id: types.identifier,\r\n  date: types.string,\r\n  category: types.string,\r\n  type: types.string,\r\n  quantity: types.number,\r\n  description: types.string,\r\n});\r\n\r\nexport const OperationsStore = types\r\n  .model({\r\n    data: types.array(DataModel),\r\n    isLoading: types.optional(types.boolean, false),\r\n    categories: types.optional(types.array(types.string), categories),\r\n    selectedCategories: types.array(types.string),\r\n    isAuth: types.optional(types.boolean, false),\r\n  })\r\n  .views(self => {\r\n    return {\r\n      get operationFiltersArray(): string[] {\r\n        const uniqueFilters: Set<string> = new Set(\r\n          self.data.map(transaction => {\r\n            return transaction.category;\r\n          }),\r\n        );\r\n        return Array.from(uniqueFilters);\r\n      },\r\n    };\r\n  })\r\n  .actions(self => ({\r\n    fetch: flow(function*() {\r\n      try {\r\n        self.isLoading = true;\r\n        self.data = yield OperationsService.fetch();\r\n        self.isAuth = true;\r\n      } catch (err) {\r\n        // @ts-ignore\r\n        if (err.response?.data.message === \"user is not auth\") {\r\n          self.isAuth = false;\r\n          localStorage.removeItem(\"username\");\r\n          localStorage.removeItem(\"token\");\r\n        }\r\n        console.error(err);\r\n      } finally {\r\n        self.isLoading = false;\r\n      }\r\n    }),\r\n\r\n    addTransaction(transaction: IDataModel) {\r\n      self.data.push(transaction);\r\n    },\r\n\r\n    editTransaction(id: string, transaction: IDataModel) {\r\n      const idx = self.data.findIndex(el => el._id === id);\r\n      self.data.splice(idx, 1, transaction);\r\n    },\r\n\r\n    deleteTransaction(transaction: IDataModel) {\r\n      destroy(transaction);\r\n    },\r\n\r\n    addSelectedCategoriesFilter(category: string) {\r\n      if (!self.selectedCategories.includes(category)) {\r\n        self.selectedCategories.push(category);\r\n      }\r\n    },\r\n\r\n    removeSelectedCategoriesFilter(category: string) {\r\n      const idx = self.selectedCategories.findIndex(el => el === category);\r\n      self.selectedCategories.splice(idx, 1);\r\n    },\r\n\r\n    login() {\r\n      self.isAuth = true;\r\n    },\r\n\r\n    logout() {\r\n      self.isAuth = false;\r\n      self.data.splice(0);\r\n      self.selectedCategories.splice(0);\r\n    },\r\n  }));\r\n\r\nconst Store = OperationsStore.create();\r\n\r\nexport const OperationsStoreContext = React.createContext(Store);\r\n\r\nexport interface IDataModel extends Instance<typeof DataModel> {}\r\n","import React from \"react\";\r\n\r\nimport { Dialog as DialogUI, DialogProps } from \"evergreen-ui\";\r\n\r\nconst Dialog: React.FC<DialogProps> = ({ children, ...restProps }) => {\r\n  return <DialogUI {...restProps}>{children}</DialogUI>;\r\n};\r\n\r\nexport { Dialog };\r\n","import styled, { createGlobalStyle } from \"styled-components\";\r\n\r\nimport { designSystem } from \"constants/designSystem\";\r\n\r\nconst DialogContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: ${designSystem.indent[\"16\"]};\r\n`;\r\n\r\nconst DialogSoloContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst DialogDuoContainer = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n`;\r\n\r\nconst DialogEndLineContainer = styled.div`\r\n  display: flex;\r\n  justify-content: flex-end;\r\n`;\r\n\r\nconst StyledError = styled.span`\r\n  font-size: ${designSystem.text.fontSize[\"12\"]};\r\n  color: ${designSystem.color.red};\r\n  padding: ${designSystem.indent[\"12\"]} 0 0 0;\r\n`;\r\n\r\nconst GlobalStyleTransaction = createGlobalStyle`\r\n  .css-1dccw9w[data-state=\"entered\"] {\r\n    background: ${designSystem.bgColor.white};\r\n  }\r\n  .ub-color_101840 {\r\n    color: ${designSystem.color.nightBlue};\r\n  }\r\n  \r\n  .ub-bg-clr_white {\r\n    background-color: ${designSystem.bgColor.white};\r\n    :hover {\r\n      background-color: ${designSystem.bgColor.white} !important;\r\n    }\r\n  }\r\n  .ub-color_474d66 {\r\n    color: ${designSystem.color.nightBlue};\r\n  }\r\n  .css-12b25td:not([disabled])[data-active]{\r\n    background: #d3d7e889;\r\n  }\r\n  .css-9r9n92[aria-selected=\"true\"]{\r\n    background: #d3d7e889;\r\n  }\r\n`;\r\n\r\nexport {\r\n  DialogContainer,\r\n  DialogDuoContainer,\r\n  DialogSoloContainer,\r\n  StyledError,\r\n  GlobalStyleTransaction,\r\n  DialogEndLineContainer,\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nimport { designSystem } from \"constants/designSystem\";\r\n\r\nconst FiltersCollectionContainer = styled.ul`\r\n  padding: ${designSystem.indent[\"8\"]};\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  align-items: center;\r\n  gap: ${designSystem.indent[\"14\"]};\r\n`;\r\n\r\nexport { FiltersCollectionContainer };\r\n","import React, { useContext } from \"react\";\r\n\r\nimport { OperationsStoreContext } from \"stores/OperationsStore\";\r\nimport { OperationFiltersItem } from \"pages/Home/components/OperationFilters/OperationFiltersItem\";\r\nimport { Dialog } from \"pages/Home/components/Dialog\";\r\nimport { GlobalStyleTransaction } from \"pages/Home/containers/AddTransaction/AddTransactionForm/styled\";\r\nimport { FiltersCollectionContainer } from \"./styled\";\r\n\r\nimport { DialogProps } from \"evergreen-ui\";\r\n\r\nconst FiltersCollection: React.FC<DialogProps> = ({\r\n  isShown,\r\n  onCloseComplete,\r\n}) => {\r\n  const OperationsStore = useContext(OperationsStoreContext);\r\n\r\n  return (\r\n    <>\r\n      <Dialog\r\n        isShown={isShown}\r\n        onCloseComplete={onCloseComplete}\r\n        title=\"Filters category\"\r\n        preventBodyScrolling={true}\r\n      >\r\n        <GlobalStyleTransaction />\r\n        <FiltersCollectionContainer>\r\n          {OperationsStore.operationFiltersArray.map((filter: string) => {\r\n            return (\r\n              <li key={filter}>\r\n                <OperationFiltersItem\r\n                  isChosen={OperationsStore.selectedCategories.includes(filter)}\r\n                  label={filter}\r\n                  onClick={() => {\r\n                    OperationsStore.selectedCategories.includes(filter)\r\n                      ? OperationsStore.removeSelectedCategoriesFilter(filter)\r\n                      : OperationsStore.addSelectedCategoriesFilter(filter);\r\n                  }}\r\n                />\r\n              </li>\r\n            );\r\n          })}\r\n        </FiltersCollectionContainer>\r\n      </Dialog>\r\n    </>\r\n  );\r\n};\r\n\r\nexport { FiltersCollection };\r\n","import styled from \"styled-components\";\r\n\r\nimport { designSystem } from \"constants/designSystem\";\r\n\r\nconst FiltersContainer = styled.div`\r\n  position: relative;\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nconst FiltersItemContainer = styled.div`\r\n  flex: 1 1 auto;\r\n  ul {\r\n    margin: auto;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: flex-start;\r\n    flex-wrap: wrap;\r\n  }\r\n  li {\r\n    margin: ${designSystem.indent[\"8\"]};\r\n    :last-child {\r\n      margin-right: 0;\r\n    }\r\n  }\r\n`;\r\n\r\nconst AddBtnFilterContainer = styled.div`\r\n  margin-right: ${designSystem.indent[\"28\"]};\r\n  display: flex;\r\n  align-self: center;\r\n`;\r\n\r\nconst UnionFlexContainer = styled.div`\r\n  display: flex;\r\n`;\r\n\r\nconst ChooseContainer = styled.div`\r\n  font-size: 20px;\r\n  position: absolute;\r\n  margin-left: 15px;\r\n  top: 50%;\r\n  transform: translateY(-50%);\r\n  opacity: 0.5;\r\n  color: ${designSystem.color.nightBlue};\r\n`;\r\n\r\nexport {\r\n  FiltersContainer,\r\n  FiltersItemContainer,\r\n  AddBtnFilterContainer,\r\n  UnionFlexContainer,\r\n  ChooseContainer,\r\n};\r\n","import React, { useContext, useState } from \"react\";\r\nimport { observer } from \"mobx-react\";\r\n\r\nimport { OperationFilters } from \"pages/Home/components/OperationFilters\";\r\nimport { OperationFiltersItem } from \"pages/Home/components/OperationFilters/OperationFiltersItem\";\r\nimport { OperationFiltersAddButton } from \"pages/Home/components/OperationFilters/OperationFiltersAddButton\";\r\nimport { FiltersCollection } from \"pages/Home/containers/OperationFiltersSection/FiltersCollection\";\r\nimport {\r\n  AddBtnFilterContainer,\r\n  ChooseContainer,\r\n  FiltersContainer,\r\n  FiltersItemContainer,\r\n  UnionFlexContainer,\r\n} from \"./styled\";\r\n\r\nimport { OperationsStoreContext } from \"stores/OperationsStore\";\r\nimport Translate from \"i18n/messages/translate\";\r\n\r\nconst OperationFiltersSection = observer(() => {\r\n  const OperationsStore = useContext(OperationsStoreContext);\r\n\r\n  const [isFiltersCollectionShown, setIsFiltersCollectionShown] = useState(\r\n    false,\r\n  );\r\n\r\n  return (\r\n    <>\r\n      {OperationsStore.data && (\r\n        <FiltersContainer>\r\n          <OperationFilters>\r\n            <UnionFlexContainer>\r\n              <FiltersItemContainer>\r\n                {!OperationsStore.selectedCategories.length && (\r\n                  <ChooseContainer>\r\n                    {Translate(\"filterCategore\")}\r\n                  </ChooseContainer>\r\n                )}\r\n                <ul>\r\n                  {OperationsStore.selectedCategories.map((filter: string) => {\r\n                    return (\r\n                      <li key={filter}>\r\n                        <OperationFiltersItem\r\n                          label={filter}\r\n                          onClick={() => {\r\n                            OperationsStore.removeSelectedCategoriesFilter(\r\n                              filter,\r\n                            );\r\n                          }}\r\n                        />\r\n                      </li>\r\n                    );\r\n                  })}\r\n                </ul>\r\n              </FiltersItemContainer>\r\n              <AddBtnFilterContainer>\r\n                <OperationFiltersAddButton\r\n                  onClick={() => {\r\n                    if (!OperationsStore.isLoading) {\r\n                      setIsFiltersCollectionShown(true);\r\n                    }\r\n                  }}\r\n                />\r\n              </AddBtnFilterContainer>\r\n            </UnionFlexContainer>\r\n          </OperationFilters>\r\n        </FiltersContainer>\r\n      )}\r\n      <FiltersCollection\r\n        isShown={isFiltersCollectionShown}\r\n        onCloseComplete={() => setIsFiltersCollectionShown(false)}\r\n      />\r\n    </>\r\n  );\r\n});\r\n\r\nexport { OperationFiltersSection };\r\n","import styled from \"styled-components\";\r\n\r\nimport { Table } from \"evergreen-ui\";\r\n\r\nconst StyledTable = styled(Table)`\r\n  border: 0;\r\n`;\r\n\r\nexport { StyledTable };\r\n","import React from \"react\";\r\n\r\nimport { StyledTable } from \"./styled\";\r\n\r\ntype Props = {};\r\n\r\nconst Table: React.FC<Props> = ({ children }) => {\r\n  return <StyledTable>{children}</StyledTable>;\r\n};\r\n\r\nexport { Table };\r\n","import React from \"react\";\r\nimport styled, { createGlobalStyle } from \"styled-components\";\r\n\r\nimport { Pagination } from \"evergreen-ui\";\r\nimport { designSystem } from \"constants/designSystem\";\r\n\r\nconst PaginationStyleSetting = createGlobalStyle`\r\n  .pagination ul > li {\r\n    margin-right: ${designSystem.indent[\"8\"]};\r\n\r\n    :first-child,\r\n    :last-child {\r\n      display: none;\r\n    }\r\n\r\n    :last-child {\r\n      margin: 0;\r\n    }\r\n  }\r\n\r\n  .css-1tyjqqv {\r\n    all: unset;\r\n    font-size: ${designSystem.text.fontSize[\"14\"]};\r\n    color: ${designSystem.color.normal};\r\n    background-color: ${designSystem.bgColor.base10};\r\n    padding: 0 ${designSystem.indent[\"8\"]};\r\n    line-height: ${designSystem.text.lineHeight[\"24\"]};\r\n    border-radius: ${designSystem.borderRadius[\"4\"]};\r\n    cursor: pointer;\r\n  }\r\n\r\n  .css-1tyjqqv:focus,\r\n  .css-1tyjqqv:not([disabled]):focus {\r\n    box-shadow: none;\r\n  }\r\n\r\n  .css-1tyjqqv:not([disabled]):hover {\r\n    background-color: ${designSystem.bgColor.base10};\r\n  }\r\n\r\n  .ub-color_5C85FF {\r\n    transition: 0.5s ease;\r\n    color: ${designSystem.color.pagination};\r\n    background-color: ${designSystem.bgColor.base} !important;\r\n  }\r\n`;\r\n\r\nconst StyledPagination = styled(({ className, ...restProps }) => (\r\n  <Pagination className={className} {...restProps} />\r\n))``;\r\n\r\nexport { StyledPagination, PaginationStyleSetting };\r\n","import React from \"react\";\r\n\r\nimport { PaginationStyleSetting, StyledPagination } from \"./styled\";\r\nimport { PaginationProps } from \"evergreen-ui\";\r\n\r\nconst Pagination: React.FC<PaginationProps> = ({ ...props }) => (\r\n  <>\r\n    <StyledPagination {...props} className=\"pagination\" />\r\n    <PaginationStyleSetting />\r\n  </>\r\n);\r\n\r\nexport { Pagination };\r\n","import styled from \"styled-components\";\r\n\r\nimport { designSystem } from \"constants/designSystem\";\r\n\r\nconst StyledTableTitle = styled.div`\r\n  font-weight: ${designSystem.text.weight.bold};\r\n  font-size: ${designSystem.text.fontSize[\"24\"]};\r\n  color: ${designSystem.color.normal};\r\n`;\r\n\r\nexport { StyledTableTitle };\r\n","import React from \"react\";\r\n\r\nimport { StyledTableTitle } from \"./styled\";\r\n\r\ntype Props = {};\r\n\r\nconst TableTitle: React.FC<Props> = ({ children }) => {\r\n  return <StyledTableTitle>{children}</StyledTableTitle>;\r\n};\r\n\r\nexport { TableTitle };\r\n","import styled from \"styled-components\";\r\n\r\nimport { Checkbox } from \"evergreen-ui\";\r\n\r\nimport { designSystem } from \"constants/designSystem\";\r\n\r\nconst StyledCheckbox = styled(Checkbox)`\r\n  width: 20px;\r\n  height: 20px;\r\n  border: 2px solid ${designSystem.color.normal};\r\n  border-radius: ${designSystem.borderRadius[\"6\"]};\r\n  position: relative;\r\n  div {\r\n    all: unset;\r\n  }\r\n  svg {\r\n    display: none;\r\n  }\r\n  span {\r\n    font-size: ${designSystem.text.fontSize[\"16\"]};\r\n    font-weight: ${designSystem.text.weight.normal};\r\n    color: ${designSystem.color.normal};\r\n    margin-left: 29px;\r\n  }\r\n  input[type=\"checkbox\"] {\r\n    all: unset;\r\n    :focus + div {\r\n      box-shadow: none;\r\n    }\r\n  }\r\n  input:checked ~ div:after {\r\n    content: \"\";\r\n    display: block;\r\n    position: absolute;\r\n    width: 12px;\r\n    height: 12px;\r\n    z-index: 2;\r\n    border-radius: ${designSystem.borderRadius[\"2\"]};\r\n    background-color: ${designSystem.color.normal};\r\n    top: 50%;\r\n    left: 50%;\r\n    transform: translate(-50%, -50%);\r\n  }\r\n`;\r\n\r\nexport { StyledCheckbox };\r\n","import React from \"react\";\r\n\r\nimport { StyledCheckbox } from \"./styled\";\r\n\r\ntype Props = {\r\n  label?: string;\r\n  checked?: boolean;\r\n  onChange?: () => void;\r\n};\r\n\r\nconst Checkbox: React.FC<Props> = ({ ...props }) => {\r\n  return <StyledCheckbox {...props} />;\r\n};\r\n\r\nexport { Checkbox };\r\n","import styled from \"styled-components\";\r\n\r\nconst StyledTableTypeFilters = styled.div``;\r\n\r\nconst CheckboxContainer = styled.div`\r\n  display: flex;\r\n  width: 140px;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n`;\r\n\r\nexport { StyledTableTypeFilters, CheckboxContainer };\r\n","import React from \"react\";\r\n\r\nimport { Checkbox } from \"pages/Home/components/Checkbox\";\r\nimport { StyledTableTypeFilters, CheckboxContainer } from \"./styled\";\r\n\r\nexport type TableFiltersPropsType = {\r\n  typeFilters: string[];\r\n  checkedTypeFilters: string[];\r\n  selectTypeFilters: (id: string) => void;\r\n};\r\n\r\nconst TableTypeFilters: React.FC<TableFiltersPropsType> = ({\r\n  typeFilters,\r\n  checkedTypeFilters,\r\n  selectTypeFilters,\r\n}) => {\r\n  return (\r\n    <StyledTableTypeFilters>\r\n      <CheckboxContainer>\r\n        {typeFilters.map(filter => {\r\n          const checked = checkedTypeFilters.includes(filter);\r\n          const onChange = () => selectTypeFilters(filter);\r\n          return (\r\n            <Checkbox\r\n              key={filter}\r\n              label={filter}\r\n              checked={checked}\r\n              onChange={onChange}\r\n            />\r\n          );\r\n        })}\r\n      </CheckboxContainer>\r\n    </StyledTableTypeFilters>\r\n  );\r\n};\r\n\r\nexport { TableTypeFilters };\r\n","export default __webpack_public_path__ + \"static/media/calendar.bec623da.svg\";","import React from \"react\";\r\nimport styled, { createGlobalStyle } from \"styled-components\";\r\n\r\nimport { designSystem } from \"constants/designSystem\";\r\n\r\nimport CalendarIcon from \"assets/icons/calendar.svg\";\r\nimport DatePicker from \"react-datepicker\";\r\n\r\nconst Calendar = styled.div`\r\n  border-radius: 10px;\r\n  box-shadow: 0 6px 12px rgba(27, 37, 86, 0.16);\r\n  overflow: hidden;\r\n  background: ${designSystem.bgColor.bgCalendar};\r\n  border: 1px solid rgba(67, 83, 121, 0.2);\r\n`;\r\n\r\nconst Popper = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  z-index: 3;\r\n`;\r\nconst HeaderCalendar = createGlobalStyle`\r\n    .react-datepicker__header {\r\n      background: #435379;\r\n      border-bottom: 0;\r\n    }\r\n    .react-datepicker__day-name, \r\n    .react-datepicker__current-month{\r\n      color: ${designSystem.color.white};\r\n    }\r\n    \r\n    .react-datepicker__year-read-view--down-arrow, \r\n    .react-datepicker__month-read-view--down-arrow, \r\n    .react-datepicker__month-year-read-view--down-arrow, \r\n    .react-datepicker__navigation-icon::before {\r\n      border-color: ${designSystem.color.white};\r\n    }\r\n    .react-datepicker__day--selected,\r\n    .react-datepicker__day--in-selecting-range,\r\n    .react-datepicker__day--in-range,\r\n    .react-datepicker__month-text--selected,\r\n    .react-datepicker__month-text--in-selecting-range,\r\n    .react-datepicker__month-text--in-range,\r\n    .react-datepicker__quarter-text--selected,\r\n    .react-datepicker__quarter-text--in-selecting-range,\r\n    .react-datepicker__quarter-text--in-range,\r\n    .react-datepicker__year-text--selected,\r\n    .react-datepicker__year-text--in-selecting-range,\r\n    .react-datepicker__year-text--in-range{\r\n          background-color: #435379;\r\n          border: 1px solid #000;\r\n        }\r\n\r\n    .react-datepicker__day--selected{\r\n      color: ${designSystem.color.white};\r\n    }\r\n\r\n    .react-datepicker__day:hover{\r\n      background: #999999;\r\n    }\r\n    \r\n`;\r\n\r\nconst ExampleCustomButton = styled.span`\r\n  background-color: ${designSystem.bgColor.white};\r\n  border: 1px solid rgba(67, 83, 121, 0.4);\r\n  box-sizing: border-box;\r\n  border-radius: 31px;\r\n  color: ${designSystem.color.normal};\r\n  font-weight: 500;\r\n  font-size: 16px;\r\n  line-height: 24px;\r\n  padding: 4px 36px 4px 24px;\r\n  width: 175px;\r\n  outline: none;\r\n  appearance: none;\r\n  max-height: 46px;\r\n  cursor: pointer;\r\n  position: relative;\r\n  text-align: left;\r\n\r\n  ::after {\r\n    content: \"\";\r\n    position: absolute;\r\n    left: 80%;\r\n    top: 18%;\r\n    background-size: 10px;\r\n    width: 20px; \r\n    height: 20px;\r\n    cursor: pointer;\r\n    background-image: url(\"${CalendarIcon}\");\r\n    background-repeat: no-repeat;\r\n    background-position: center;\r\n  }\r\n`;\r\n\r\nconst DatePickerWrapper = styled(({ className, ...restProps }) => (\r\n  <DatePicker wrapperClassName={className} {...restProps} />\r\n))`\r\n  width: 100%;\r\n`;\r\n\r\nexport {\r\n  Popper,\r\n  Calendar,\r\n  ExampleCustomButton,\r\n  HeaderCalendar,\r\n  DatePickerWrapper,\r\n};\r\n","import React, { forwardRef } from \"react\";\r\n\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport {\r\n  Calendar,\r\n  DatePickerWrapper,\r\n  ExampleCustomButton,\r\n  HeaderCalendar,\r\n  Popper,\r\n} from \"./styled\";\r\n\r\ntype Props = {\r\n  onClick?: (event: React.MouseEvent<HTMLButtonElement>) => void;\r\n  value?: string | Date;\r\n  dateFrom?: Date;\r\n  dateTo?: Date;\r\n  selected?: Date;\r\n  onChange?: (date: Date) => void;\r\n};\r\nconst Datepicker: React.FC<Props> = ({\r\n  value,\r\n  onClick,\r\n  dateFrom,\r\n  dateTo,\r\n  selected,\r\n  onChange,\r\n}) => {\r\n  const ExampleCustomInput = forwardRef(\r\n    ({ value, onClick }: Props, ref: any) => (\r\n      <ExampleCustomButton onClick={onClick} ref={ref}>\r\n        {value !== \"\" ? value : \"Select Date\"}\r\n      </ExampleCustomButton>\r\n    ),\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <DatePickerWrapper\r\n        selected={selected}\r\n        onChange={onChange}\r\n        customInput={<ExampleCustomInput value={value} onClick={onClick} />}\r\n        dateFormat=\"dd / MM / yyyy\"\r\n        popperContainer={Popper}\r\n        calendarContainer={Calendar}\r\n        minDate={dateFrom}\r\n        maxDate={dateTo}\r\n        closeOnScroll={true}\r\n      />\r\n      <HeaderCalendar />\r\n    </>\r\n  );\r\n};\r\n\r\nexport { Datepicker };\r\n","import styled from \"styled-components\";\r\n\r\nimport { designSystem } from \"constants/designSystem\";\r\n\r\nconst TableDateContainer = styled.div`\r\n  display: flex;\r\n  & .dateFrom {\r\n    margin-right: ${designSystem.indent[\"42\"]};\r\n  }\r\n`;\r\n\r\nconst TableDateItemContainer = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  & .dateLabel {\r\n    font-size: ${designSystem.text.fontSize[\"16\"]};\r\n    margin-right: ${designSystem.indent[\"24\"]};\r\n  }\r\n`;\r\n\r\nexport { TableDateContainer, TableDateItemContainer };\r\n","import React, { Dispatch, SetStateAction } from \"react\";\r\n\r\nimport { Datepicker } from \"components/DatePicker\";\r\n\r\nimport { TableDateContainer, TableDateItemContainer } from \"./styled\";\r\n\r\nimport { IDataModel } from \"stores/OperationsStore\";\r\nimport Translate from \"../../../../../i18n/messages/translate\";\r\n\r\nexport type DatePropsType = {\r\n  dateFrom: Date;\r\n  dateTo: Date;\r\n  setDateFrom: (date: Date) => void;\r\n  setDateTo: (date: Date) => void;\r\n  setCheckedTransactions: Dispatch<SetStateAction<IDataModel[]>>;\r\n  setGlobalCheckbox: Dispatch<SetStateAction<boolean>>;\r\n};\r\n\r\nconst TableDatePicker: React.FC<DatePropsType> = ({\r\n  dateFrom,\r\n  dateTo,\r\n  setDateFrom,\r\n  setDateTo,\r\n  setCheckedTransactions,\r\n  setGlobalCheckbox,\r\n}) => {\r\n  const onHandlerClick = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n    event.target as HTMLButtonElement;\r\n  };\r\n\r\n  const onChangeDateFrom = (date: Date) => {\r\n    setDateFrom(date);\r\n    setCheckedTransactions([]);\r\n    setGlobalCheckbox(false);\r\n  };\r\n\r\n  const onChangeDateTo = (date: Date) => {\r\n    setDateTo(date);\r\n    setCheckedTransactions([]);\r\n    setGlobalCheckbox(false);\r\n  };\r\n\r\n  return (\r\n    <TableDateContainer>\r\n      <TableDateItemContainer className=\"dateFrom\">\r\n        <span className=\"dateLabel\">{Translate(\"from\")}</span>\r\n        <Datepicker\r\n          onClick={onHandlerClick}\r\n          value={dateFrom}\r\n          dateTo={dateTo}\r\n          onChange={onChangeDateFrom}\r\n          selected={dateFrom}\r\n        />\r\n      </TableDateItemContainer>\r\n      <TableDateItemContainer className=\"dateTo\">\r\n        <span className=\"dateLabel\">{Translate(\"to\")}</span>\r\n        <Datepicker\r\n          onClick={onHandlerClick}\r\n          value={dateTo}\r\n          onChange={onChangeDateTo}\r\n          selected={dateTo}\r\n          dateFrom={dateFrom}\r\n        />\r\n      </TableDateItemContainer>\r\n    </TableDateContainer>\r\n  );\r\n};\r\n\r\nexport { TableDatePicker };\r\n","import styled from \"styled-components\";\r\n\r\nconst TablePreHeaderContainer = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n`;\r\n\r\nconst TableTitleContainer = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  max-width: 370px;\r\n  flex-basis: 370px;\r\n`;\r\n\r\nconst TableDatePickerContainer = styled.div`\r\n  display: flex;\r\n`;\r\n\r\nexport {\r\n  TablePreHeaderContainer,\r\n  TableTitleContainer,\r\n  TableDatePickerContainer,\r\n};\r\n","import React from \"react\";\r\n\r\nimport { TableTitle } from \"pages/Home/components/Table/TableTitle\";\r\nimport {\r\n  TableFiltersPropsType,\r\n  TableTypeFilters,\r\n} from \"pages/Home/containers/TableContainer/TableTypeFilters\";\r\nimport {\r\n  DatePropsType,\r\n  TableDatePicker,\r\n} from \"pages/Home/containers/TableContainer/TableDatePicker\";\r\nimport {\r\n  TablePreHeaderContainer,\r\n  TableTitleContainer,\r\n  TableDatePickerContainer,\r\n} from \"./styled\";\r\nimport Translate from \"i18n/messages/translate\";\r\n\r\ntype Props = {} & DatePropsType & TableFiltersPropsType;\r\n\r\nconst TablePreHeader: React.FC<Props> = ({\r\n  typeFilters,\r\n  selectTypeFilters,\r\n  checkedTypeFilters,\r\n  ...tableDateProps\r\n}) => {\r\n  return (\r\n    <TablePreHeaderContainer>\r\n      <TableTitleContainer>\r\n        <TableTitle>{Translate(\"transactionsList\")}</TableTitle>\r\n        <TableTypeFilters\r\n          checkedTypeFilters={checkedTypeFilters}\r\n          selectTypeFilters={selectTypeFilters}\r\n          typeFilters={typeFilters}\r\n        />\r\n      </TableTitleContainer>\r\n      <TableDatePickerContainer>\r\n        <TableTitle>\r\n          <TableDatePicker {...tableDateProps} />\r\n        </TableTitle>\r\n      </TableDatePickerContainer>\r\n    </TablePreHeaderContainer>\r\n  );\r\n};\r\n\r\nexport { TablePreHeader };\r\n","import styled from \"styled-components\";\r\n\r\nimport { Table } from \"evergreen-ui\";\r\n\r\nconst StyledTableHead = styled(Table.Head)`\r\n  background-color: transparent;\r\n  border: 0;\r\n  padding: 0 42px;\r\n`;\r\n\r\nexport { StyledTableHead };\r\n","import React from \"react\";\r\n\r\nimport { StyledTableHead } from \"./styled\";\r\n\r\ntype Props = {};\r\n\r\nconst TableHead: React.FC<Props> = ({ children }) => {\r\n  return <StyledTableHead>{children}</StyledTableHead>;\r\n};\r\n\r\nexport { TableHead };\r\n","import styled from \"styled-components\";\r\n\r\nimport { Table } from \"evergreen-ui\";\r\n\r\nconst StyledTableHeaderCell = styled(Table.HeaderCell)``;\r\n\r\nexport { StyledTableHeaderCell };\r\n","import React from \"react\";\r\n\r\nimport { StyledTableHeaderCell } from \"./styled\";\r\n\r\ntype Props = {};\r\n\r\nconst TableHeaderCell: React.FC<Props> = ({ children }) => {\r\n  return <StyledTableHeaderCell>{children}</StyledTableHeaderCell>;\r\n};\r\n\r\nexport { TableHeaderCell };\r\n","export default __webpack_public_path__ + \"static/media/arrow-down.c82e29bd.svg\";","import styled, { css } from \"styled-components\";\r\n\r\nimport { Table } from \"evergreen-ui\";\r\n\r\nimport { designSystem } from \"constants/designSystem\";\r\nimport ArrowDown from \"assets/icons/arrow-down.svg\";\r\n\r\nconst StyledTableTextHeaderCell = styled(Table.TextHeaderCell)`\r\n  color: ${designSystem.color.light};\r\n  font-weight: ${designSystem.text.weight.bold};\r\n  font-size: ${designSystem.text.fontSize[\"14\"]};\r\n  text-transform: capitalize;\r\n\r\n  ${({ sorting }) =>\r\n    sorting &&\r\n    css`\r\n      div > div {\r\n        position: relative;\r\n        cursor: pointer;\r\n        user-select: none;\r\n\r\n        :focus {\r\n          color: ${designSystem.text.color.normal};\r\n          outline: none;\r\n\r\n          :after {\r\n            content: \"\";\r\n            transition: 0.3s all ease-in;\r\n            width: 8px;\r\n            height: 6px;\r\n            position: absolute;\r\n            background-image: url(${ArrowDown});\r\n            background-repeat: no-repeat;\r\n            top: 40%;\r\n            transform: translate(-50% -50%);\r\n            margin-left: 8px;\r\n          }\r\n        }\r\n      }\r\n    `}\r\n\r\n  ${({ datedirection }) =>\r\n    datedirection &&\r\n    css`\r\n      div > div {\r\n        :focus {\r\n          :after {\r\n            top: 35%;\r\n            transform: rotate(180deg);\r\n          }\r\n        }\r\n      }\r\n    `}\r\n\r\n  ${({ quantitydirection }) =>\r\n    quantitydirection &&\r\n    css`\r\n      div > div {\r\n        :focus {\r\n          :after {\r\n            top: 35%;\r\n            transform: rotate(180deg);\r\n          }\r\n        }\r\n      }\r\n    `}\r\n}\r\n`;\r\n\r\nexport { StyledTableTextHeaderCell };\r\n","import React from \"react\";\r\n\r\nimport { StyledTableTextHeaderCell } from \"./styled\";\r\n\r\nexport type TableTextHeaderCellPropsType = {\r\n  sorting?: boolean | number;\r\n  onClick?: () => void;\r\n  tabIndex?: number;\r\n  dateSorting?: number;\r\n  quantitySorting?: number;\r\n  datedirection?: number;\r\n  quantitydirection?: number;\r\n};\r\n\r\nconst TableTextHeaderCell: React.FC<TableTextHeaderCellPropsType> = ({\r\n  children,\r\n  tabIndex,\r\n  ...restProps\r\n}) => {\r\n  return (\r\n    <StyledTableTextHeaderCell {...restProps}>\r\n      <div tabIndex={tabIndex}>{children}</div>\r\n    </StyledTableTextHeaderCell>\r\n  );\r\n};\r\n\r\nexport { TableTextHeaderCell };\r\n","import styled, { createGlobalStyle } from \"styled-components\";\r\n\r\nimport { designSystem } from \"constants/designSystem\";\r\n\r\nconst TableBodyContainer = styled.div`\r\n  background-color: ${designSystem.bgColor.white};\r\n  border: 0 solid transparent;\r\n  border-radius: ${designSystem.borderRadius[\"24\"]};\r\n`;\r\n\r\nconst PaginationContainer = styled.div`\r\n  position: relative;\r\n  bottom: ${designSystem.indent[\"60\"]};\r\n  left: ${designSystem.indent[\"52\"]};\r\n`;\r\n\r\nconst TableUnionContainer = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n`;\r\nconst TableRightSideContainer = styled.div`\r\n  max-width: ${designSystem.table.rightSide.width};\r\n  display: flex;\r\n  flex-basis: ${designSystem.table.rightSide.width};\r\n`;\r\n\r\nconst TableLeftSideContainer = styled.div`\r\n  max-width: ${designSystem.table.leftSide.width};\r\n  display: flex;\r\n  flex-basis: ${designSystem.table.leftSide.width};\r\n  align-items: center;\r\n`;\r\n\r\nconst TableIdContainer = styled.div`\r\n  flex: 0 0 130px;\r\n  text-align: center;\r\n  max-width: 130px;\r\n`;\r\n\r\nconst TableCheckboxContainer = styled.div`\r\n  flex: 0 0 0;\r\n`;\r\n\r\nconst DialogTitle = createGlobalStyle`\r\n  .ub-color_101840 {\r\n    color: ${designSystem.color.nightBlue};\r\n  }\r\n  .ub-color_474d66 {\r\n      color: ${designSystem.color.normal};\r\n  }\r\n\r\n  //Temporary styles\r\n  .css-12b25td:not([disabled]):hover {\r\n    background-color: ${designSystem.bgColor.white};\r\n  } \r\n  .ub-algn-slf_stretch:hover {\r\n    background: ${designSystem.bgColor.white};\r\n  }\r\n`;\r\n\r\nexport {\r\n  TableBodyContainer,\r\n  PaginationContainer,\r\n  TableLeftSideContainer,\r\n  TableRightSideContainer,\r\n  TableUnionContainer,\r\n  TableIdContainer,\r\n  TableCheckboxContainer,\r\n  DialogTitle,\r\n};\r\n","import React, { useState } from \"react\";\r\n\r\nimport { TableHead } from \"pages/Home/components/Table/TableHead\";\r\nimport { TableHeaderCell } from \"pages/Home/components/Table/TableHeaderCell\";\r\nimport { Checkbox } from \"pages/Home/components/Checkbox\";\r\nimport { TableTextHeaderCell } from \"pages/Home/components/Table/TableTextHeaderCell\";\r\nimport {\r\n  TableLeftSideContainer,\r\n  TableRightSideContainer,\r\n  TableUnionContainer,\r\n  TableIdContainer,\r\n  TableCheckboxContainer,\r\n} from \"pages/Home/containers/TableContainer/styled\";\r\n\r\ntype Props = {\r\n  globalCheckbox: boolean;\r\n  selectAllTransactions: () => void;\r\n  dateSorting: () => void;\r\n  quantitySorting: () => void;\r\n};\r\n\r\nconst TableHeader: React.FC<Props> = ({\r\n  globalCheckbox,\r\n  selectAllTransactions,\r\n  dateSorting,\r\n  quantitySorting,\r\n}) => {\r\n  const [dateDirection, setDateDirection] = useState(false);\r\n  const [quantityDirection, setQuantityDirection] = useState(false);\r\n\r\n  const onChange = () => {\r\n    selectAllTransactions();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <TableHead>\r\n        <TableUnionContainer>\r\n          <TableLeftSideContainer>\r\n            <TableCheckboxContainer>\r\n              <TableHeaderCell>\r\n                <Checkbox checked={globalCheckbox} onChange={onChange} />\r\n              </TableHeaderCell>\r\n            </TableCheckboxContainer>\r\n            <TableIdContainer>\r\n              <TableTextHeaderCell>ID</TableTextHeaderCell>\r\n            </TableIdContainer>\r\n            <TableTextHeaderCell\r\n              sorting={+true}\r\n              onClick={() => {\r\n                dateSorting();\r\n                setDateDirection(prevState => !prevState);\r\n              }}\r\n              tabIndex={0}\r\n              datedirection={+dateDirection}\r\n            >\r\n              Date\r\n            </TableTextHeaderCell>\r\n            <TableTextHeaderCell>Category</TableTextHeaderCell>\r\n          </TableLeftSideContainer>\r\n          <TableRightSideContainer>\r\n            <TableTextHeaderCell>Type</TableTextHeaderCell>\r\n            <TableTextHeaderCell\r\n              sorting={+true}\r\n              onClick={() => {\r\n                quantitySorting();\r\n                setQuantityDirection(prevState => !prevState);\r\n              }}\r\n              tabIndex={0}\r\n              quantitydirection={+quantityDirection}\r\n            >\r\n              Quantity\r\n            </TableTextHeaderCell>\r\n            <TableTextHeaderCell />\r\n          </TableRightSideContainer>\r\n        </TableUnionContainer>\r\n      </TableHead>\r\n    </>\r\n  );\r\n};\r\n\r\nexport { TableHeader };\r\n","import styled from \"styled-components\";\r\n\r\nimport { Table } from \"evergreen-ui\";\r\n\r\nimport { designSystem } from \"constants/designSystem\";\r\n\r\nconst StyledTableBody = styled(Table.Body)`\r\n  height: 718px;\r\n  border-radius: ${designSystem.borderRadius[\"24\"]};\r\n`;\r\n\r\nexport { StyledTableBody };\r\n","import React from \"react\";\r\n\r\nimport { StyledTableBody } from \"./styled\";\r\n\r\nconst TableBody: React.FC = ({ children }) => {\r\n  return <StyledTableBody>{children}</StyledTableBody>;\r\n};\r\n\r\nexport { TableBody };\r\n","import { Pane } from \"components/Pane\";\r\nimport styled from \"styled-components\";\r\n\r\nconst PlaceholderContainer = styled(Pane)`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nexport { PlaceholderContainer };\r\n","import React from \"react\";\r\n\r\nimport { PaneProps, Spinner, SpinnerProps } from \"evergreen-ui\";\r\nimport { PlaceholderContainer } from \"./styled\";\r\n\r\ntype Props = {} & PaneProps & SpinnerProps;\r\n\r\nconst Placeholder: React.FC<Props> = ({ width, ...props }) => {\r\n  return (\r\n    <PlaceholderContainer {...props}>\r\n      <Spinner width={width} />\r\n    </PlaceholderContainer>\r\n  );\r\n};\r\n\r\nexport { Placeholder };\r\n","import styled from \"styled-components\";\r\n\r\nimport { Table } from \"evergreen-ui\";\r\n\r\nconst StyledTableCell = styled(Table.Cell)``;\r\n\r\nexport { StyledTableCell };\r\n","import React from \"react\";\r\n\r\nimport { StyledTableCell } from \"./styled\";\r\n\r\ntype Props = {};\r\n\r\nconst TableCell: React.FC<Props> = ({ children }) => {\r\n  return <StyledTableCell>{children}</StyledTableCell>;\r\n};\r\n\r\nexport { TableCell };\r\n","import styled from \"styled-components\";\r\n\r\nimport { Table } from \"evergreen-ui\";\r\n\r\nimport { designSystem } from \"constants/designSystem\";\r\n\r\nconst StyledTableRow = styled(Table.Row)`\r\n  padding: 0 42px;\r\n  background: ${designSystem.bgColor.white};\r\n  &:hover {\r\n    box-shadow: 0 0 24px rgba(209, 219, 241, 0.5);\r\n    position: relative;\r\n    z-index: 2;\r\n    &:first-child {\r\n      border-top-left-radius: ${designSystem.borderRadius[\"24\"]};\r\n      border-top-right-radius: ${designSystem.borderRadius[\"24\"]};\r\n      box-shadow: 0 0 24px rgba(209, 219, 241, 0.5);\r\n    }\r\n  }\r\n`;\r\n\r\nexport { StyledTableRow };\r\n","import React from \"react\";\r\n\r\nimport { StyledTableRow } from \"./styled\";\r\n\r\ntype Props = {};\r\n\r\nconst TableRow: React.FC<Props> = ({ children }) => {\r\n  return <StyledTableRow>{children}</StyledTableRow>;\r\n};\r\n\r\nexport { TableRow };\r\n","import styled, { css } from \"styled-components\";\r\nimport { Table } from \"evergreen-ui\";\r\n\r\nimport { designSystem } from \"constants/designSystem\";\r\nimport { selectCategoryColor } from \"utils/selectCategory\";\r\n\r\nimport { TextCellStyleProps } from \"pages/Home/containers/TableContainer/types/textCellStyleProps\";\r\n\r\nconst StyledTableTextCell = styled(Table.TextCell)<TextCellStyleProps>`\r\n  & span {\r\n    font-size: ${designSystem.text.fontSize[\"16\"]};\r\n    font-weight: ${designSystem.text.weight.normal};\r\n    color: ${designSystem.color.normal};\r\n  }\r\n\r\n  ${({ placeholder, children }) =>\r\n    placeholder &&\r\n    css`\r\n      &:before {\r\n        content: \"\";\r\n        width: 16px;\r\n        height: 16px;\r\n        background-color: ${selectCategoryColor(children)};\r\n        border-radius: 50%;\r\n        margin-right: 16px;\r\n      }\r\n    `}\r\n    \r\n  ${({ category }) =>\r\n    category &&\r\n    css`\r\n      & span {\r\n        font-size: ${designSystem.text.fontSize[\"18\"]};\r\n        line-height: ${designSystem.text.lineHeight[\"22\"]};\r\n        font-weight: ${designSystem.text.weight.bold};\r\n        color: ${designSystem.color.normal};\r\n      }\r\n    `}\r\n  \r\n  ${({ quantity }) =>\r\n    quantity &&\r\n    css`\r\n      & span {\r\n        font-weight: ${designSystem.text.weight.bold};\r\n      }\r\n    `}\r\n`;\r\n\r\nexport { StyledTableTextCell };\r\n","import React from \"react\";\r\n\r\nimport { StyledTableTextCell } from \"./styled\";\r\n\r\nimport { TextCellStyleProps } from \"pages/Home/containers/TableContainer/types/textCellStyleProps\";\r\n\r\nconst TableTextCell: React.FC<TextCellStyleProps> = ({\r\n  children,\r\n  ...props\r\n}) => {\r\n  return <StyledTableTextCell {...props}>{children}</StyledTableTextCell>;\r\n};\r\n\r\nexport { TableTextCell };\r\n","import { designSystem } from \"constants/designSystem\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledTrashButton = styled.button`\r\n  all: unset;\r\n  width: 24px;\r\n  height: 24px;\r\n  background-repeat: no-repeat;\r\n  cursor: pointer;\r\n  & svg {\r\n    & path {\r\n      fill: ${designSystem.color.normal};\r\n    }\r\n  }\r\n  &:hover {\r\n    & svg {\r\n      & path {\r\n        fill: ${designSystem.color.normal};\r\n        fill-opacity: 1;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport { StyledTrashButton };\r\n","var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgArrowRight(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M7.75738 3.51472C8.53842 2.73367 9.80475 2.73367 10.5858 3.51472L17.6569 10.5858C18.4379 11.3668 18.4379 12.6332 17.6569 13.4142L10.5858 20.4853C9.80475 21.2663 8.53842 21.2663 7.75738 20.4853C6.97633 19.7042 6.97633 18.4379 7.75738 17.6569L13.4142 12L7.75738 6.34315C6.97633 5.5621 6.97633 4.29577 7.75738 3.51472Z\",\n    fill: \"#435379\",\n    fillOpacity: 0.4\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgArrowRight);\nexport default __webpack_public_path__ + \"static/media/arrow-right.838c23c2.svg\";\nexport { ForwardRef as ReactComponent };","import React from \"react\";\r\n\r\nimport { StyledTrashButton } from \"./styled\";\r\n\r\nimport { ReactComponent as TrashIcon } from \"assets/icons/trash.svg\";\r\n\r\nimport { ButtonProps } from \"evergreen-ui\";\r\n\r\nconst TrashButton: React.FC<ButtonProps> = () => (\r\n  <StyledTrashButton>\r\n    <TrashIcon />\r\n  </StyledTrashButton>\r\n);\r\n\r\nexport { TrashButton };\r\n","import React, { Dispatch, SetStateAction, useContext } from \"react\";\r\nimport { observer } from \"mobx-react\";\r\n\r\nimport { TrashButton } from \"components/Button/TrashButton\";\r\n\r\nimport { IDataModel, OperationsStoreContext } from \"stores/OperationsStore\";\r\nimport { transactionsAPI } from \"services/ApiService\";\r\n\r\ntype Props = {\r\n  transaction?: IDataModel;\r\n  severalTransactions?: IDataModel[];\r\n  setSidebarIsShown?: Dispatch<SetStateAction<boolean>>;\r\n  setIsDataChanged?: Dispatch<SetStateAction<boolean>>;\r\n  setSidebarWithCheckedTransactionsIsShown?: Dispatch<SetStateAction<boolean>>;\r\n  checkedTransactions: IDataModel[];\r\n  setCheckedTransactions: Dispatch<SetStateAction<IDataModel[]>>;\r\n};\r\n\r\nconst DeleteTransaction: React.FC<Props> = observer(\r\n  ({\r\n    transaction,\r\n    setSidebarIsShown,\r\n    severalTransactions,\r\n    setIsDataChanged,\r\n    setSidebarWithCheckedTransactionsIsShown,\r\n    checkedTransactions,\r\n    setCheckedTransactions,\r\n  }) => {\r\n    const OperationsStore = useContext(OperationsStoreContext);\r\n\r\n    const unCheckTransaction = (transaction: IDataModel) => {\r\n      const idx = checkedTransactions.findIndex(el => el === transaction);\r\n      setCheckedTransactions([\r\n        ...checkedTransactions.slice(0, idx),\r\n        ...checkedTransactions.slice(idx + 1),\r\n      ]);\r\n    };\r\n\r\n    const removeCategoryFilter = (transaction: IDataModel) => {\r\n      if (\r\n        !OperationsStore.operationFiltersArray.includes(transaction.category)\r\n      ) {\r\n        OperationsStore.removeSelectedCategoriesFilter(transaction.category);\r\n      }\r\n    };\r\n\r\n    const onDeleteTransaction = () => {\r\n      if (transaction) {\r\n        transactionsAPI.deleteTransaction(transaction).then(() => {\r\n          unCheckTransaction(transaction);\r\n          OperationsStore.deleteTransaction(transaction);\r\n          removeCategoryFilter(transaction);\r\n          setSidebarIsShown && setSidebarIsShown(false);\r\n        });\r\n      }\r\n    };\r\n\r\n    const onDeleteSeveralTransactions = () => {\r\n      if (severalTransactions) {\r\n        Promise.all(\r\n          severalTransactions.map(transaction =>\r\n            transactionsAPI.deleteTransaction(transaction),\r\n          ),\r\n        ).then(() => {\r\n          setCheckedTransactions([]);\r\n          severalTransactions.map(transaction => {\r\n            OperationsStore.deleteTransaction(transaction);\r\n            removeCategoryFilter(transaction);\r\n          });\r\n\r\n          setIsDataChanged && setIsDataChanged(prevState => !prevState);\r\n          setSidebarWithCheckedTransactionsIsShown &&\r\n            setSidebarWithCheckedTransactionsIsShown(false);\r\n        });\r\n      }\r\n    };\r\n\r\n    if (transaction) {\r\n      return (\r\n        <div onClick={onDeleteTransaction}>\r\n          <TrashButton />\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div onClick={onDeleteSeveralTransactions}>\r\n          <TrashButton />\r\n        </div>\r\n      );\r\n    }\r\n  },\r\n);\r\n\r\nexport { DeleteTransaction };\r\n","import { designSystem } from \"constants/designSystem\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledRightArrowButton = styled.button`\r\n  all: unset;\r\n  width: 24px;\r\n  height: 24px;\r\n  background-repeat: no-repeat;\r\n  cursor: pointer;\r\n  & svg {\r\n    & path {\r\n      fill: ${designSystem.color.normal};\r\n    }\r\n  }\r\n  &:hover {\r\n    & svg {\r\n      & path {\r\n        fill: ${designSystem.color.normal};\r\n        fill-opacity: 1;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport { StyledRightArrowButton };\r\n","var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgEdit(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M4.10172 15.1457C3.96008 15.2873 3.86424 15.4682 3.82662 15.665L2.99073 20.0364C2.85807 20.7302 3.46698 21.3391 4.16075 21.2064L8.53217 20.3705C8.72892 20.3329 8.90983 20.2371 9.05147 20.0954L17.5824 11.5645L12.6327 6.61475L14.0907 5.1567L19.0405 10.1064L21.2713 7.87554C22.0524 7.09449 22.0524 5.82816 21.2713 5.04711L19.15 2.92579C18.369 2.14474 17.1026 2.14474 16.3216 2.92579L4.10172 15.1457Z\",\n    fill: \"#435379\",\n    fillOpacity: 0.4\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgEdit);\nexport default __webpack_public_path__ + \"static/media/edit.cfa9cbd2.svg\";\nexport { ForwardRef as ReactComponent };","import React from \"react\";\r\n\r\nimport { StyledRightArrowButton } from \"./styled\";\r\nimport { ReactComponent as ArrowRightIcon } from \"assets/icons/arrow-right.svg\";\r\n\r\nconst RightArrowButton = ({ ...props }) => {\r\n  return (\r\n    <StyledRightArrowButton {...props}>\r\n      <ArrowRightIcon />\r\n    </StyledRightArrowButton>\r\n  );\r\n};\r\n\r\nexport { RightArrowButton };\r\n","import React, { Dispatch, SetStateAction, useEffect } from \"react\";\r\n\r\nimport { RightArrowButton } from \"components/Button/RightArrowButton\";\r\n\r\nimport { IDataModel } from \"stores/OperationsStore\";\r\n\r\nexport type RightArrowPropsType = {\r\n  transaction: IDataModel;\r\n  setSidebarIsShown: Dispatch<SetStateAction<boolean>>;\r\n  setTransactionInfo: Dispatch<SetStateAction<IDataModel>>;\r\n};\r\n\r\nconst RightArrowAction: React.FC<RightArrowPropsType> = ({\r\n  transaction,\r\n  setSidebarIsShown,\r\n  setTransactionInfo,\r\n}) => {\r\n  useEffect(() => {\r\n    setTransactionInfo(transaction);\r\n  }, [transaction]);\r\n\r\n  const onClick = () => {\r\n    setSidebarIsShown(true);\r\n    setTransactionInfo(transaction);\r\n  };\r\n\r\n  return <RightArrowButton onClick={onClick} />;\r\n};\r\n\r\nexport { RightArrowAction };\r\n","import styled from \"styled-components\";\r\n\r\nimport { designSystem } from \"constants/designSystem\";\r\n\r\nconst TableButtonsContainer = styled.div`\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  gap: ${designSystem.indent[\"24\"]};\r\n`;\r\n\r\nexport { TableButtonsContainer };\r\n","import React from \"react\";\r\n\r\nimport { DeleteTransaction } from \"pages/Home/containers/DeleteTransaction\";\r\nimport { TableTextCell } from \"pages/Home/components/Table/TableTextCell\";\r\nimport {\r\n  RightArrowAction,\r\n  RightArrowPropsType,\r\n} from \"pages/Home/containers/TableContainer/TableButtons/RightArrowAction\";\r\nimport { TableButtonsContainer } from \"./styled\";\r\n\r\nimport { SidebarDeleteTransactionPropsType } from \"pages/Home/containers/SidebarWithTransaction/SidebarButtons\";\r\n\r\ntype Props = {} & RightArrowPropsType & SidebarDeleteTransactionPropsType;\r\n\r\nconst TableButtons: React.FC<Props> = ({\r\n  transaction,\r\n  setSidebarIsShown,\r\n  setTransactionInfo,\r\n  checkedTransactions,\r\n  setCheckedTransactions,\r\n}) => {\r\n  return (\r\n    <TableTextCell>\r\n      <TableButtonsContainer>\r\n        <DeleteTransaction\r\n          checkedTransactions={checkedTransactions}\r\n          setCheckedTransactions={setCheckedTransactions}\r\n          transaction={transaction}\r\n        />\r\n        <RightArrowAction\r\n          setTransactionInfo={setTransactionInfo}\r\n          setSidebarIsShown={setSidebarIsShown}\r\n          transaction={transaction}\r\n        />\r\n      </TableButtonsContainer>\r\n    </TableTextCell>\r\n  );\r\n};\r\n\r\nexport { TableButtons };\r\n","import styled from \"styled-components\";\r\n\r\nimport { designSystem } from \"constants/designSystem\";\r\n\r\nconst NoData = styled.h1`\r\n  font-size: ${designSystem.text.fontSize[\"36\"]};\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  padding: ${designSystem.indent[\"48\"]};\r\n`;\r\n\r\nexport { NoData };\r\n","import React, { Dispatch, SetStateAction, useMemo } from \"react\";\r\n\r\nimport { TableCell } from \"pages/Home/components/Table/TableCell\";\r\nimport { TableRow } from \"pages/Home/components/Table/TableRow\";\r\nimport { Checkbox } from \"pages/Home/components/Checkbox\";\r\nimport { TableTextCell } from \"pages/Home/components/Table/TableTextCell\";\r\nimport { TableButtons } from \"pages/Home/containers/TableContainer/TableButtons\";\r\nimport {\r\n  TableLeftSideContainer,\r\n  TableRightSideContainer,\r\n  TableUnionContainer,\r\n  TableCheckboxContainer,\r\n  TableIdContainer,\r\n} from \"pages/Home/containers/TableContainer/styled\";\r\n\r\nimport { IDataModel } from \"stores/OperationsStore\";\r\nimport { NoData } from \"./styled\";\r\n\r\nexport type TableDataProps = {\r\n  data: IDataModel[];\r\n  checkedTransactions: IDataModel[];\r\n  setCheckedTransactions: Dispatch<SetStateAction<IDataModel[]>>;\r\n  selectTransaction: (transaction: IDataModel) => void;\r\n  setSidebarIsShown: Dispatch<SetStateAction<boolean>>;\r\n  setTransactionInfo: Dispatch<SetStateAction<IDataModel>>;\r\n};\r\n\r\nconst TableData: React.FC<TableDataProps> = ({\r\n  data,\r\n  checkedTransactions,\r\n  selectTransaction,\r\n  setSidebarIsShown,\r\n  setTransactionInfo,\r\n  setCheckedTransactions,\r\n}) => {\r\n  if (!data.length) {\r\n    return <NoData>Has no data on current filter and date settings</NoData>;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {data && (\r\n        <>\r\n          {useMemo(\r\n            () =>\r\n              data.map((transaction: IDataModel) => {\r\n                const checked = checkedTransactions.includes(transaction);\r\n                const onChange = () => {\r\n                  selectTransaction(transaction);\r\n                };\r\n\r\n                return (\r\n                  <TableRow key={transaction._id}>\r\n                    <TableUnionContainer>\r\n                      <TableLeftSideContainer>\r\n                        <TableCheckboxContainer>\r\n                          <TableCell>\r\n                            <Checkbox checked={checked} onChange={onChange} />\r\n                          </TableCell>\r\n                        </TableCheckboxContainer>\r\n                        <TableIdContainer>\r\n                          <TableCell>\r\n                            <TableTextCell>{transaction._id}</TableTextCell>\r\n                          </TableCell>\r\n                        </TableIdContainer>\r\n                        <TableTextCell>{transaction.date}</TableTextCell>\r\n                        <TableTextCell placeholder={+true} category={+true}>\r\n                          {transaction.category}\r\n                        </TableTextCell>\r\n                      </TableLeftSideContainer>\r\n                      <TableRightSideContainer>\r\n                        <TableTextCell>{transaction.type}</TableTextCell>\r\n                        <TableTextCell quantity={+true}>\r\n                          {transaction.quantity}\r\n                        </TableTextCell>\r\n                        <TableButtons\r\n                          setTransactionInfo={setTransactionInfo}\r\n                          setSidebarIsShown={setSidebarIsShown}\r\n                          transaction={transaction}\r\n                          checkedTransactions={checkedTransactions}\r\n                          setCheckedTransactions={setCheckedTransactions}\r\n                        />\r\n                      </TableRightSideContainer>\r\n                    </TableUnionContainer>\r\n                  </TableRow>\r\n                );\r\n              }),\r\n            [data],\r\n          )}\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport { TableData };\r\n","import React, { useContext } from \"react\";\r\nimport { observer } from \"mobx-react\";\r\n\r\nimport { TableBody } from \"pages/Home/components/Table/TableBody\";\r\nimport { Placeholder } from \"components/Placeholder\";\r\nimport {\r\n  TableData,\r\n  TableDataProps,\r\n} from \"pages/Home/containers/TableContainer/TableData\";\r\n\r\nimport { OperationsStoreContext } from \"stores/OperationsStore\";\r\n\r\nconst TableRender: React.FC<TableDataProps> = observer(({ ...props }) => {\r\n  const OperationsStore = useContext(OperationsStoreContext);\r\n\r\n  return (\r\n    <TableBody>\r\n      {OperationsStore.isLoading ? (\r\n        <Placeholder width={150} marginTop={100} />\r\n      ) : (\r\n        <TableData {...props} />\r\n      )}\r\n    </TableBody>\r\n  );\r\n});\r\n\r\nexport { TableRender };\r\n","import React from \"react\";\r\nimport styled, { createGlobalStyle, css } from \"styled-components\";\r\n\r\nimport { SideSheet } from \"evergreen-ui\";\r\n\r\nimport { designSystem } from \"constants/designSystem\";\r\n\r\ntype Props = {\r\n  pointerEvents: boolean;\r\n};\r\n\r\nconst SidebarStyleSetting = createGlobalStyle<Props>`\r\n  .css-xeqldi {\r\n    :before {\r\n      background-color: transparent;\r\n    }\r\n  }\r\n  .css-yrjgl1 {\r\n    background: ${designSystem.bgColor.white};\r\n    box-shadow: 0 0 15px ${designSystem.bgColor.light};\r\n  }\r\n  .css-4gyzyg {\r\n    fill: ${designSystem.color.normal};\r\n  }\r\n  .ub-bg-clr_white {\r\n    background-color: ${designSystem.bgColor.white};\r\n  }\r\n\r\n  ${({ pointerEvents }) =>\r\n    pointerEvents &&\r\n    css`\r\n      .css-xeqldi {\r\n        pointer-events: none;\r\n        :before {\r\n          background-color: transparent;\r\n        }\r\n        div {\r\n          pointer-events: all;\r\n        }\r\n      }\r\n    `}\r\n`;\r\n\r\nconst StyledSidebar = styled(({ className, ...restProps }) => (\r\n  <SideSheet className={className} {...restProps} />\r\n))``;\r\n\r\nexport { SidebarStyleSetting, StyledSidebar };\r\n","import React from \"react\";\r\n\r\nimport { SidebarStyleSetting, StyledSidebar } from \"./styled\";\r\n\r\nexport type SidebarPropsType = {\r\n  isShown: boolean;\r\n  onCloseComplete?: () => void;\r\n  preventBodyScrolling?: boolean;\r\n  shouldCloseOnOverlayClick?: boolean;\r\n  pointerEvents: boolean;\r\n};\r\n\r\nconst Sidebar: React.FC<SidebarPropsType> = ({\r\n  pointerEvents,\r\n  children,\r\n  ...restProps\r\n}) => {\r\n  return (\r\n    <StyledSidebar {...restProps}>\r\n      {children}\r\n      <SidebarStyleSetting pointerEvents={pointerEvents} />\r\n    </StyledSidebar>\r\n  );\r\n};\r\n\r\nexport { Sidebar };\r\n","import { designSystem } from \"constants/designSystem\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledEditButton = styled.button`\r\n  all: unset;\r\n  width: 24px;\r\n  height: 24px;\r\n  background-repeat: no-repeat;\r\n  cursor: pointer;\r\n  & svg {\r\n    & path {\r\n      fill: ${designSystem.color.normal};\r\n    }\r\n  }\r\n  &:hover {\r\n    & svg {\r\n      & path {\r\n        fill: ${designSystem.color.normal};\r\n        fill-opacity: 1;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport { StyledEditButton };\r\n","import React from \"react\";\r\n\r\nimport { StyledEditButton } from \"./styled\";\r\nimport { ReactComponent as EditIcon } from \"assets/icons/edit.svg\";\r\n\r\ntype Props = {} & React.ComponentPropsWithoutRef<\"button\">;\r\n\r\nconst EditButton: React.FC<Props> = props => {\r\n  return (\r\n    <StyledEditButton {...props}>\r\n      <EditIcon />\r\n    </StyledEditButton>\r\n  );\r\n};\r\n\r\nexport { EditButton };\r\n","import styled, { css } from \"styled-components\";\r\n\r\nimport { Combobox } from \"evergreen-ui\";\r\n\r\nimport { designSystem } from \"constants/designSystem\";\r\n\r\nimport { ComboboxRequiredType } from \"components/Combobox/\";\r\n\r\nconst StyledCombobox = styled(Combobox)<ComboboxRequiredType>`\r\n  ${({ required }) =>\r\n    required &&\r\n    css`\r\n      box-shadow: 0 0 5px red;\r\n      border-radius: ${designSystem.borderRadius[\"4\"]};\r\n    `}\r\n`;\r\n\r\nexport { StyledCombobox };\r\n","import React from \"react\";\r\n\r\nimport { StyledCombobox } from \"./styled\";\r\n\r\nimport { ComboboxProps } from \"evergreen-ui\";\r\n\r\nexport type ComboboxRequiredType = {\r\n  required?: boolean;\r\n};\r\n\r\ntype Props = {} & ComboboxProps & ComboboxRequiredType;\r\n\r\nconst Combobox: React.FC<Props> = props => {\r\n  return <StyledCombobox {...props} />;\r\n};\r\n\r\nexport { Combobox };\r\n","import React from \"react\";\r\n\r\nimport {\r\n  SegmentedControl as SegmentedControlUI,\r\n  SegmentedControlProps,\r\n} from \"evergreen-ui\";\r\n\r\nconst SegmentedControl: React.FC<SegmentedControlProps> = props => {\r\n  return <SegmentedControlUI {...props} />;\r\n};\r\n\r\nexport { SegmentedControl };\r\n","import React from \"react\";\r\nimport { Label as LabelUI } from \"evergreen-ui\";\r\nimport { designSystem } from \"constants/designSystem\";\r\n\r\nconst Label: React.FC = ({ children }) => {\r\n  return (\r\n    <LabelUI style={{ color: `${designSystem.color.nightBlue}` }}>\r\n      {children}\r\n    </LabelUI>\r\n  );\r\n};\r\n\r\nexport { Label };\r\n","import React from \"react\";\r\nimport { Button as ButtonUI, ButtonProps } from \"evergreen-ui\";\r\nimport { designSystem } from \"constants/designSystem\";\r\n\r\nconst Button = (props: ButtonProps) => {\r\n  const { children, ...restProps } = props;\r\n  return (\r\n    <ButtonUI\r\n      style={{\r\n        background: designSystem.bgColor.white,\r\n        color: designSystem.color.nightBlue,\r\n      }}\r\n      {...restProps}\r\n    >\r\n      {children}\r\n    </ButtonUI>\r\n  );\r\n};\r\n\r\nexport { Button };\r\n","import React from \"react\";\r\n\r\nimport {\r\n  TextInput as InputUI,\r\n  TextInputProps as InputProps,\r\n} from \"evergreen-ui\";\r\n\r\nimport { designSystem } from \"constants/designSystem\";\r\n\r\nconst Input: React.FC<InputProps> = React.forwardRef((props, ref) => {\r\n  return (\r\n    <InputUI\r\n      style={{\r\n        background: designSystem.bgColor.white,\r\n        color: designSystem.color.nightBlue,\r\n      }}\r\n      ref={ref}\r\n      {...props}\r\n    />\r\n  );\r\n});\r\n\r\nexport { Input };\r\n","export type transactionType = \"Income\" | \"Expenses\";\r\n\r\nconst transactionTypes = [\r\n  { label: \"Income\", value: \"Income\" },\r\n  { label: \"Expenses\", value: \"Expenses\" },\r\n];\r\n\r\nexport { transactionTypes };\r\n","import React, { useContext } from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport { Controller, SubmitHandler, useForm } from \"react-hook-form\";\r\n\r\nimport { Dialog } from \"pages/Home/components/Dialog\";\r\nimport { Pane } from \"components/Pane\";\r\nimport { Combobox } from \"components/Combobox\";\r\nimport { SegmentedControl } from \"components/SegmentedControl\";\r\nimport { Label } from \"components/Label\";\r\nimport { Button } from \"components/Button\";\r\nimport { Input } from \"components/Input\";\r\nimport {\r\n  DialogContainer,\r\n  DialogDuoContainer,\r\n  DialogEndLineContainer,\r\n  DialogSoloContainer,\r\n  GlobalStyleTransaction,\r\n} from \"pages/Home/containers/AddTransaction/AddTransactionForm/styled\";\r\n\r\nimport { designSystem } from \"constants/designSystem\";\r\nimport { transactionTypes } from \"constants/transactionTypes\";\r\n\r\nimport { IDataModel, OperationsStoreContext } from \"stores/OperationsStore\";\r\n\r\nimport { DialogProps } from \"evergreen-ui\";\r\n\r\ntype Props = {\r\n  onSubmit: SubmitHandler<any>;\r\n  transactionInfo: IDataModel;\r\n} & DialogProps;\r\n\r\nconst EditTransactionForm: React.FC<Props> = observer(\r\n  ({ isShown, title, onCloseComplete, transactionInfo, onSubmit }) => {\r\n    const OperationsStore = useContext(OperationsStoreContext);\r\n\r\n    const { control, register, handleSubmit } = useForm({\r\n      defaultValues: {\r\n        _userId: transactionInfo._userId,\r\n        _id: transactionInfo._id,\r\n        category: transactionInfo.category,\r\n        date: transactionInfo.date,\r\n        description: transactionInfo.description,\r\n        quantity: transactionInfo.quantity,\r\n        type: transactionInfo.type,\r\n      },\r\n    });\r\n\r\n    return (\r\n      <Dialog\r\n        isShown={isShown}\r\n        title={title}\r\n        onCloseComplete={onCloseComplete}\r\n        hasFooter={false}\r\n      >\r\n        <form onSubmit={handleSubmit(onSubmit)}>\r\n          <DialogContainer>\r\n            <DialogDuoContainer>\r\n              <span>Id: {transactionInfo._id}</span>\r\n              <span>Date: {transactionInfo.date}</span>\r\n            </DialogDuoContainer>\r\n            <GlobalStyleTransaction />\r\n            <DialogSoloContainer>\r\n              <Controller\r\n                control={control}\r\n                name=\"category\"\r\n                rules={{ required: true }}\r\n                render={({ field }) => (\r\n                  <Combobox\r\n                    openOnFocus\r\n                    items={OperationsStore.categories\r\n                      .map(category => category)\r\n                      .filter(\r\n                        (value, index, self) => self.indexOf(value) === index,\r\n                      )}\r\n                    placeholder=\"Choose category...\"\r\n                    initialSelectedItem={transactionInfo.category}\r\n                    defaultValue={transactionInfo.category}\r\n                    onChange={value => field.onChange(value)}\r\n                  />\r\n                )}\r\n              />\r\n            </DialogSoloContainer>\r\n\r\n            <DialogSoloContainer>\r\n              <Input\r\n                {...register(\"description\", {\r\n                  value: \"\",\r\n                })}\r\n                type=\"string\"\r\n                color={designSystem.color.normal}\r\n                placeholder=\"Description\"\r\n                defaultValue={transactionInfo.description}\r\n              />\r\n            </DialogSoloContainer>\r\n\r\n            <DialogDuoContainer>\r\n              <Controller\r\n                control={control}\r\n                name=\"type\"\r\n                defaultValue={transactionInfo.type}\r\n                render={({ field }) => (\r\n                  <SegmentedControl\r\n                    defaultValue={transactionInfo.type}\r\n                    options={transactionTypes}\r\n                    onChange={value => field.onChange(value)}\r\n                  />\r\n                )}\r\n              />\r\n              <Pane>\r\n                <Label>\r\n                  Quantity:\r\n                  <Input\r\n                    {...register(\"quantity\", {\r\n                      required: true,\r\n                      value: transactionInfo.quantity,\r\n                    })}\r\n                    type=\"number\"\r\n                    min={1}\r\n                    width={designSystem.indent[86]}\r\n                    marginLeft={designSystem.indent[8]}\r\n                    defaultValue={transactionInfo.quantity}\r\n                    color={designSystem.color.normal}\r\n                  />\r\n                </Label>\r\n              </Pane>\r\n            </DialogDuoContainer>\r\n\r\n            <DialogEndLineContainer>\r\n              <Button type=\"submit\">Confirm</Button>\r\n            </DialogEndLineContainer>\r\n          </DialogContainer>\r\n        </form>\r\n      </Dialog>\r\n    );\r\n  },\r\n);\r\nexport { EditTransactionForm };\r\n","import React, { useContext, useState } from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport { SubmitHandler } from \"react-hook-form\";\r\n\r\nimport { EditButton } from \"components/Button/EditButton\";\r\nimport { EditTransactionForm } from \"pages/Home/containers/EditTransaction/EditTransactionForm\";\r\n\r\nimport { OperationsStoreContext } from \"stores/OperationsStore\";\r\n\r\nimport { transactionsAPI } from \"services/ApiService\";\r\nimport { EditTransactionType } from \"services/ApiService/types/transactionTypes\";\r\nimport { SidebarEditTransactionPropsType } from \"pages/Home/containers/SidebarWithTransaction/SidebarButtons\";\r\n\r\nconst EditTransaction: React.FC<SidebarEditTransactionPropsType> = observer(\r\n  ({ transaction, setIsDataChanged }) => {\r\n    const OperationsStore = useContext(OperationsStoreContext);\r\n\r\n    const [isEditTransactionShown, setIsEditTransactionShown] = useState(false);\r\n\r\n    const onSubmitEditTransaction: SubmitHandler<EditTransactionType> = ({\r\n      _userId,\r\n      _id,\r\n      date,\r\n      description,\r\n      category,\r\n      quantity,\r\n      type,\r\n    }) => {\r\n      transactionsAPI\r\n        .editTransaction({\r\n          _userId,\r\n          _id,\r\n          date,\r\n          description,\r\n          category,\r\n          quantity,\r\n          type,\r\n        })\r\n        .then(data => {\r\n          OperationsStore.editTransaction(transaction._id, data);\r\n          setIsDataChanged(prevState => !prevState);\r\n          setIsEditTransactionShown(!!data.__v);\r\n        });\r\n    };\r\n\r\n    return (\r\n      <>\r\n        <EditButton onClick={() => setIsEditTransactionShown(true)} />\r\n        <EditTransactionForm\r\n          title=\"Edit Transaction\"\r\n          isShown={isEditTransactionShown}\r\n          onCloseComplete={() => setIsEditTransactionShown(false)}\r\n          transactionInfo={transaction}\r\n          onSubmit={onSubmitEditTransaction}\r\n        />\r\n      </>\r\n    );\r\n  },\r\n);\r\n\r\nexport { EditTransaction };\r\n","import styled from \"styled-components\";\r\n\r\nimport { designSystem } from \"constants/designSystem\";\r\n\r\nconst SidebarButtonsContainer = styled.div`\r\n  width: 150px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  margin: ${designSystem.indent[\"42\"]} auto;\r\n  button > svg {\r\n    width: ${designSystem.size[\"42\"]}px;\r\n    height: ${designSystem.size[\"42\"]}px;\r\n  }\r\n`;\r\n\r\nexport { SidebarButtonsContainer };\r\n","import React, { Dispatch, SetStateAction } from \"react\";\r\n\r\nimport { DeleteTransaction } from \"pages/Home/containers/DeleteTransaction\";\r\nimport { EditTransaction } from \"pages/Home/containers/EditTransaction\";\r\nimport { SidebarButtonsContainer } from \"./styled\";\r\n\r\nimport { IDataModel } from \"stores/OperationsStore\";\r\n\r\nexport type SidebarEditTransactionPropsType = {\r\n  transaction: IDataModel;\r\n  setIsDataChanged: Dispatch<SetStateAction<boolean>>;\r\n};\r\n\r\nexport type SidebarDeleteTransactionPropsType = {\r\n  checkedTransactions: IDataModel[];\r\n  setCheckedTransactions: Dispatch<SetStateAction<IDataModel[]>>;\r\n};\r\n\r\ntype Props = {\r\n  setSidebarIsShown: Dispatch<SetStateAction<boolean>>;\r\n} & SidebarEditTransactionPropsType &\r\n  SidebarDeleteTransactionPropsType;\r\n\r\nconst SidebarButtons: React.FC<Props> = ({\r\n  transaction,\r\n  setIsDataChanged,\r\n  setSidebarIsShown,\r\n  checkedTransactions,\r\n  setCheckedTransactions,\r\n}) => {\r\n  return (\r\n    <SidebarButtonsContainer>\r\n      <EditTransaction\r\n        setIsDataChanged={setIsDataChanged}\r\n        transaction={transaction}\r\n      />\r\n      <DeleteTransaction\r\n        transaction={transaction}\r\n        setSidebarIsShown={setSidebarIsShown}\r\n        checkedTransactions={checkedTransactions}\r\n        setCheckedTransactions={setCheckedTransactions}\r\n      />\r\n    </SidebarButtonsContainer>\r\n  );\r\n};\r\n\r\nexport { SidebarButtons };\r\n","import styled from \"styled-components\";\r\n\r\nimport { designSystem } from \"constants/designSystem\";\r\n\r\nconst SidebarCard = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 1em;\r\n  padding: ${designSystem.indent[\"32\"]};\r\n  font-size: ${designSystem.text.fontSize[\"24\"]};\r\n`;\r\n\r\nexport { SidebarCard };\r\n","import React, { Dispatch, SetStateAction } from \"react\";\r\n\r\nimport { Sidebar, SidebarPropsType } from \"pages/Home/components/Sidebar\";\r\nimport {\r\n  SidebarButtons,\r\n  SidebarDeleteTransactionPropsType,\r\n} from \"pages/Home/containers/SidebarWithTransaction/SidebarButtons\";\r\nimport { SidebarCard } from \"./styled\";\r\n\r\nimport { IDataModel } from \"stores/OperationsStore\";\r\n\r\ntype Props = {\r\n  transactionInfo: IDataModel;\r\n  setIsDataChanged: Dispatch<SetStateAction<boolean>>;\r\n  setSidebarIsShown: Dispatch<SetStateAction<boolean>>;\r\n} & SidebarPropsType &\r\n  SidebarDeleteTransactionPropsType;\r\n\r\nconst SidebarWithTransaction: React.FC<Props> = ({\r\n  isShown,\r\n  preventBodyScrolling,\r\n  onCloseComplete,\r\n  transactionInfo,\r\n  pointerEvents,\r\n  setIsDataChanged,\r\n  setSidebarIsShown,\r\n  checkedTransactions,\r\n  setCheckedTransactions,\r\n}) => {\r\n  const cardFields = [\r\n    { title: \"ID\", data: transactionInfo._id },\r\n    { title: \"Date\", data: transactionInfo.date },\r\n    { title: \"Category\", data: transactionInfo.category },\r\n    { title: \"Type\", data: transactionInfo.type },\r\n    { title: \"Quantity\", data: transactionInfo.quantity },\r\n    { title: \"Description\", data: transactionInfo.description },\r\n  ];\r\n\r\n  return (\r\n    <Sidebar\r\n      isShown={isShown}\r\n      preventBodyScrolling={preventBodyScrolling}\r\n      onCloseComplete={onCloseComplete}\r\n      pointerEvents={pointerEvents}\r\n    >\r\n      <SidebarCard>\r\n        {cardFields.map(field => (\r\n          <p key={field.title}>\r\n            {field.title} - {field.data}\r\n          </p>\r\n        ))}\r\n        <SidebarButtons\r\n          checkedTransactions={checkedTransactions}\r\n          setCheckedTransactions={setCheckedTransactions}\r\n          setSidebarIsShown={setSidebarIsShown}\r\n          setIsDataChanged={setIsDataChanged}\r\n          transaction={transactionInfo}\r\n        />\r\n      </SidebarCard>\r\n    </Sidebar>\r\n  );\r\n};\r\n\r\nexport { SidebarWithTransaction };\r\n","import styled from \"styled-components\";\r\n\r\nimport { designSystem } from \"constants/designSystem\";\r\n\r\nconst TransactionElementStyle = styled.span`\r\n  font-size: ${designSystem.text.fontSize[\"24\"]};\r\n  font-weight: ${designSystem.text.weight.bold};\r\n  color: ${designSystem.text.color.normal};\r\n  padding: ${designSystem.indent[\"14\"]};\r\n  border-radius: ${designSystem.borderRadius[\"16\"]};\r\n  border: 2px solid ${designSystem.color.cornflowerblue};\r\n  cursor: pointer;\r\n`;\r\n\r\nexport { TransactionElementStyle };\r\n","import React, { Dispatch, SetStateAction } from \"react\";\r\n\r\nimport { TransactionElementStyle } from \"./styled\";\r\n\r\nimport { IDataModel } from \"stores/OperationsStore\";\r\n\r\ntype Props = {\r\n  transaction: IDataModel;\r\n  checkedTransactions: IDataModel[];\r\n  setCheckedTransactions: Dispatch<SetStateAction<IDataModel[]>>;\r\n};\r\n\r\nconst TransactionElement: React.FC<Props> = ({\r\n  children,\r\n  checkedTransactions,\r\n  setCheckedTransactions,\r\n  transaction,\r\n}) => {\r\n  const onClickHandler = () => {\r\n    const idx = checkedTransactions.findIndex(el => el._id === transaction._id);\r\n\r\n    setCheckedTransactions([\r\n      ...checkedTransactions.slice(0, idx),\r\n      ...checkedTransactions.slice(idx + 1),\r\n    ]);\r\n  };\r\n\r\n  return (\r\n    <TransactionElementStyle onClick={onClickHandler}>\r\n      {children}\r\n    </TransactionElementStyle>\r\n  );\r\n};\r\n\r\nexport { TransactionElement };\r\n","import styled from \"styled-components\";\r\n\r\nimport { designSystem } from \"constants/designSystem\";\r\n\r\nconst SidebarHeader = styled.div`\r\n  h2 {\r\n    font-size: ${designSystem.text.fontSize[\"36\"]};\r\n    text-align: center;\r\n    padding: ${designSystem.indent[\"28\"]};\r\n  }\r\n`;\r\n\r\nconst SidebarContainer = styled.div`\r\n  padding: ${designSystem.indent[\"32\"]};\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: center;\r\n  align-items: center;\r\n  gap: ${designSystem.indent[\"24\"]};\r\n`;\r\n\r\nconst ButtonContainer = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  margin-top: ${designSystem.indent[\"42\"]};\r\n  button > svg {\r\n    width: ${designSystem.size[\"42\"]}px;\r\n    height: ${designSystem.size[\"42\"]}px;\r\n  }\r\n`;\r\n\r\nexport { SidebarHeader, SidebarContainer, ButtonContainer };\r\n","import React, { Dispatch, SetStateAction } from \"react\";\r\n\r\nimport { Sidebar, SidebarPropsType } from \"pages/Home/components/Sidebar\";\r\nimport { TransactionElement } from \"pages/Home/containers/SidebarWithCheckedTransactions/TransactionElement\";\r\nimport { DeleteTransaction } from \"pages/Home/containers/DeleteTransaction\";\r\nimport { ButtonContainer, SidebarContainer, SidebarHeader } from \"./styled\";\r\n\r\nimport { IDataModel } from \"stores/OperationsStore\";\r\n\r\ntype Props = {\r\n  checkedTransactions: IDataModel[];\r\n  setCheckedTransactions: Dispatch<SetStateAction<IDataModel[]>>;\r\n  setIsDataChanged: Dispatch<SetStateAction<boolean>>;\r\n  setSidebarWithCheckedTransactionsIsShown: Dispatch<SetStateAction<boolean>>;\r\n} & SidebarPropsType;\r\n\r\nconst SidebarWithCheckedTransactions: React.FC<Props> = ({\r\n  isShown,\r\n  onCloseComplete,\r\n  checkedTransactions,\r\n  setCheckedTransactions,\r\n  setIsDataChanged,\r\n  setSidebarWithCheckedTransactionsIsShown,\r\n}) => {\r\n  return (\r\n    <Sidebar\r\n      isShown={isShown}\r\n      onCloseComplete={onCloseComplete}\r\n      shouldCloseOnOverlayClick={false}\r\n      pointerEvents={true}\r\n    >\r\n      <SidebarHeader>\r\n        <h2>Checked Transactions ID&apos;s</h2>\r\n        <SidebarContainer>\r\n          {checkedTransactions.map(transaction => {\r\n            return (\r\n              <TransactionElement\r\n                transaction={transaction}\r\n                checkedTransactions={checkedTransactions}\r\n                setCheckedTransactions={setCheckedTransactions}\r\n                key={transaction._id}\r\n              >\r\n                {transaction._id}\r\n              </TransactionElement>\r\n            );\r\n          })}\r\n        </SidebarContainer>\r\n        <ButtonContainer>\r\n          <DeleteTransaction\r\n            severalTransactions={checkedTransactions.map(\r\n              transaction => transaction,\r\n            )}\r\n            setIsDataChanged={setIsDataChanged}\r\n            setSidebarWithCheckedTransactionsIsShown={\r\n              setSidebarWithCheckedTransactionsIsShown\r\n            }\r\n            checkedTransactions={checkedTransactions}\r\n            setCheckedTransactions={setCheckedTransactions}\r\n          />\r\n        </ButtonContainer>\r\n      </SidebarHeader>\r\n    </Sidebar>\r\n  );\r\n};\r\n\r\nexport { SidebarWithCheckedTransactions };\r\n","import {\r\n  eachDayOfInterval,\r\n  format,\r\n  startOfMonth,\r\n  lastDayOfMonth,\r\n} from \"date-fns\";\r\n\r\nexport const getDateRange = (from: Date, to: Date) => {\r\n  return eachDayOfInterval({\r\n    start: from,\r\n    end: to,\r\n  }).map(i => format(i, \"dd.MM.yy\"));\r\n};\r\n\r\nexport const getFirstAndLastDayMonth = () => {\r\n  return {\r\n    firstDay: startOfMonth(new Date()),\r\n    lastDay: lastDayOfMonth(new Date()),\r\n  };\r\n};\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport { parse } from \"date-fns\";\r\n\r\nimport { Table } from \"pages/Home/components/Table\";\r\nimport { Pagination } from \"pages/Home/components/Pagination\";\r\nimport { TablePreHeader } from \"pages/Home/containers/TableContainer/TablePreHeader\";\r\nimport { TableHeader } from \"pages/Home/containers/TableContainer/TableHeader\";\r\nimport { TableRender } from \"pages/Home/containers/TableContainer/TableRender\";\r\nimport { SidebarWithTransaction } from \"pages/Home/containers/SidebarWithTransaction\";\r\nimport { SidebarWithCheckedTransactions } from \"pages/Home/containers/SidebarWithCheckedTransactions\";\r\nimport { PaginationContainer, TableBodyContainer } from \"./styled\";\r\n\r\nimport { IDataModel, OperationsStoreContext } from \"stores/OperationsStore\";\r\nimport { getFirstAndLastDayMonth } from \"utils/getDateRange\";\r\n\r\nconst TableContainer = observer(() => {\r\n  const OperationsStore = useContext(OperationsStoreContext);\r\n\r\n  // Data\r\n  const [data, setData] = useState<IDataModel[]>([]);\r\n  const [isDataChanged, setIsDataChanged] = useState<boolean>(false);\r\n  // Sorting\r\n  const [directionDateSort, setDirectionDateSort] = useState<boolean>(true);\r\n  const [directionQuantitySort, setDirectionQuantitySort] = useState<boolean>(\r\n    true,\r\n  );\r\n  // Filters\r\n  const [dateFrom, setDateFrom] = useState<Date>(\r\n    getFirstAndLastDayMonth().firstDay,\r\n  );\r\n  const [dateTo, setDateTo] = useState<Date>(getFirstAndLastDayMonth().lastDay);\r\n  const [typeFilters] = useState<string[]>([\"Income\", \"Expenses\"]);\r\n  const [checkedTypeFilters, setCheckedTypeFilters] = useState<string[]>([]);\r\n  // Pagination\r\n  const [currentPage, setCurrentPage] = useState<number>(1);\r\n  const [transactionsPerPage] = useState<number>(10);\r\n  const [totalPages, setTotalPages] = useState<number>(1);\r\n  // Checkboxes\r\n  const [checkedTransactions, setCheckedTransactions] = useState<IDataModel[]>(\r\n    [],\r\n  );\r\n  const [globalCheckbox, setGlobalCheckbox] = useState<boolean>(false);\r\n  // Sidebar with transaction info\r\n  const [sidebarIsShown, setSidebarIsShown] = useState<boolean>(false);\r\n  const [transactionInfo, setTransactionInfo] = useState<IDataModel>({\r\n    _userId: \"\",\r\n    _id: \"\",\r\n    date: \"\",\r\n    type: \"\",\r\n    category: \"\",\r\n    quantity: 0,\r\n    description: \"\",\r\n  });\r\n  // Sidebar with checked transactions id\r\n  const [\r\n    sidebarWithCheckedTransactionsIsShown,\r\n    setSidebarWithCheckedTransactionsIsShown,\r\n  ] = useState(false);\r\n\r\n  const indexOfLastTransaction = currentPage * transactionsPerPage;\r\n  const indexOfFirstTransaction = indexOfLastTransaction - transactionsPerPage;\r\n\r\n  const setPaginationPage = (pageNumber: number) => {\r\n    setCurrentPage(pageNumber);\r\n    setCheckedTransactions([]);\r\n    setGlobalCheckbox(false);\r\n  };\r\n\r\n  const slicedTransactions = (data: IDataModel[]) => {\r\n    return data.slice(indexOfFirstTransaction, indexOfLastTransaction);\r\n  };\r\n\r\n  const parseStringToDate = (date: string): Date => {\r\n    return parse(date, \"dd/MM/yyyy\", new Date());\r\n  };\r\n\r\n  const isTypeFilterChecked = checkedTypeFilters.length === 1;\r\n\r\n  const filteredData = () => {\r\n    const dateFilteredData = OperationsStore.data.filter(data => {\r\n      return (\r\n        parseStringToDate(data.date).getTime() >= dateFrom.getTime() &&\r\n        parseStringToDate(data.date).getTime() <= dateTo.getTime()\r\n      );\r\n    });\r\n\r\n    const filteredDataWithoutCategory = OperationsStore.data\r\n      .filter(data => {\r\n        if (isTypeFilterChecked) {\r\n          return data.type === checkedTypeFilters[0];\r\n        }\r\n      })\r\n      .filter(data => {\r\n        return (\r\n          parseStringToDate(data.date).getTime() >= dateFrom!.getTime() &&\r\n          parseStringToDate(data.date).getTime() <= dateTo!.getTime()\r\n        );\r\n      });\r\n\r\n    if (!isTypeFilterChecked) {\r\n      // dateFilteredData\r\n      if (!OperationsStore.selectedCategories.length) {\r\n        return dateFilteredData;\r\n      } else {\r\n        // dateFilteredData with category filters\r\n        return dateFilteredData.filter(\r\n          transaction =>\r\n            OperationsStore.selectedCategories.filter(\r\n              category => category === transaction.category,\r\n            ).length !== 0,\r\n        );\r\n      }\r\n    }\r\n\r\n    if (!OperationsStore.selectedCategories.length) {\r\n      return filteredDataWithoutCategory;\r\n    } else {\r\n      return filteredDataWithoutCategory.filter(\r\n        // filtered data with category filters\r\n        transaction =>\r\n          OperationsStore.selectedCategories.filter(\r\n            category => category === transaction.category,\r\n          ).length !== 0,\r\n      );\r\n    }\r\n  };\r\n\r\n  const selectTransaction = (transaction: IDataModel) => {\r\n    const checkedData = checkedTransactions.includes(transaction);\r\n    if (checkedData) {\r\n      const idx = checkedTransactions.findIndex(el => el === transaction);\r\n      setCheckedTransactions([\r\n        ...checkedTransactions.slice(0, idx),\r\n        ...checkedTransactions.slice(idx + 1),\r\n      ]);\r\n      setGlobalCheckbox(false);\r\n    } else {\r\n      setCheckedTransactions([...checkedTransactions, transaction]);\r\n    }\r\n  };\r\n\r\n  const selectAllTransactions = () => {\r\n    const checkedAllData =\r\n      checkedTransactions.length === slicedTransactions(data).length;\r\n\r\n    if (checkedAllData) {\r\n      setCheckedTransactions([]);\r\n      setGlobalCheckbox(false);\r\n    } else {\r\n      let transactionsToCheck: IDataModel[] = [];\r\n      slicedTransactions(data).map(transaction => {\r\n        if (!checkedTransactions.includes(transaction)) {\r\n          transactionsToCheck.push(transaction);\r\n        }\r\n      });\r\n      setCheckedTransactions([...checkedTransactions, ...transactionsToCheck]);\r\n      setGlobalCheckbox(true);\r\n    }\r\n  };\r\n\r\n  const selectTypeFilters = (id: string) => {\r\n    const checkedCurrentFilter = checkedTypeFilters.includes(id);\r\n    // clear checkboxes\r\n    setCheckedTransactions([]);\r\n    setGlobalCheckbox(false);\r\n\r\n    if (checkedCurrentFilter) {\r\n      const idx = checkedTypeFilters.findIndex((el: string) => el === id);\r\n      setCheckedTypeFilters([\r\n        ...checkedTypeFilters.slice(0, idx),\r\n        ...checkedTypeFilters.slice(idx + 1),\r\n      ]);\r\n    } else {\r\n      setCheckedTypeFilters([...checkedTypeFilters, id]);\r\n    }\r\n  };\r\n\r\n  const dateSorting = () => {\r\n    if (directionDateSort) {\r\n      setData(\r\n        [...data].sort((a: IDataModel, b: IDataModel) => {\r\n          return (\r\n            parse(a.date, \"dd/MM/yyyy\", new Date()).getTime() -\r\n            parse(b.date, \"dd/MM/yyyy\", new Date()).getTime()\r\n          );\r\n        }),\r\n      );\r\n      setDirectionDateSort(false);\r\n    } else {\r\n      setData(\r\n        [...data].sort((a: IDataModel, b: IDataModel) => {\r\n          return (\r\n            parse(b.date, \"dd/MM/yyyy\", new Date()).getTime() -\r\n            parse(a.date, \"dd/MM/yyyy\", new Date()).getTime()\r\n          );\r\n        }),\r\n      );\r\n      setDirectionDateSort(true);\r\n    }\r\n    setCheckedTransactions([]);\r\n  };\r\n\r\n  const quantitySorting = () => {\r\n    if (directionQuantitySort) {\r\n      setData(\r\n        [...data].sort((a: IDataModel, b: IDataModel) => {\r\n          return a.quantity - b.quantity;\r\n        }),\r\n      );\r\n      setDirectionQuantitySort(false);\r\n    } else {\r\n      setData(\r\n        [...data].sort((a: IDataModel, b: IDataModel) => {\r\n          return b.quantity - a.quantity;\r\n        }),\r\n      );\r\n      setDirectionQuantitySort(true);\r\n    }\r\n    setCheckedTransactions([]);\r\n  };\r\n\r\n  // Set Data\r\n  useEffect(() => {\r\n    setData(filteredData());\r\n  }, [filteredData().length, isDataChanged]);\r\n\r\n  // Go to first page if has no transactions on current page\r\n  useEffect(() => {\r\n    if (!slicedTransactions(data).length) {\r\n      setCurrentPage(1);\r\n    }\r\n  }, [data.length]);\r\n\r\n  // Set total pages\r\n  useEffect(() => {\r\n    setTotalPages(Math.ceil(data.length / transactionsPerPage));\r\n  }, [data.length]);\r\n\r\n  // Show sidebar with transactions id's if any checkbox is checked\r\n  useEffect(() => {\r\n    checkedTransactions.length\r\n      ? setSidebarWithCheckedTransactionsIsShown(true)\r\n      : setSidebarWithCheckedTransactionsIsShown(false);\r\n  }, [checkedTransactions.length]);\r\n\r\n  // Observe global checkbox to another ones\r\n  useEffect(() => {\r\n    checkedTransactions.length &&\r\n    checkedTransactions.length === slicedTransactions(data).length\r\n      ? setGlobalCheckbox(true)\r\n      : setGlobalCheckbox(false);\r\n  }, [checkedTransactions.length, data.length]);\r\n\r\n  return (\r\n    <Table>\r\n      <TablePreHeader\r\n        dateFrom={dateFrom}\r\n        dateTo={dateTo}\r\n        setDateFrom={setDateFrom}\r\n        setDateTo={setDateTo}\r\n        setCheckedTransactions={setCheckedTransactions}\r\n        setGlobalCheckbox={setGlobalCheckbox}\r\n        typeFilters={typeFilters}\r\n        selectTypeFilters={selectTypeFilters}\r\n        checkedTypeFilters={checkedTypeFilters}\r\n      />\r\n      <TableHeader\r\n        globalCheckbox={globalCheckbox}\r\n        selectAllTransactions={selectAllTransactions}\r\n        dateSorting={dateSorting}\r\n        quantitySorting={quantitySorting}\r\n      />\r\n      <TableBodyContainer>\r\n        <TableRender\r\n          data={slicedTransactions(data)}\r\n          checkedTransactions={checkedTransactions}\r\n          selectTransaction={selectTransaction}\r\n          setSidebarIsShown={setSidebarIsShown}\r\n          setTransactionInfo={setTransactionInfo}\r\n          setCheckedTransactions={setCheckedTransactions}\r\n        />\r\n      </TableBodyContainer>\r\n      <PaginationContainer>\r\n        <Pagination\r\n          page={currentPage}\r\n          totalPages={totalPages}\r\n          onPageChange={setPaginationPage}\r\n        />\r\n      </PaginationContainer>\r\n      <SidebarWithTransaction\r\n        isShown={sidebarIsShown}\r\n        preventBodyScrolling\r\n        onCloseComplete={() => setSidebarIsShown(false)}\r\n        transactionInfo={transactionInfo}\r\n        pointerEvents={false}\r\n        setIsDataChanged={setIsDataChanged}\r\n        setSidebarIsShown={setSidebarIsShown}\r\n        checkedTransactions={checkedTransactions}\r\n        setCheckedTransactions={setCheckedTransactions}\r\n      />\r\n      <SidebarWithCheckedTransactions\r\n        isShown={sidebarWithCheckedTransactionsIsShown}\r\n        onCloseComplete={() => setSidebarWithCheckedTransactionsIsShown(false)}\r\n        pointerEvents={true}\r\n        checkedTransactions={checkedTransactions}\r\n        setCheckedTransactions={setCheckedTransactions}\r\n        setIsDataChanged={setIsDataChanged}\r\n        setSidebarWithCheckedTransactionsIsShown={\r\n          setSidebarWithCheckedTransactionsIsShown\r\n        }\r\n      />\r\n    </Table>\r\n  );\r\n});\r\n\r\nexport default TableContainer;\r\n","import React from \"react\";\r\n\r\nimport { OperationFiltersSection } from \"pages/Home/containers/OperationFiltersSection\";\r\nimport TableContainer from \"pages/Home/containers/TableContainer\";\r\n\r\nconst TableWithFilters = () => {\r\n  return (\r\n    <>\r\n      <OperationFiltersSection />\r\n      <TableContainer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport { TableWithFilters };\r\n","export default __webpack_public_path__ + \"static/media/plus.e123fb9a.svg\";","import styled from \"styled-components\";\r\nimport { IconButton } from \"evergreen-ui\";\r\n\r\nimport PlusIcon from \"assets/icons/plus.svg\";\r\n\r\nimport { designSystem } from \"constants/designSystem\";\r\n\r\nconst StyledPlus = styled(IconButton)`\r\n  position: fixed;\r\n  z-index: 2;\r\n  bottom: 64px;\r\n  right: 64px;\r\n\r\n  width: ${designSystem.indent[64]};\r\n  height: ${designSystem.indent[64]};\r\n  border-radius: 50%;\r\n  background-color: ${designSystem.bgColor.base};\r\n  background-image: url(${PlusIcon});\r\n  background-position: center;\r\n  background-repeat: no-repeat;\r\n\r\n  &:not([disabled]):hover {\r\n    background-color: ${designSystem.bgColor.base};\r\n  }\r\n`;\r\n\r\nexport { StyledPlus };\r\n","import React from \"react\";\r\n\r\nimport { StyledPlus } from \"./styled\";\r\n\r\ntype Props = {\r\n  onClick: () => void;\r\n};\r\n\r\nconst Plus: React.FC<Props> = ({ ...props }) => {\r\n  return <StyledPlus {...props} />;\r\n};\r\n\r\nexport { Plus };\r\n","import React, { useContext, useState } from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport { Controller, SubmitHandler, useForm } from \"react-hook-form\";\r\nimport { format } from \"date-fns\";\r\n\r\nimport { Datepicker } from \"components/DatePicker\";\r\nimport { Button } from \"components/Button\";\r\nimport { Dialog } from \"pages/Home/components/Dialog\";\r\nimport { Pane } from \"components/Pane\";\r\nimport { Combobox } from \"components/Combobox\";\r\nimport { SegmentedControl } from \"components/SegmentedControl\";\r\nimport { Label } from \"components/Label\";\r\nimport { Input } from \"components/Input\";\r\nimport {\r\n  DialogContainer,\r\n  DialogSoloContainer,\r\n  GlobalStyleTransaction,\r\n  DialogDuoContainer,\r\n  StyledError,\r\n  DialogEndLineContainer,\r\n} from \"./styled\";\r\n\r\nimport { designSystem } from \"constants/designSystem\";\r\nimport { transactionTypes } from \"constants/transactionTypes\";\r\n\r\nimport { OperationsStoreContext } from \"stores/OperationsStore\";\r\n\r\nimport { DialogProps } from \"evergreen-ui\";\r\nimport Translate from \"i18n/messages/translate\";\r\n\r\ntype Props = {\r\n  onSubmit: SubmitHandler<any>;\r\n} & DialogProps;\r\n\r\nconst AddTransactionForm: React.FC<Props> = observer(\r\n  ({ isShown, title, onCloseComplete, onSubmit }) => {\r\n    const OperationsStore = useContext(OperationsStoreContext);\r\n\r\n    const [selectedDate, setSelectedDate] = useState<Date>(new Date());\r\n\r\n    const {\r\n      control,\r\n      register,\r\n      handleSubmit,\r\n      reset,\r\n      formState: { errors },\r\n    } = useForm();\r\n\r\n    return (\r\n      <Dialog\r\n        isShown={isShown}\r\n        title={title}\r\n        onCloseComplete={onCloseComplete}\r\n        hasFooter={false}\r\n        shouldCloseOnOverlayClick={false}\r\n        onOpenComplete={() => {\r\n          reset({\r\n            quantity: null,\r\n            category: \"\",\r\n            description: \"\",\r\n            type: \"Income\",\r\n            date: format(selectedDate, \"dd/MM/yyyy\"),\r\n          });\r\n          setSelectedDate(new Date());\r\n        }}\r\n      >\r\n        <GlobalStyleTransaction />\r\n        <form onSubmit={handleSubmit(onSubmit)}>\r\n          <DialogContainer>\r\n            <DialogSoloContainer>\r\n              <Controller\r\n                control={control}\r\n                name=\"date\"\r\n                rules={{ required: true }}\r\n                render={({ field }) => (\r\n                  <Datepicker\r\n                    onChange={date => {\r\n                      setSelectedDate(date);\r\n                      field.onChange(format(date, \"dd/MM/yyyy\"));\r\n                    }}\r\n                    selected={selectedDate}\r\n                    dateTo={new Date()}\r\n                  />\r\n                )}\r\n              />\r\n              {errors?.date?.type === \"required\" && (\r\n                <StyledError>{Translate(\"dateRequired\")}</StyledError>\r\n              )}\r\n            </DialogSoloContainer>\r\n\r\n            <DialogSoloContainer>\r\n              <Controller\r\n                control={control}\r\n                name=\"category\"\r\n                rules={{ required: true }}\r\n                render={({ field }) => (\r\n                  <Combobox\r\n                    openOnFocus\r\n                    items={OperationsStore.categories\r\n                      .map(category => category)\r\n                      .filter(\r\n                        (value, index, self) => self.indexOf(value) === index,\r\n                      )}\r\n                    placeholder={\r\n                      errors?.category?.type === \"required\"\r\n                        ? \"This field is required!\"\r\n                        : \"Choose category...\"\r\n                    }\r\n                    onChange={value => field.onChange(value)}\r\n                    required={errors?.category?.type === \"required\"}\r\n                  />\r\n                )}\r\n              />\r\n            </DialogSoloContainer>\r\n\r\n            <DialogSoloContainer>\r\n              <Input\r\n                {...register(\"description\", { value: \"\" })}\r\n                type=\"string\"\r\n                color={designSystem.color.normal}\r\n                placeholder=\"Description\"\r\n              />\r\n            </DialogSoloContainer>\r\n\r\n            <DialogDuoContainer>\r\n              <Controller\r\n                control={control}\r\n                name=\"type\"\r\n                defaultValue=\"Income\"\r\n                render={({ field }) => (\r\n                  <SegmentedControl\r\n                    options={transactionTypes}\r\n                    onChange={value => field.onChange(value)}\r\n                  />\r\n                )}\r\n              />\r\n              <Pane>\r\n                <Label>\r\n                  {Translate(\"quantity\")}:\r\n                  <Input\r\n                    {...register(\"quantity\", { required: true })}\r\n                    type=\"number\"\r\n                    min={1}\r\n                    width={designSystem.indent[86]}\r\n                    marginLeft={designSystem.indent[8]}\r\n                    color={designSystem.color.normal}\r\n                  />\r\n                </Label>\r\n              </Pane>\r\n            </DialogDuoContainer>\r\n\r\n            <DialogEndLineContainer>\r\n              <Button type=\"submit\">{Translate(\"confirm\")}</Button>\r\n            </DialogEndLineContainer>\r\n          </DialogContainer>\r\n        </form>\r\n      </Dialog>\r\n    );\r\n  },\r\n);\r\n\r\nexport { AddTransactionForm };\r\n","import React, { useContext, useState } from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport { SubmitHandler } from \"react-hook-form\";\r\n\r\nimport { Plus } from \"components/Plus\";\r\nimport { AddTransactionForm } from \"pages/Home/containers/AddTransaction/AddTransactionForm\";\r\n\r\nimport { transactionsAPI } from \"services/ApiService\";\r\nimport { OperationsStoreContext } from \"stores/OperationsStore\";\r\n\r\nimport { TransactionTypes } from \"services/ApiService/types/transactionTypes\";\r\n\r\nconst AddTransaction = observer(() => {\r\n  const OperationsStore = useContext(OperationsStoreContext);\r\n\r\n  const [isAddTransactionShown, setIsAddTransactionShown] = useState(false);\r\n\r\n  const onSubmitAddTransaction: SubmitHandler<TransactionTypes> = ({\r\n    _userId,\r\n    date,\r\n    description,\r\n    category,\r\n    quantity,\r\n    type,\r\n  }) => {\r\n    transactionsAPI\r\n      .createTransaction({\r\n        _userId,\r\n        type,\r\n        quantity,\r\n        category,\r\n        date,\r\n        description,\r\n      })\r\n      .then(data => {\r\n        OperationsStore.addTransaction(data);\r\n        setIsAddTransactionShown(!!data.__v);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Plus onClick={() => setIsAddTransactionShown(true)} />\r\n      <AddTransactionForm\r\n        title=\"Add Transaction\"\r\n        isShown={isAddTransactionShown}\r\n        onCloseComplete={() => setIsAddTransactionShown(false)}\r\n        onSubmit={onSubmitAddTransaction}\r\n      />\r\n    </>\r\n  );\r\n});\r\n\r\nexport { AddTransaction };\r\n","import styled from \"styled-components\";\r\n\r\nconst BarContainer = styled.div`\r\n  max-width: 100%;\r\n  padding: 32px 69px 20px 43px;\r\n`;\r\n\r\nexport { BarContainer };\r\n","import { Chart } from \"react-chartjs-2\";\r\n\r\nChart.defaults.font.size = 16;\r\nChart.defaults.font.weight = \"bold\";\r\nChart.defaults.color = \"#435379\";\r\n\r\nexport const datasets = {\r\n  label: \"\",\r\n  backgroundColor: \"rgba(67, 83, 121, 0.5)\",\r\n  borderRadius: 4,\r\n  hoverBackgroundColor: \"rgba(67, 83, 121, 0.9)\",\r\n  categoryPercentage: 1,\r\n};\r\n\r\nexport const options = {\r\n  plugins: {\r\n    legend: {\r\n      display: false,\r\n    },\r\n    tooltip: {\r\n      mode: \"index\",\r\n      intersect: false,\r\n      caretSize: 3,\r\n    },\r\n    datalabels: {\r\n      display: false,\r\n    },\r\n  },\r\n\r\n  maintainAspecrRatio: false,\r\n  scales: {\r\n    yAxes: {\r\n      ticks: {\r\n        beginAtZero: true,\r\n        min: 0,\r\n        // stepSize: 50,\r\n        crossAlign: \"start\",\r\n        callback: function(value: number) {\r\n          const yAxes = value == 0 ? value : `$${value}.00`;\r\n          return yAxes;\r\n        },\r\n      },\r\n\r\n      grid: {\r\n        display: false,\r\n      },\r\n      stacked: true,\r\n    },\r\n\r\n    xAxes: {\r\n      ticks: {},\r\n      grid: {\r\n        display: false,\r\n      },\r\n    },\r\n  },\r\n};\r\n","import React, { useContext } from \"react\";\r\nimport { compareAsc, parse } from \"date-fns\";\r\n\r\nimport { Bar } from \"react-chartjs-2\";\r\nimport { BarContainer } from \"./styled\";\r\nimport { datasets, options } from \"./constants/charConfig\";\r\nimport { OperationsStoreContext } from \"stores/OperationsStore\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { toJS } from \"mobx\";\r\nimport { getFirstAndLastDayMonth } from \"../../utils/getDateRange\";\r\n\r\ntype Props = {\r\n  dateRange: string[];\r\n  toggleBudget: boolean;\r\n};\r\nconst ChartBar: React.FC<Props> = observer(({ dateRange, toggleBudget }) => {\r\n  const OperationsStore = useContext(OperationsStoreContext);\r\n\r\n  const firstDay = getFirstAndLastDayMonth().firstDay;\r\n  const lastDay = getFirstAndLastDayMonth().lastDay;\r\n\r\n  const typeBudget = toggleBudget ? \"Expenses\" : \"Income\";\r\n\r\n  const expensesByDateRange = toJS(OperationsStore.data)\r\n    .filter(({ type, date }) => {\r\n      return (\r\n        typeBudget === type &&\r\n        [0, 1].some(\r\n          n =>\r\n            n === compareAsc(parse(date, \"dd/MM/yyyy\", new Date()), firstDay),\r\n        ) &&\r\n        [-1, 0].some(\r\n          n => n === compareAsc(parse(date, \"dd/MM/yyyy\", new Date()), lastDay),\r\n        )\r\n      );\r\n    })\r\n    .sort((a: any, b: any) => compareAsc(new Date(a.date), new Date(b.date)));\r\n\r\n  const quantitiesByDates = dateRange.map(dateFromRange => {\r\n    return expensesByDateRange\r\n      .filter(({ date }) => {\r\n        return (\r\n          parse(dateFromRange, \"dd.MM.yy\", new Date()).getTime() ===\r\n          parse(date, \"dd/MM/yyyy\", new Date()).getTime()\r\n        );\r\n      })\r\n      .reduce((acc, cur) => {\r\n        return acc + cur.quantity;\r\n      }, 0);\r\n  });\r\n\r\n  const records = {\r\n    labels: dateRange,\r\n    datasets: [\r\n      {\r\n        data: quantitiesByDates,\r\n        ...datasets,\r\n      },\r\n    ],\r\n  };\r\n\r\n  return (\r\n    <BarContainer>\r\n      <Bar data={records} options={options} />\r\n    </BarContainer>\r\n  );\r\n});\r\n\r\nexport { ChartBar };\r\n","import { Chart } from \"chart.js\";\r\nimport ChartDataLabels from \"chartjs-plugin-datalabels\";\r\n\r\nChart.register(ChartDataLabels);\r\n\r\nwindow.addEventListener(\"resize\", () => {\r\n  if (window.innerWidth < 450) {\r\n    Chart.defaults.font.size = 13;\r\n  } else {\r\n    Chart.defaults.font.size = 18;\r\n  }\r\n});\r\n\r\nexport const datasets = {\r\n  label: \"Траты\",\r\n  backgroundColor: [\r\n    \"rgba(255, 99, 132, 0.5)\",\r\n    \"rgba(54, 162, 235, 0.5)\",\r\n    \"rgba(255, 206, 86, 0.5)\",\r\n    \"rgba(75, 192, 192, 0.5)\",\r\n    \"rgba(153, 102, 255, 0.5)\",\r\n    \"rgba(255, 159, 64, 0.5)\",\r\n    \"rgba(217, 213, 7, 0.5)\",\r\n  ],\r\n  borderColor: [\r\n    \"rgba(255, 99, 132, 1)\",\r\n    \"rgba(54, 162, 235, 1)\",\r\n    \"rgba(255, 206, 86, 1)\",\r\n    \"rgba(75, 192, 192, 1)\",\r\n    \"rgba(153, 102, 255, 1)\",\r\n    \"rgba(255, 159, 64, 1)\",\r\n    \"rgba(217, 213, 7, 1)\",\r\n    // \"#435379\",\r\n  ],\r\n  borderWidth: 1,\r\n  hoverOffset: 15,\r\n  spacing: 1,\r\n};\r\n\r\nexport const datalabelsOptions = {\r\n  display: true,\r\n  align: \"end\",\r\n  borderRadius: 3,\r\n  color: \"#2a3d69\",\r\n  font: {\r\n    size: 18,\r\n    weight: \"bold\",\r\n  },\r\n};\r\n\r\nexport const legend = {\r\n  position: \"left\",\r\n  onClick: false,\r\n};\r\n\r\n// const colorPie = OperationsStore.data.map(i => {\r\n//   switch (i.category) {\r\n//     case \"Clothes\":\r\n//       return \"#FFD3C9\";\r\n//     case \"Food\":\r\n//       return \"#FFEAC2\";\r\n//     case \"Home service\":\r\n//       return \"#F0E3FF\";\r\n//     case \"Health\":\r\n//       return \"#CDF9E1\";\r\n//     case \"Restaurants\":\r\n//       return \"#FFE5F3\";\r\n//     case \"Entertainment\":\r\n//       return \"#F0E3FF\";\r\n//     case \"Salary\":\r\n//       return \"#DDEFFF\";\r\n//     case \"Transport\":\r\n//       return \"#FFE5F3\";\r\n//     case \"Credits\":\r\n//       return \"#dde8f0\";\r\n//     case \"Gifts\":\r\n//       return \"#85c8de\";\r\n//     case \"Benefit\":\r\n//       return \"#b1daea\";\r\n//     case \"Aid\":\r\n//       return \"#dae5ea\";\r\n//     case \"Award\":\r\n//       return \"#64ac8f\";\r\n//     case \"Dues\":\r\n//       return \"#94d6ba\";\r\n//     case \"Petrol\":\r\n//       return \"#e7f5dc\";\r\n//     case \"Phone\":\r\n//       return \"#c0dfc2\";\r\n//     case \"Public service\":\r\n//       return \"#D9FFFF\";\r\n//     case \"Kindergarten\":\r\n//       return \"#0195ae\";\r\n//     case \"Gym\":\r\n//       return \"#85c8de\";\r\n//     case \"Insurance\":\r\n//       return \"#b1daea\";\r\n//     case \"Vacation\":\r\n//       return \"#dae5ea\";\r\n//     case \"Repairs\":\r\n//       return \"#64ac8f\";\r\n//     case \"Medicine\":\r\n//       return \"#94d6ba\";\r\n//     case \"Travel\":\r\n//       return \"#B3FFFC\";\r\n//     case \"Home appliances\":\r\n//       return \"#97cbdc\";\r\n//     case \"Books\":\r\n//       return \"#018abd\";\r\n//     case \"Furniture\":\r\n//       return \"#018abd\";\r\n//     default:\r\n//       return `${designSystem.color.light}`;\r\n//   }\r\n// });\r\n","export default __webpack_public_path__ + \"static/media/pie-chart-svgrepo-com.1e414cfd.svg\";","import { designSystem } from \"constants/designSystem\";\r\nimport styled from \"styled-components\";\r\nimport Analytics from \"../../assets/icons/pie-chart-svgrepo-com.svg\";\r\n\r\nconst PieContainer = styled.div`\r\n  position: relative;\r\n  margin: 0 auto;\r\n  max-width: 1000px;\r\n  position: relative;\r\n  margin-top: 50px;\r\n\r\n  ::before {\r\n    content: \"\";\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 1px;\r\n    background-color: ${designSystem.color.light};\r\n  }\r\n`;\r\n\r\nconst PieTitle = styled.div`\r\n  padding-top: 70px;\r\n  text-align: center;\r\n`;\r\n\r\nconst Text = styled.p`\r\n  font-size: ${designSystem.text.fontSize[24]};\r\n  color: ${designSystem.color.normal};\r\n  position: relative;\r\n\r\n  ::after {\r\n    content: \"\";\r\n    position: absolute;\r\n    background: url(${Analytics});\r\n    width: 25px;\r\n    height: 25px;\r\n    background-position: center;\r\n    background-repeat: no-repeat;\r\n  }\r\n`;\r\n\r\nexport { PieContainer, PieTitle, Text };\r\n","import React, { useContext } from \"react\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { Pie } from \"react-chartjs-2\";\r\nimport { Chart } from \"chart.js\";\r\nimport ChartDataLabels from \"chartjs-plugin-datalabels\";\r\n\r\nimport { datasets, datalabelsOptions, legend } from \"./constants/charConfig\";\r\nimport { OperationsStoreContext } from \"stores/OperationsStore\";\r\n\r\nimport { PieContainer, PieTitle, Text } from \"./styled\";\r\nimport Translate from \"i18n/messages/translate\";\r\n\r\nconst ChartPie = observer(() => {\r\n  const OperationsStore = useContext(OperationsStoreContext);\r\n\r\n  Chart.register(ChartDataLabels);\r\n\r\n  const expensesCategory = OperationsStore.data.filter(\r\n    i => i.type == \"Expenses\",\r\n  );\r\n  const transactionsByCategory = expensesCategory.reduce(\r\n    (acc: any, cur) => (\r\n      (acc[cur.category] = (acc[cur.category] || 0) + cur.quantity), acc\r\n    ),\r\n    [],\r\n  );\r\n  const dataQuantity = Object.keys(transactionsByCategory).map(\r\n    i => transactionsByCategory[i],\r\n  );\r\n\r\n  const generalExp = dataQuantity.reduce((acc, cur) => acc + cur, 0);\r\n\r\n  const records = {\r\n    labels: Object.keys(transactionsByCategory),\r\n    datasets: [\r\n      {\r\n        data: dataQuantity,\r\n        ...datasets,\r\n      },\r\n    ],\r\n  };\r\n\r\n  const options = {\r\n    responsive: true,\r\n    radius: \"90%\",\r\n    plugins: {\r\n      legend: legend,\r\n      datalabels: {\r\n        ...datalabelsOptions,\r\n        formatter: (value: number) => {\r\n          const sum = (value * 100) / generalExp;\r\n          return `${sum.toFixed(2)}%`;\r\n        },\r\n      },\r\n    },\r\n  };\r\n\r\n  return (\r\n    <PieContainer>\r\n      <PieTitle>\r\n        <Text>{Translate(\"pieCategory\")}⠀</Text>\r\n      </PieTitle>\r\n\r\n      <Pie data={records} options={options} />\r\n    </PieContainer>\r\n  );\r\n});\r\n\r\nexport default ChartPie;\r\n","import styled from \"styled-components\";\r\nimport { designSystem } from \"constants/designSystem\";\r\n\r\nconst IncExpContent = styled.div`\r\n  display: flex;\r\n\r\n  @media (max-width: 1200px) {\r\n    flex-direction: column;\r\n    align-items: center;\r\n  }\r\n  @media (max-width: 584px) {\r\n    padding-bottom: ${designSystem.indent[16]};\r\n  }\r\n`;\r\n\r\nconst Text = styled.span`\r\n  padding-bottom: ${designSystem.indent[8]};\r\n  font-weight: ${designSystem.text.weight.bold};\r\n  font-size: ${designSystem.text.fontSize[24]};\r\n  color: ${designSystem.color.green};\r\n\r\n  :last-child {\r\n    padding-bottom: 0;\r\n    padding-left: ${designSystem.indent[16]};\r\n    color: ${designSystem.color.red};\r\n  }\r\n\r\n  @media (max-width: 1300px) {\r\n    font-size: 20px;\r\n  }\r\n\r\n  @media (max-width: 956px) {\r\n    font-size: ${designSystem.text.fontSize[18]};\r\n  }\r\n`;\r\n\r\nexport { IncExpContent, Text };\r\n","import React, { useContext } from \"react\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { OperationsStoreContext } from \"stores/OperationsStore\";\r\nimport { IncExpContent, Text } from \"./styled\";\r\nimport Translate from \"i18n/messages/translate\";\r\n\r\nconst GeneralIncExp = observer(() => {\r\n  const OperationsStore = useContext(OperationsStoreContext);\r\n\r\n  const dataExp = OperationsStore.data\r\n    .filter(i => i.type == \"Expenses\")\r\n    .map(i => i.quantity);\r\n  const dataInc = OperationsStore.data\r\n    .filter(i => i.type == \"Income\")\r\n    .map(i => i.quantity);\r\n\r\n  const generalExp = dataExp.reduce((acc, cur) => acc + cur, 0);\r\n  const generalInc = dataInc.reduce((acc, cur) => acc + cur, 0);\r\n\r\n  return (\r\n    <>\r\n      <IncExpContent>\r\n        <Text>\r\n          {Translate(\"totalIncome\")}: {generalInc} $\r\n        </Text>\r\n        <Text>\r\n          {Translate(\"totalExpenses\")}: {generalExp} $\r\n        </Text>\r\n      </IncExpContent>\r\n    </>\r\n  );\r\n});\r\n\r\nexport { GeneralIncExp };\r\n","import { designSystem } from \"constants/designSystem\";\r\nimport styled from \"styled-components\";\r\n\r\nconst ContainerCharts = styled.div`\r\n  width: 1360px;\r\n  margin: 0 auto;\r\n  background: ${designSystem.bgColor.white};\r\n  box-shadow: 0px 16px 24px -10px rgba(209, 219, 241, 0.25);\r\n  border-radius: 24px;\r\n  max-width: 100%;\r\n`;\r\n\r\nconst HeaderContent = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 32px 69px 32px 43px;\r\n\r\n  @media (max-width: 956px) {\r\n    flex-wrap: wrap;\r\n  }\r\n  @media (max-width: 584px) {\r\n    flex-direction: column;\r\n    align-items: center;\r\n  }\r\n`;\r\n\r\nconst TitleContent = styled.div`\r\n  @media (max-width: 956px) {\r\n    width: 100%;\r\n    text-align: center;\r\n    padding-bottom: ${designSystem.indent[16]};\r\n  }\r\n`;\r\n\r\nconst DatePickerContent = styled.div`\r\n  width: 500px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n\r\n  @media (max-width: 1000px) {\r\n    flex-direction: column;\r\n    align-items: center;\r\n  }\r\n\r\n  @media (max-width: 956px) {\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nconst TextDatePicker = styled.p`\r\n  font-family: Roboto;\r\n  font-weight: 500;\r\n  font-size: ${designSystem.text.fontSize[16]};\r\n  line-height: 24px;\r\n  color: ${designSystem.color.normal};\r\n  padding-right: ${designSystem.indent[24]};\r\n\r\n  @media (max-width: 1000px) {\r\n    :last-child {\r\n      padding-right: 40px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst DateContainer = styled.div`\r\n  display: flex;\r\n  padding-right: 42px;\r\n  align-items: center;\r\n  :last-child {\r\n    padding-right: 0;\r\n  }\r\n\r\n  @media (max-width: 1000px) {\r\n    padding: 0;\r\n\r\n    :last-child {\r\n      padding-top: 5px;\r\n      padding-left: 20px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst ContentWrapper = styled.div``;\r\n\r\nexport {\r\n  ContainerCharts,\r\n  HeaderContent,\r\n  DatePickerContent,\r\n  TextDatePicker,\r\n  DateContainer,\r\n  TitleContent,\r\n  ContentWrapper,\r\n};\r\n","import styled from \"styled-components\";\r\nimport { designSystem } from \"constants/designSystem\";\r\n\r\nconst BudgetSwitcherButton = styled.button<{ primary?: boolean }>`\r\n  font-family: Roboto;\r\n  font-weight: ${designSystem.text.weight.bold};\r\n  font-size: ${designSystem.text.fontSize[24]};\r\n  line-height: 32px;\r\n  color: ${({ primary }) =>\r\n    primary ? designSystem.color.red : designSystem.color.green};\r\n  background: transparent;\r\n  border: 1px solid rgba(67, 83, 121, 0.4);\r\n  cursor: pointer;\r\n  border-radius: 10px;\r\n  width: 150px;\r\n\r\n  :hover {\r\n    background: rgba(67, 83, 121, 0.1);\r\n  }\r\n`;\r\nexport { BudgetSwitcherButton };\r\n","import Translate from \"i18n/messages/translate\";\r\nimport React from \"react\";\r\nimport { BudgetSwitcherButton } from \"./styled\";\r\n\r\ntype Props = {\r\n  onClick?: (event: React.MouseEvent<HTMLButtonElement>) => void;\r\n  toggle: boolean;\r\n  primary?: boolean;\r\n};\r\n\r\nconst BudgetSwitcher: React.FC<Props> = ({ onClick, toggle, primary }) => {\r\n  return (\r\n    <BudgetSwitcherButton onClick={onClick} primary={primary}>\r\n      {toggle ? Translate(\"expenses\") : Translate(\"income\")}\r\n    </BudgetSwitcherButton>\r\n  );\r\n};\r\n\r\nexport default BudgetSwitcher;\r\n","import Translate from \"i18n/messages/translate\";\r\nimport { Home } from \"pages/Home\";\r\nimport { Info } from \"pages/Info\";\r\n\r\nconst navigationRoutes = [\r\n  { path: \"/\", title: Translate(\"home\"), component: Home },\r\n  { path: \"/info\", title: Translate(\"info\"), component: Info },\r\n];\r\n\r\nexport { navigationRoutes };\r\n","import React from \"react\";\r\n\r\nimport { TableWithFilters } from \"pages/Home/containers/TableWithFiltres\";\r\nimport { AddTransaction } from \"pages/Home/containers/AddTransaction\";\r\n\r\nconst Home = () => {\r\n  return (\r\n    <>\r\n      <TableWithFilters />\r\n      <AddTransaction />\r\n    </>\r\n  );\r\n};\r\n\r\nexport { Home };\r\n","import React, { useState } from \"react\";\r\n\r\nimport { ChartBar } from \"components/ChartBar\";\r\nimport { Datepicker } from \"components/DatePicker\";\r\nimport ChartPie from \"components/ChartPie\";\r\nimport { GeneralIncExp } from \"./components/GeneralIncExp\";\r\n\r\nimport {\r\n  ContainerCharts,\r\n  ContentWrapper,\r\n  DateContainer,\r\n  DatePickerContent,\r\n  HeaderContent,\r\n  TextDatePicker,\r\n  TitleContent,\r\n} from \"./styled\";\r\n\r\nimport { getDateRange, getFirstAndLastDayMonth } from \"utils/getDateRange\";\r\nimport BudgetSwitcher from \"./components/BudgetSwitcher\";\r\nimport Translate from \"i18n/messages/translate\";\r\n\r\nexport type PropsBudget = {\r\n  value: string;\r\n};\r\n\r\nconst Info = () => {\r\n  const [toggleBudget, setToggleBudget] = useState(false);\r\n  const [dateFrom, setDateFrom] = useState<Date>(\r\n    getFirstAndLastDayMonth().firstDay,\r\n  );\r\n  const [dateTo, setDateTo] = useState<Date>(getFirstAndLastDayMonth().lastDay);\r\n  const onChangeDateFrom = (date: Date) => {\r\n    setDateFrom(date);\r\n  };\r\n\r\n  const onChangeDateTo = (date: Date) => {\r\n    setDateTo(date);\r\n  };\r\n\r\n  const onHandlerClick = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n    event.target as HTMLButtonElement;\r\n  };\r\n\r\n  const dateRange =\r\n    new Date(dateFrom) <= new Date(dateTo)\r\n      ? getDateRange(dateFrom, dateTo)\r\n      : [];\r\n\r\n  const handleClick = () => {\r\n    setToggleBudget((prevState: boolean) => !prevState);\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    const trackSwitch: any = window.localStorage.getItem(\"toggleBudget\");\r\n    setToggleBudget(JSON.parse(trackSwitch));\r\n  }, []);\r\n\r\n  React.useEffect(() => {\r\n    window.localStorage.setItem(\"toggleBudget\", JSON.stringify(toggleBudget));\r\n  }, [toggleBudget]);\r\n\r\n  return (\r\n    <>\r\n      <ContainerCharts>\r\n        <HeaderContent>\r\n          <TitleContent>\r\n            <BudgetSwitcher\r\n              onClick={handleClick}\r\n              toggle={toggleBudget}\r\n              primary={toggleBudget}\r\n            />\r\n          </TitleContent>\r\n\r\n          <GeneralIncExp />\r\n\r\n          <ContentWrapper>\r\n            <DatePickerContent>\r\n              <DateContainer>\r\n                <TextDatePicker>{Translate(\"from\")}</TextDatePicker>\r\n                <Datepicker\r\n                  onClick={onHandlerClick}\r\n                  onChange={onChangeDateFrom}\r\n                  value={dateFrom}\r\n                  dateTo={dateTo}\r\n                  selected={dateFrom}\r\n                />\r\n              </DateContainer>\r\n              <DateContainer>\r\n                <TextDatePicker>{Translate(\"to\")}</TextDatePicker>\r\n                <Datepicker\r\n                  onClick={onHandlerClick}\r\n                  onChange={onChangeDateTo}\r\n                  value={dateTo}\r\n                  dateFrom={dateFrom}\r\n                  selected={dateTo}\r\n                />\r\n              </DateContainer>\r\n            </DatePickerContent>\r\n          </ContentWrapper>\r\n        </HeaderContent>\r\n\r\n        <ChartBar dateRange={dateRange} toggleBudget={toggleBudget} />\r\n        <ChartPie />\r\n      </ContainerCharts>\r\n    </>\r\n  );\r\n};\r\n\r\nexport { Info };\r\n","export default __webpack_public_path__ + \"static/media/logo.bb23e1cd.svg\";","export const LOCALES = {\r\n  ENGLISH: \"en\",\r\n  RUSSIAN: \"ru\",\r\n};\r\n","import { LOCALES } from \"i18n/locales\";\r\n\r\nexport default {\r\n  [LOCALES.ENGLISH]: {\r\n    home: \"Home\",\r\n    info: \"Info\",\r\n    auth: \"Authentication\",\r\n    filterCategore: \"Choose category filters...\",\r\n    transactionsList: \"Transactions list\",\r\n    date: \"Date\",\r\n    income: \"Income\",\r\n    expenses: \"Expenses\",\r\n    category: \"Category\",\r\n    type: \"Type\",\r\n    quantity: \"Quantity\",\r\n    totalIncome: \"Total income\",\r\n    totalExpenses: \"Total expenses\",\r\n    from: \"From\",\r\n    to: \"To\",\r\n    pieCategory: \"Expenses by Category\",\r\n    dateRequired: \"Field date is required\",\r\n    confirm: \"Confirm\",\r\n    fieldRequired: \"This field is required!\",\r\n    chooseCategory: \"Choose category...\",\r\n  },\r\n};\r\n","import { LOCALES } from \"i18n/locales\";\r\n\r\nexport default {\r\n  [LOCALES.RUSSIAN]: {\r\n    home: \"Главная\",\r\n    info: \"Информация\",\r\n    auth: \"Авторизация\",\r\n    filterCategore: \"Выберите фильтры категорий...\",\r\n    transactionsList: \"Список транзакций\",\r\n    date: \"Дата\",\r\n    income: \"Доход\",\r\n    expenses: \"Расход\",\r\n    category: \"Категория\",\r\n    type: \"Тип\",\r\n    quantity: \"Количество\",\r\n    totalIncome: \"Общий доход\",\r\n    totalExpenses: \"Общий расход\",\r\n    from: \"От\",\r\n    to: \"До\",\r\n    pieCategory: \"Расходы по категориям\",\r\n    dateRequired: \"Дата поля обязательна\",\r\n    confirm: \"Подтвердить\",\r\n    fieldRequired: \"Это поле обязательно к заполнению!\",\r\n    chooseCategory: \"Выберите категорию ...\",\r\n  },\r\n};\r\n","import en from \"./en\";\r\nimport ru from \"./ru\";\r\n\r\nexport default {\r\n  ...en,\r\n  ...ru,\r\n};\r\n","import React, { Fragment } from \"react\";\r\nimport { IntlProvider } from \"react-intl\";\r\n\r\nimport { LOCALES } from \"./locales\";\r\nimport messages from \"./messages\";\r\n\r\nconst Provider = ({ children, locale = LOCALES.ENGLISH }: any) => {\r\n  return (\r\n    <IntlProvider\r\n      locale={locale}\r\n      textComponent={Fragment}\r\n      messages={messages[locale]}\r\n    >\r\n      {children}\r\n    </IntlProvider>\r\n  );\r\n};\r\n\r\nexport default Provider;\r\n","import { designSystem } from \"constants/designSystem\";\r\nimport styled from \"styled-components\";\r\n\r\nconst TranslateContainer = styled.div``;\r\n\r\nconst ButtonToggle = styled.button`\r\n  font-family: Roboto;\r\n  font-weight: ${designSystem.text.weight.bold};\r\n  font-size: ${designSystem.text.fontSize[16]};\r\n  line-height: 20px;\r\n  color: ${designSystem.color.normal};\r\n  background: transparent;\r\n  border: 1px solid rgba(67, 83, 121, 0.4);\r\n  cursor: pointer;\r\n  border-radius: 10px;\r\n  width: 50px;\r\n  align-items: center;\r\n\r\n  :hover {\r\n    background: rgba(67, 83, 121, 0.1);\r\n  }\r\n`;\r\n\r\nexport { ButtonToggle, TranslateContainer };\r\n","import React from \"react\";\r\nimport { LOCALES } from \"i18n\";\r\nimport { ButtonToggle, TranslateContainer } from \"./styled\";\r\n\r\ntype Props = {\r\n  locale?: string;\r\n  setClick?: any;\r\n};\r\nconst TranslateButton: React.FC<Props> = ({ locale, setClick }) => {\r\n  return (\r\n    <TranslateContainer>\r\n      {locale === LOCALES.ENGLISH ? (\r\n        <ButtonToggle onClick={() => setClick(LOCALES.RUSSIAN)}>\r\n          RU\r\n        </ButtonToggle>\r\n      ) : (\r\n        <ButtonToggle onClick={() => setClick(LOCALES.ENGLISH)}>\r\n          EN\r\n        </ButtonToggle>\r\n      )}\r\n    </TranslateContainer>\r\n  );\r\n};\r\n\r\nexport default TranslateButton;\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nimport { Profile } from \"components/Profile\";\r\nimport { SettingsButton } from \"components/Button/SettingsButton\";\r\nimport ToggleSwitch from \"components/Button/ToggleSwitch\";\r\nimport {\r\n  HeaderContainer,\r\n  HeaderLeftSide,\r\n  HeaderLinks,\r\n  HeaderRightSide,\r\n  StyledNavLink,\r\n} from \"./styled\";\r\n\r\nimport { navigationRoutes } from \"constants/navigationRoutes\";\r\n\r\nimport Logo from \"assets/icons/logo.svg\";\r\nimport Translate from \"i18n/messages/translate\";\r\nimport TranslateButton from \"components/Button/TranslateButton\";\r\n\r\ntype Props = {\r\n  localeApp: string;\r\n  setLocaleApp: any;\r\n};\r\n\r\nconst Header: React.FC<Props> = ({ setLocaleApp, localeApp }) => {\r\n  const [profileName, setProfileName] = useState<any>(\"Profile\");\r\n\r\n  useEffect(() => {\r\n    if (localStorage.getItem(\"username\")) {\r\n      setProfileName(localStorage.getItem(\"username\"));\r\n    } else {\r\n      setProfileName(\"Profile\");\r\n    }\r\n  }, [localStorage.getItem(\"username\")]);\r\n\r\n  return (\r\n    <HeaderContainer>\r\n      <HeaderLeftSide>\r\n        <StyledNavLink exact to=\"/\">\r\n          <img src={Logo} alt=\"Finance App\" />\r\n        </StyledNavLink>\r\n\r\n        <nav>\r\n          <HeaderLinks>\r\n            {navigationRoutes.map(({ path, title }) => (\r\n              <li key={path}>\r\n                <StyledNavLink exact to={path} activeClassName={\"active\"}>\r\n                  {title}\r\n                </StyledNavLink>\r\n              </li>\r\n            ))}\r\n            <StyledNavLink exact to={\"/auth\"} activeClassName={\"active\"}>\r\n              {Translate(\"auth\")}\r\n            </StyledNavLink>\r\n          </HeaderLinks>\r\n        </nav>\r\n      </HeaderLeftSide>\r\n\r\n      <HeaderRightSide>\r\n        <StyledNavLink exact to={\"/auth\"}>\r\n          <Profile name={profileName} />\r\n        </StyledNavLink>\r\n        <SettingsButton />\r\n        <TranslateButton setClick={setLocaleApp} locale={localeApp} />\r\n        <ToggleSwitch />\r\n      </HeaderRightSide>\r\n    </HeaderContainer>\r\n  );\r\n};\r\n\r\nexport { Header };\r\n","import { designSystem } from \"constants/designSystem\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledText = styled.div`\r\n  a {\r\n    text-transform: uppercase;\r\n    color: ${designSystem.color.normal};\r\n    text-decoration: none;\r\n    font-family: inherit;\r\n  }\r\n`;\r\n\r\nexport { StyledText };\r\n","import React from \"react\";\r\n\r\nimport { Pane } from \"components/Pane\";\r\nimport { StyledText } from \"./styled\";\r\n\r\nimport { designSystem } from \"constants/designSystem\";\r\n\r\nconst Footer = () => {\r\n  const year = new Date().getFullYear();\r\n  //add href\r\n  return (\r\n    <footer>\r\n      <Pane\r\n        padding={designSystem.size[16]}\r\n        display=\"flex\"\r\n        justifyContent=\"center\"\r\n      >\r\n        <StyledText>\r\n          <a type=\"email\" href=\"\">\r\n            © {year}\r\n          </a>\r\n        </StyledText>\r\n      </Pane>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport { Footer };\r\n","import styled from \"styled-components\";\r\n\r\nimport { Pane } from \"components/Pane\";\r\n\r\nimport { designSystem } from \"constants/designSystem\";\r\n\r\nconst StyledError = styled.p`\r\n  &:before {\r\n    content: \"⚠ \";\r\n  }\r\n  color: ${designSystem.text.color.warning};\r\n  font-size: ${designSystem.text.fontSize[14]};\r\n  font-family: \"Segoe UI\", sans-serif;\r\n`;\r\n\r\nconst UserContainer = styled.div`\r\n  font-size: ${designSystem.text.fontSize[\"18\"]};\r\n  color: ${designSystem.text.color.success};\r\n  text-align: center;\r\n`;\r\n\r\nconst AuthFormCommonContainer = styled(Pane)`\r\n  background-color: ${designSystem.bgColor.white};\r\n  padding: ${designSystem.size[\"32\"]}px;\r\n  box-shadow: 0 6px 6px rgba(0, 0, 0, 0.3);\r\n`;\r\n\r\nconst AuthFormContainer = styled(Pane)`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: ${designSystem.indent[\"16\"]};\r\n`;\r\n\r\nexport {\r\n  StyledError,\r\n  UserContainer,\r\n  AuthFormCommonContainer,\r\n  AuthFormContainer,\r\n};\r\n","import React from \"react\";\r\nimport { useForm, SubmitHandler } from \"react-hook-form\";\r\n\r\nimport { Label } from \"components/Label\";\r\nimport { Input } from \"components/Input\";\r\nimport { Button } from \"components/Button\";\r\n\r\nimport { designSystem } from \"constants/designSystem\";\r\nimport {\r\n  AuthFormContainer,\r\n  AuthFormCommonContainer,\r\n  StyledError,\r\n  UserContainer,\r\n} from \"./styled\";\r\n\r\nimport { InputsProps } from \"pages/Auth/types/inputs\";\r\n\r\ntype AuthFormProps = {\r\n  title: string;\r\n  onSubmit: SubmitHandler<any>;\r\n  userName: string;\r\n  isRegisterForm: boolean;\r\n};\r\n\r\nconst AuthForm: React.FC<AuthFormProps> = ({\r\n  title,\r\n  onSubmit,\r\n  userName,\r\n  isRegisterForm,\r\n}) => {\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm<InputsProps>();\r\n\r\n  return (\r\n    <>\r\n      {userName && isRegisterForm && (\r\n        <>\r\n          <UserContainer>\r\n            User {userName} successfully registered!\r\n          </UserContainer>\r\n          <UserContainer> Please Sing in</UserContainer>\r\n        </>\r\n      )}\r\n      <AuthFormCommonContainer>\r\n        <form onSubmit={handleSubmit(onSubmit)}>\r\n          <AuthFormContainer>\r\n            <Label>\r\n              Username\r\n              <Input\r\n                {...register(\"username\", { required: true })}\r\n                width=\"100%\"\r\n                marginTop={designSystem.indent[8]}\r\n              />\r\n            </Label>\r\n            {errors?.username?.type === \"required\" && (\r\n              <StyledError>This field is required</StyledError>\r\n            )}\r\n            <Label>\r\n              Password\r\n              <Input\r\n                {...register(\"password\", {\r\n                  required: true,\r\n                  minLength: 4,\r\n                  maxLength: 10,\r\n                })}\r\n                width=\"100%\"\r\n                type=\"password\"\r\n                marginTop={designSystem.indent[8]}\r\n              />\r\n            </Label>\r\n            {errors?.password?.type === \"required\" && (\r\n              <StyledError>This field is required</StyledError>\r\n            )}\r\n            {errors?.password?.type === \"minLength\" && (\r\n              <StyledError>\r\n                Password can not be less than 4 characters\r\n              </StyledError>\r\n            )}\r\n            {errors?.password?.type === \"maxLength\" && (\r\n              <StyledError>Password cannot exceed 10 characters</StyledError>\r\n            )}\r\n            <Button type=\"submit\">{title}</Button>\r\n          </AuthFormContainer>\r\n        </form>\r\n      </AuthFormCommonContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport { AuthForm };\r\n","import styled from \"styled-components\";\r\n\r\nimport { designSystem } from \"constants/designSystem\";\r\n\r\nconst StyledAuthForm = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  gap: ${designSystem.indent[32]};\r\n`;\r\n\r\nconst StyledError = styled.p`\r\n  &:before {\r\n    content: \"⚠ \";\r\n  }\r\n  color: ${designSystem.text.color.warning};\r\n  font-family: \"Segoe UI\", sans-serif;\r\n`;\r\n\r\nconst AuthWithErrorContainer = styled.div`\r\n  display: flex;\r\n  gap: ${designSystem.indent[\"64\"]};\r\n`;\r\n\r\nconst AuthContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: ${designSystem.indent[\"16\"]};\r\n`;\r\n\r\nexport { StyledAuthForm, StyledError, AuthWithErrorContainer, AuthContainer };\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport { SubmitHandler } from \"react-hook-form\";\r\nimport { useHistory } from \"react-router\";\r\nimport { observer } from \"mobx-react-lite\";\r\n\r\nimport { Button } from \"components/Button\";\r\nimport { AuthForm } from \"pages/Auth/containers/AuthForm\";\r\nimport {\r\n  AuthContainer,\r\n  AuthWithErrorContainer,\r\n  StyledAuthForm,\r\n  StyledError,\r\n} from \"./styled\";\r\n\r\nimport { OperationsStoreContext } from \"stores/OperationsStore\";\r\nimport { authAPI } from \"services/ApiService\";\r\n\r\nimport { InputsProps } from \"pages/Auth/types/inputs\";\r\nimport { Placeholder } from \"../../components/Placeholder\";\r\n\r\nconst Auth = observer(() => {\r\n  const OperationStore = useContext(OperationsStoreContext);\r\n\r\n  const [toggleForm, setToggleForm] = useState(true);\r\n  const [error, setError] = useState(\"\");\r\n  const [userName, setUserName] = useState<string>(\"\");\r\n  const [isRegisterForm, setIsRegisterForm] = useState(false);\r\n\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    const nameToken = localStorage.getItem(\"username\");\r\n    if (nameToken) {\r\n      setUserName(nameToken);\r\n    }\r\n  }, [localStorage.getItem(\"username\")]);\r\n\r\n  const onSubmitRegister: SubmitHandler<InputsProps> = ({\r\n    username,\r\n    password,\r\n  }) => {\r\n    authAPI\r\n      .register(username, password)\r\n      .then(() => {\r\n        setToggleForm(true);\r\n        setIsRegisterForm(true);\r\n        setUserName(username);\r\n      })\r\n      .catch(error => {\r\n        setError(error.response?.data);\r\n      });\r\n  };\r\n\r\n  const onSubmitLogin: SubmitHandler<InputsProps> = ({\r\n    username,\r\n    password,\r\n  }) => {\r\n    authAPI\r\n      .login(username, password)\r\n      .then(data => {\r\n        (() => {\r\n          localStorage.setItem(\"token\", data.token);\r\n          localStorage.setItem(\"username\", username);\r\n          setIsRegisterForm(false);\r\n          OperationStore.login();\r\n          history.push(\"/\");\r\n        })();\r\n      })\r\n      .catch(error => setError(error.response?.data.message));\r\n  };\r\n\r\n  if (OperationStore.isLoading) {\r\n    return <Placeholder width={150} />;\r\n  }\r\n\r\n  return (\r\n    <StyledAuthForm>\r\n      <AuthWithErrorContainer>\r\n        <AuthContainer>\r\n          {OperationStore.isAuth ? (\r\n            <>\r\n              <p>Hello {userName}!</p>\r\n              <Button\r\n                onClick={() => {\r\n                  localStorage.removeItem(\"username\");\r\n                  localStorage.removeItem(\"token\");\r\n                  setUserName(\"\");\r\n                  OperationStore.logout();\r\n                  setToggleForm(true);\r\n                }}\r\n              >\r\n                Log out\r\n              </Button>\r\n            </>\r\n          ) : (\r\n            <>\r\n              {toggleForm ? (\r\n                <>\r\n                  <AuthForm\r\n                    userName={userName}\r\n                    title=\"Sign in\"\r\n                    onSubmit={onSubmitLogin}\r\n                    isRegisterForm={isRegisterForm}\r\n                  />\r\n                  <Button onClick={() => setToggleForm(false)}>Register</Button>\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <AuthForm\r\n                    userName={userName}\r\n                    title=\"Sign up\"\r\n                    onSubmit={onSubmitRegister}\r\n                    isRegisterForm={isRegisterForm}\r\n                  />\r\n                  <Button onClick={() => setToggleForm(true)}>Login</Button>\r\n                </>\r\n              )}\r\n            </>\r\n          )}\r\n        </AuthContainer>\r\n      </AuthWithErrorContainer>\r\n      {error && !userName && <StyledError>{error.toUpperCase()}</StyledError>}\r\n    </StyledAuthForm>\r\n  );\r\n});\r\n\r\nexport { Auth };\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n\r\nconst PrivateRoute = (props: any) => {\r\n  const token = localStorage.getItem(\"token\");\r\n\r\n  if (token) {\r\n    return <Route {...props} />;\r\n  }\r\n\r\n  return <Redirect to=\"/auth\" />;\r\n};\r\n\r\nexport { PrivateRoute };\r\n","import React from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\n\r\nimport { Auth } from \"pages/Auth\";\r\nimport { PrivateRoute } from \"pages/Auth/containers/PrivateRoute\";\r\n\r\nimport { navigationRoutes } from \"constants/navigationRoutes\";\r\n\r\nconst NavigationSwitch = () => {\r\n  return (\r\n    <Switch>\r\n      {navigationRoutes.map(({ path, component }) => (\r\n        <PrivateRoute key={path} exact path={path} component={component} />\r\n      ))}\r\n      <Route exact path=\"/auth\" component={Auth} />\r\n    </Switch>\r\n  );\r\n};\r\n\r\nexport { NavigationSwitch };\r\n","import React, { useContext, useEffect } from \"react\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\n\r\nimport { MainContainer } from \"./styled\";\r\nimport { Header } from \"components/Header\";\r\nimport { Footer } from \"components/Footer\";\r\nimport { Pane } from \"components/Pane\";\r\n\r\nimport { NavigationSwitch } from \"App/NavigationSwitch\";\r\nimport { OperationsStoreContext } from \"stores/OperationsStore\";\r\nimport { observer } from \"mobx-react-lite\";\r\n\r\nimport { I18nProvider, LOCALES } from \"i18n/index\";\r\n\r\nconst App = observer(() => {\r\n  const OperationsStore = useContext(OperationsStoreContext);\r\n\r\n  const [locale, setLocale] = React.useState(LOCALES.ENGLISH);\r\n\r\n  useEffect(() => {\r\n    OperationsStore.fetch();\r\n  }, [OperationsStore.isAuth]);\r\n\r\n  return (\r\n    <I18nProvider locale={locale}>\r\n      <MainContainer>\r\n        <Router>\r\n          <Pane>\r\n            <Header localeApp={locale} setLocaleApp={setLocale} />\r\n            <NavigationSwitch />\r\n          </Pane>\r\n          <Footer />\r\n        </Router>\r\n      </MainContainer>\r\n    </I18nProvider>\r\n  );\r\n});\r\n\r\nexport { App };\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { ThemeProvider } from \"components/ThemeContext\";\r\n\r\nimport { App } from \"App\";\r\n\r\nimport \"index.css\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <ThemeProvider>\r\n      <App />\r\n    </ThemeProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\"),\r\n);\r\n"],"sourceRoot":""}